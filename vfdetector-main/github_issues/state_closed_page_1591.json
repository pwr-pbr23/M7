[{"number": 5182, "title": "Build error: missing dependency declarations for the following files included by 'external/jpeg_archive", "body": "I have problem when building r0.9 source code without GPU, always have below errors:\nERROR: /home/hadoop/.cache/bazel/_bazel_hadoop/688bf433e3d98b943fba735d08e17b8c/external/jpeg_archive/BUILD:77:1: undeclared inclusion(s) in rule '@jpeg_archive//:jpeg':\nthis rule is missing dependency declarations for the following files included by 'external/jpeg_archive/jpeg-9a/jdatasrc.c':\n'bazel-out/host/genfiles/external/jpeg_archive/jconfig.h'.\n\nThe error file is changed if I run bazel build again, in fact the file exists in the directory.\nThere is no problem when I build TF master source code, version 0.11.\nbazel version is 0.3.2-jdk7.\nBuild command:\nbazel build -c opt //tensorflow/tools/pip_package:build_pip_package --local_resources 4096,.5,1.0\n\nI saw some fix  are related with GPU, but I didn't configure GPU.\n", "comments": ["It looks like there was a bug in the BUILD file. You should add a dependency. It's probably a new check with bazel 0.3.2 that wasn't there when we released r0.9.\n", "Thanks @drpngx, I'll try to figure out it.\n", "OK, let me knowhow this goes.\n", "Sorry, I'm failed to fix it. But I found a walkaround:\nI built the master branch successfully, then checkout to branch r0.9, and built it with --fetch=fasle, it's done.\nIn fact, before that I tried fetch //..., but it always failed for some packages.\n", "Great to see you figured it out!\n"]}, {"number": 5181, "title": "Better support for initializing without explicit initializer for tf.string", "body": "When we use `tf.get_variable()` we have to provide `initializer` except `DT_FLOAT` dtype, or it causes error.\n\n```\ntf.get_variable(name=\"a\", shape=(), dtype=tf.string)\n\nTypeError: Expected string, got -1.7320508075688772 of type 'float' instead.\n```\n\nWhile I think it's unfriendly to TensorFlow users. So I want to open a PR to support initializing from non initializer for `tf.string`. \n\nThe same issue for `tf.int` is [#4419](https://github.com/tensorflow/tensorflow/issues/4419).\nAnd I have opend a PR [#4816](https://github.com/tensorflow/tensorflow/pull/4826)  to fix that including `tf.string`, but @ebrevdo suggested  me to open a separate PR fot `tf.string`.\n\n@aselle Could you ensure is it a issue and may I open a PR to fix it?\n", "comments": ["Andrew, you know best if there's a numpy-like way to do this.\n", "Looks to be resolved. Thanks @DjangoPeng!"]}, {"number": 5180, "title": "OutOfRangeError ", "body": "---\n\nMy input data https://www.kaggle.com/c/titanic/download/train.csv\n\nI get OutOfRangeError while training. Can  someone tell me why out of range  error is thrown for below code.\n`\nimport tensorflow as tf\nimport csv\nimport os\n# initialize variables / model parameters\n\nW = tf.Variable(tf.zeros([5,1]),name=\"weights\")\nW=tf.cast(W, tf.float32)\nb=tf.Variable(0.,)\n# Linear Regression inference is now used for combining inputs\n\ndef combine_inputs(X):\n    return tf.matmul(X,W)+b\n# New inferred value is the sigmoid applied the output of linear regression\n\ndef inference(X):\n    return tf.sigmoid(combine_inputs(X))\ndef loss(X,Y):  \n     return tf.reduce_mean(tf.nn.sigmoid_cross_entropy_with_logits(combine_inputs(X), Y))\n\ndef read_csv(batch_size, file_name, record_defaults):\n    filename_queue = tf.train.string_input_producer([os.path.dirname(\"**file**\") + \"/\" + file_name]) \n    reader = tf.TextLineReader(skip_header_lines=1)  \n    key, value = reader.read(filename_queue) \n    # decode_csv will convert a Tensor from type string (the text line) in  \n    # a tuple of tensor columns with the specified defaults, which also  \n    # sets the data type for each column  \n    decoded = tf.decode_csv(value, record_defaults=record_defaults) \n    # batch actually reads the file and loads \"batch_size\" rows in a single tensor  \n    return tf.train.shuffle_batch(decoded,  \n                                  batch_size=batch_size,\n                                  capacity=batch_size \\* 50,  \n                                  min_after_dequeue=batch_size)\ndef inputs():  \n    passenger_id,survived, pclass, name, sex, age, sibsp, parch, ticket, fare, cabin, embarked = read_csv(100,\"train.csv\", [[0.0], [0.0], [0], [\"\"], [\"\"], [0.0], [0.0], [0.0], [\"\"], [0.0], [\"\"], [\"\"]])\n    print(\"Read Data Success\")\n    print(passenger_id)\n    # convert categorical data  \n    is_first_class = tf.to_float(tf.equal(pclass, [1]))  \n    is_second_class = tf.to_float(tf.equal(pclass, [2]))  \n    is_third_class = tf.to_float(tf.equal(pclass, [3]))  \n    gender = tf.to_float(tf.equal(sex, [\"female\"]))  \n    # Finally we pack all the features in a single matrix;  \n    # We then transpose to have a matrix with one example per row and one feature per column.  \n    features = tf.transpose(tf.pack([is_first_class, is_second_class, is_third_class, gender, age]))  \n    survived = tf.reshape(survived, [100, 1]) \n    return features, survived\n\ndef train(total_loss):\n    learning_rate =0.01\n    return tf.train.GradientDescentOptimizer(learning_rate).minimize(total_loss)\n# Calculate Accuracy\n\ndef evaluate(sess, X, Y):  \n    predicted = tf.cast(inference(X) > 0.5, tf.float32)  \n    print( sess.run(tf.reduce_mean(tf.cast(tf.equal(predicted, Y), tf.float32))))\n# Create saver\n\nsaver =tf.train.Saver()\n# Launch the graph in a session, setup boilerplate\n\nwith tf.Session() as sess:\n    tf.initialize_all_variables().run()\n    X,Y = inputs()\n    total_loss=loss(X,Y)\n    train_op=train(total_loss)\n\n```\ncoord=tf.train.Coordinator()\nthreads=tf.train.start_queue_runners(sess=sess,coord=coord)\n\n# Actual Training Loop\ntraining_steps=1000\nfor step in range(training_steps):\n    sess.run([train_op])\n    # for debugging and learning purposes, see how the loss gets decremented through training steps\n    #if step % 10 == 0 :\n    #    print \"loss : \",sess.run([total_loss])\n\nevaluate(sess,X,Y)\n\ncoord.request_stop()\ncoord.join(threads)\n# Store the current values of each variable. By default keep most recent 5 files and delete rest\nsaver.save(sess,'my-model-logistic',global_step=step)\nsess.close()\n```\n\n`\n\n---\n\nOutOfRangeError                           Traceback (most recent call last)\n/home/jenisha/.local/lib/python3.5/site-packages/tensorflow/python/client/session.py in _do_call(self, fn, _args)\n    714     try:\n--> 715       return fn(_args)\n    716     except errors.OpError as e:\n\n/home/jenisha/.local/lib/python3.5/site-packages/tensorflow/python/client/session.py in _run_fn(session, feed_dict, fetch_list, target_list, options, run_metadata)\n    696                                  feed_dict, fetch_list, target_list,\n--> 697                                  status, run_metadata)\n    698 \n\n/usr/lib/python3.5/contextlib.py in **exit**(self, type, value, traceback)\n     65             try:\n---> 66                 next(self.gen)\n     67             except StopIteration:\n\n/home/jenisha/.local/lib/python3.5/site-packages/tensorflow/python/framework/errors.py in raise_exception_on_not_ok_status()\n    449           compat.as_text(pywrap_tensorflow.TF_Message(status)),\n--> 450           pywrap_tensorflow.TF_GetCode(status))\n    451   finally:\n\nOutOfRangeError: RandomShuffleQueue '_398_shuffle_batch_16/random_shuffle_queue' is closed and has insufficient elements (requested 100, current size 0)\n     [[Node: shuffle_batch_16 = QueueDequeueMany[_class=[\"loc:@shuffle_batch_16/random_shuffle_queue\"], component_types=[DT_FLOAT, DT_FLOAT, DT_INT32, DT_STRING, DT_STRING, DT_FLOAT, DT_FLOAT, DT_FLOAT, DT_STRING, DT_FLOAT, DT_STRING, DT_STRING], timeout_ms=-1, _device=\"/job:localhost/replica:0/task:0/cpu:0\"](shuffle_batch_16/random_shuffle_queue, shuffle_batch_16/n)]]\n\nDuring handling of the above exception, another exception occurred:\n\nOutOfRangeError                           Traceback (most recent call last)\n<ipython-input-227-58fbb156a050> in <module>()\n     13     training_steps=1000\n     14     for step in range(training_steps):\n---> 15         sess.run([train_op])\n     16         # for debugging and learning purposes, see how the loss gets decremented through training steps\n     17         #if step % 10 == 0 :\n\n/home/jenisha/.local/lib/python3.5/site-packages/tensorflow/python/client/session.py in run(self, fetches, feed_dict, options, run_metadata)\n    370     try:\n    371       result = self._run(None, fetches, feed_dict, options_ptr,\n--> 372                          run_metadata_ptr)\n    373       if run_metadata:\n    374         proto_data = tf_session.TF_GetBuffer(run_metadata_ptr)\n\n/home/jenisha/.local/lib/python3.5/site-packages/tensorflow/python/client/session.py in _run(self, handle, fetches, feed_dict, options, run_metadata)\n    634     try:\n    635       results = self._do_run(handle, target_list, unique_fetches,\n--> 636                              feed_dict_string, options, run_metadata)\n    637     finally:\n    638       # The movers are no longer used. Delete them.\n\n/home/jenisha/.local/lib/python3.5/site-packages/tensorflow/python/client/session.py in _do_run(self, handle, target_list, fetch_list, feed_dict, options, run_metadata)\n    706     if handle is None:\n    707       return self._do_call(_run_fn, self._session, feed_dict, fetch_list,\n--> 708                            target_list, options, run_metadata)\n    709     else:\n    710       return self._do_call(_prun_fn, self._session, handle, feed_dict,\n\n/home/jenisha/.local/lib/python3.5/site-packages/tensorflow/python/client/session.py in _do_call(self, fn, *args)\n    726         except KeyError:\n    727           pass\n--> 728       raise type(e)(node_def, op, message)\n    729 \n    730   def _extend_graph(self):\n", "comments": ["Thanks for the detailed information. Do you have a simpler repro?\n", "I have created repo\n\nhttps://github.com/joyjeni/tensorflowexample.git\n\nI m trying to do logistic regression on kaggle titanic dataset\n", "Could you try on stackoverflow with tag \"tensorflow\" where we can continue this discussion?\n", "Created .\nhttp://stackoverflow.com/questions/40251587/outofrangeerror-while-doing-logistic-regression\n", "Thanks!\n"]}, {"number": 5179, "title": "Undefined reference to CheckOpMessageBuilder::NewString() when linking libtensorflow_cc.so", "body": "I am trying to use the TensorFlow Session C++ API (Python-free) to load a pre-trained model for inference. For build-time considerations, I am trying to deploy TensorFlow as a \"system\" package by linking against libtensorflow_cc.so and including headers into my Bazel-based workspace which has its own copies of protobuf and Eigen. I am almost there except that I have run into linker errors for missing implementations of tensorflow::internal::CheckOpMessageBuilder::NewString(). The symbols appear to be exported by libtensorflow_cc.so and it does seem to all be linking correctly, just not this symbol.\n\nAny help fixing this issue or suggestions for a better way of doing this would be greatly appreciated.\n\nThanks, \nHemal\n\nMy setup is the following: \nDocker image from ubuntu:16.04 using gcc5.\nBazel 0.3.1 (needed to upgrade from 0.3.0 because of other Tensorflow build issues) \nI matched the Eigen version but the protobuf used to build the Tensorflow wheel below is installed via apt-get and there is another copy (3.0.0) within my workspace's third_party directory.\n\nThe following is in my Dockerfile to build and \"deploy\" Tensorflow: \nRUN git clone https://github.com/tensorflow/tensorflow.git /tmp/tensorflow \\ \n&& cd /tmp/tensorflow && git checkout r0.11 \\ \n&& yes '' | ./configure \\ \n&& bazel build -c opt //tensorflow/tools/pip_package:build_pip_package \\ \n&& /tmp/tensorflow/bazel-bin/tensorflow/tools/pip_package/build_pip_package /tmp/tensorflow_pkg \\ \n&& pip2 install --quiet --upgrade /tmp/tensorflow_pkg/*.whl \\ \n&& bazel build -c opt //tensorflow:libtensorflow_cc.so \\ \n&& cp /tmp/tensorflow/bazel-bin/tensorflow/libtensorflow_cc.so /usr/lib/libtensorflow_cc.so \\ \n&& ln -sv /usr/local/lib/python2.7/dist-packages/tensorflow/include/tensorflow /usr/include/tensorflow \\ \n&& ln -sv /usr/local/lib/python2.7/dist-packages/tensorflow/include/third_party /usr/include/third_party\n\n164:1: Linking of rule '//estimation/detection:playback_ground_truth' failed: clang-3.6 failed: error executing command \n  (cd /code/.cache/bazel/_bazel_hemalshah/6fa7a91faa1abdfbb41bc875fa66f0f6/execroot/robotics && \\\n  exec env - \\\n  /usr/bin/clang-3.6 -o bazel-out/local_linux-opt/bin/estimation/detection/playback_ground_truth -L/usr/lib/python2.7/config-x86_64-linux-gnu -L/usr/lib -Wl,-O1 -Wl,-Bsymbolic-functions -pthread -B/usr/bin/ -Wl,@bazel-out/local_linux-opt/bin/estimation/detection/playback_ground_truth-2.params): com.google.devtools.build.lib.shell.BadExitStatusException: Process exited with status 1.\n\nbazel-out/local_linux-opt/bin/estimation/detection/libtof_pose_estimator.lo(tof_pose_estimator.o): In function `std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* tensorflow::internal::MakeCheckOpString<long long, long long>(long long const&, long long const&, char const*)':\n/usr/include/tensorflow/core/platform/default/logging.h:170: undefined reference to`tensorflow::internal::CheckOpMessageBuilder::NewString()'\nbazel-out/local_linux-opt/bin/estimation/detection/libtof_pose_estimator.lo(tof_pose_estimator.o): In function `std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* tensorflow::internal::MakeCheckOpString<unsigned long, unsigned long>(unsigned long const&, unsigned long const&, char const*)':\n/usr/include/tensorflow/core/platform/default/logging.h:170: undefined reference to`tensorflow::internal::CheckOpMessageBuilder::NewString()'\n", "comments": ["Could you attach the full Dockerfile?\n", "Sure, \n\nFROM ubuntu:16.04\n\nRUN echo oracle-java8-installer shared/accepted-oracle-license-v1-1 select true \\\n        | /usr/bin/debconf-set-selections \\\n    && apt-get -q update \\\n    && apt-get install -qy \\\n        bash-completion \\\n        ccache \\\n        clang-3.6 \\\n        clang-format-3.6 \\\n        g++ \\\n        gcc \\\n        gdb \\\n        gdbserver \\\n        gfortran \\\n        git \\\n        graphviz \\\n        imagemagick \\\n        libarchive-dev \\\n        libassimp-dev \\\n        libboost-all-dev \\\n        libelf-dev \\\n        libffi-dev \\\n        libgl1-mesa-dev \\\n        libjpeg-dev \\\n        liblapack3 \\\n        libmysqlcppconn-dev \\\n        libnlopt-dev \\\n        #libprotobuf-dev \\\n        libraw1394-11 \\\n        libssl-dev  \\\n        libsparsehash-dev \\\n        libunwind8-dev \\\n        libzookeeper-mt-dev \\\n        lsb-core \\\n        lsof \\\n        libwebsocketpp-dev \\\n        nodejs \\\n        oracle-java8-installer \\\n        pkg-config \\\n        pylint \\\n        python-dev  \\\n        python-pip \\\n        python-setuptools \\\n        python-sphinx \\\n        python-yaml \\\n        python-h5py \\\n        python3-pip \\\n        python-numpy \\\n        python-scipy \\\n        python-nose \\\n        python-wheel \\\n        libopenblas-dev \\\n        strace \\\n        sudo \\\n        swig \\\n        tcpdump \\\n        valgrind \\\n        unzip \\\n        xorg-dev \\\n        xvfb \\\n        zip \\\n        zlib1g-dev \\\n    && update-java-alternatives -s java-8-oracle\n\n# Build Bazel and build and install Bazel autocomplete\n\nRUN bazel_version='0.3.1' \\\n    && git clone https://github.com/bazelbuild/bazel.git /bazel \\\n    && cd /bazel \\\n    && git checkout $bazel_version \\\n    && echo \"startup --batch\\nbuild --spawn_strategy=standalone\\nbuild --genrule_strategy=standalone\\ntest --test_strategy=standalone\" > /bazel/bazelrc \\\n    && BAZELRC=/bazel/bazelrc /bazel/compile.sh \\\n    && ln -s /bazel/output/bazel /usr/bin/bazel \\\n    && /usr/bin/bazel --bazelrc=/bazel/bazelrc build //scripts:bash_completion \\\n    && cp /bazel/bazel-bin/scripts/bazel-complete.bash /etc/bash_completion.d/\n\n# Python libraries that aren't available via apt\n\nRUN pip2 install --quiet --upgrade \\\n    cpplint \\\n    gsutil \\\n    yapf \\\n    Theano \\\n    keras \\\n    h5py\n\nRUN pip3 install --quiet --upgrade \\\n    portpicker\n\nRUN git clone https://github.com/tensorflow/tensorflow.git /tmp/tensorflow \\\n    && cd /tmp/tensorflow && git checkout r0.11 \\\n    && yes '' | ./configure \\\n    && bazel build -c opt //tensorflow/tools/pip_package:build_pip_package \\\n    && /tmp/tensorflow/bazel-bin/tensorflow/tools/pip_package/build_pip_package /tmp/tensorflow_pkg \\\n    && pip2 install --quiet --upgrade /tmp/tensorflow_pkg/*.whl \\\n    && bazel build -c opt //tensorflow:libtensorflow_cc.so \\\n    && cp /tmp/tensorflow/bazel-bin/tensorflow/libtensorflow_cc.so /usr/lib/libtensorflow_cc.so \\\n    && ln -sv /usr/local/lib/python2.7/dist-packages/tensorflow/include/tensorflow /usr/include/tensorflow \\\n    && ln -sv /usr/local/lib/python2.7/dist-packages/tensorflow/include/third_party /usr/include/third_party\n\n# Clean up leftover stuff at the very end\n\nRUN apt-get clean \\\n    && apt-get autoremove -qy \\\n    && rm -rf /var/lib/apt/lists/\\* \\\n    && rm -rf /tmp/*\n", "So, I followed the steps (except that I used openjdk) and it worked for me.  It built using gcc, though, as it should from the Dockerfile. But your error points to clang-3.6.\n\n(Note that if you want to use ccache, you have to use -v <somedir>:/root/.ccache and create a gcc, g++ script.)\n", "Thanks for taking a look! Producing the Docker image is not a problem and I can successfully get libtensorflow_cc.so built and headers all in place. \n\nWhen I build and link against them to use the Session API in my Bazel-built project, however, I get the linker error from a cc_binary target that relies on a cc_library target the links against libtensorflow_cc.so.\n\nThe Bazel target that links in the libtensorflow_cc.so is as follows for reference:\ncc_library(\n    name = \"tof_pose_estimator\",\n    srcs = [\"tof_pose_estimator.cc\"],\n    hdrs = [\"tof_pose_estimator.h\"],\n    copts = [\n        \"-D_FORCE_INLINES\",\n        \"-I/usr/include/tensorflow\",\n        \"-I/usr/include/python2.7\",\n        \"-I/usr/include/x86_64-linux-gnu/python2.7\",\n        \"-fno-strict-aliasing\",\n        \"-D_FORTIFY_SOURCE=2\",\n        \"-g\",\n        \"-fstack-protector\",\n        \"--param=ssp-buffer-size=4\",\n        \"-Wformat\",\n        \"-Werror=format-security\",\n        \"-DNDEBUG\",\n        \"-g\",\n        \"-fwrapv\",\n        \"-O2\",\n        \"-Wall\",\n        \"-Wstrict-prototypes\",\n    ],\n    linkopts = [\n        \"-L/usr/lib/python2.7/config-x86_64-linux-gnu\",\n        \"-L/usr/lib\",\n        \"-lpthread\",\n        \"-ldl\",\n        \"-ltensorflow_cc\",\n        \"-lutil\",\n        \"-lm\",\n        \"-lpython2.7\",\n        \"-Wl,-O1 -Wl,-Bsymbolic-functions\",\n    ],\n    deps = [\n        \"//base\",\n        \"//config:util\",\n        \"//geometry/camera_model\",\n        \"//geometry/image\",\n        \"//geometry/normals\",\n        \"//geometry/plane:find_planes\",\n        \"//hardware/monocular_camera\",\n        \"//hardware/stereo_camera:stereo_grabber\",\n        \"//math\",\n        \"//messages:camera_model\",\n        \"//messages:camera_model_io\",\n        \"//messages:math_io\",\n        \"//messages:tof_frame\",\n        \"//messages:tof_frame_io\",\n        \"//vis/websocket:server\",\n    ],\n    alwayslink = 1,\n)\n", "Can you check if it's in tensorflow_cc?\n\n```\nnm bazel-bin/tensorflow/libtensorflow_cc.so|c++filt|grep tensorflow::internal::CheckOpMessageBuilder::NewString\n```\n\nIt should show as `T` (not `t`).\n\nIf you link with `-Wl,--undefined`, then `ldd` the output, what do you see?\n", "Thanks for taking a look! Producing the Docker image is not a problem and I\ncan successfully get libtensorflow_cc.so built and headers all in place.\n\nWhen I build and link against them to use the Session API in my Bazel-built\nproject, however, I get the linker error from a cc_binary target that\nrelies on a cc_library target the links against libtensorflow_cc.so.\n\nOn Mon, Oct 24, 2016 at 7:21 PM drpngx notifications@github.com wrote:\n\n> So, I followed the steps (except that I used openjdk) and it worked for\n> me. It built using gcc, though, as it should from the Dockerfile. But your\n> error points to clang-3.6.\n> \n> (Note that if you want to use ccache, you have to use -v :/root/.ccache\n> and create a gcc, g++ script.)\n> \n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> https://github.com/tensorflow/tensorflow/issues/5179#issuecomment-255918068,\n> or mute the thread\n> https://github.com/notifications/unsubscribe-auth/AVSu8zGABfz_jrVnwCBgui8BW1fodmI_ks5q3WeXgaJpZM4Kfbsj\n> .\n", "Interesting. If I check libtensorflow_cc.so as built in under Ubuntu 14.04 outside of the Docker image, I do not see the abi:cxx11 part of the above. The following post seems to indicate that the issue is CXX_ABI and copy-on-write for std::string causing the problem:\nhttp://stackoverflow.com/questions/36159238/linking-problems-due-to-symbols-with-abicxx11\n", "Yes I usually set -D_GLIBCXX_USE_CXX11_ABI=0 everywhere, but that's not always the right thing. They made that change more than a year ago IIRC, so maybe clang has caught up with it. You could try 3.9? Or switch to gcc everywhere?\n", "The symbol seems to be there:\n0000000002b3ed40 T\ntensorflow::internal::CheckOpMessageBuilder::NewString[abi:cxx11]()\n\nldd output shows nothing unusual as far as library dependencies:\nlinux-vdso.so.1 =>  (0x00007ffc6abfe000)\nlibSegFault.so => /lib/x86_64-linux-gnu/libSegFault.so (0x00007f9ae9554000)\nlibdl.so.2 => /lib/x86_64-linux-gnu/libdl.so.2 (0x00007f9ae9350000)\nlibm.so.6 => /lib/x86_64-linux-gnu/libm.so.6 (0x00007f9ae9047000)\nlibpthread.so.0 => /lib/x86_64-linux-gnu/libpthread.so.0\n(0x00007f9ae8e2a000)\nlibstdc++.so.6 => /usr/lib/x86_64-linux-gnu/libstdc++.so.6\n(0x00007f9ae8aa8000)\nlibgcc_s.so.1 => /lib/x86_64-linux-gnu/libgcc_s.so.1 (0x00007f9ae8892000)\nlibc.so.6 => /lib/x86_64-linux-gnu/libc.so.6 (0x00007f9ae84c9000)\n/lib64/ld-linux-x86-64.so.2 (0x00007f9aeceb0000)\n\nDid you want to add flags to the build of libtensorflow_cc.so?\n\nThanks,\nHemal\n\nOn Tue, Oct 25, 2016 at 11:05 AM drpngx notifications@github.com wrote:\n\nCan you check if it's in tensorflow_cc?\n\nnm bazel-bin/tensorflow/libtensorflow_cc.so|c++filt|grep\ntensorflow::internal::CheckOpMessageBuilder::NewString\n\nIt should show as T (not t).\n\nIf you link with -Wl,--undefined, then ldd the output, what do you see?\n\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/tensorflow/tensorflow/issues/5179#issuecomment-256112655,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AVSu8zV-fPi_cienR1Ga0wBNUvl_Wl5Zks5q3kTogaJpZM4Kfbsj\n.\n", "Using the default `-D_GLIBCXX_USE_CXX11_ABI=1`, is the right thing, but it will break non-hermetic builds, so in general it's not a good idea for us to do that, esp on a gcc5 system. You can do that on your private build.\n\nThe best is to use a bazel configuration which matches on both ends -- either change your tensorflow bazel build, or change your project bazel config so that they match, or add your project as a subdirectory of tensorflow.\n", "So, that is definitely the problem, but how to solve it has me puzzled. I tried globally reverting to the old ABI, but then I have trouble with boost libraries linking. I end up playing whack-a-mole until everything is consistent. Clang 3.9 would supposedly help the situation, but not available yet as a Debian package it seems except in the nightly.\n\nThe root cause though is why is tensorflow::internal::MakeCheckOpString trying to link against the non-CXX11 ABI version of tensorflow::internal::CheckOpMessageBuilder::NewString (when the cxx11 ABI version is available)? I'm trying to find why that particular function is the only one with what appears to be this ABI mismatch. \n", "There should be a lot more. Anything with `std::string` should be tainted. Feel free to attach the output of nm (without `--demangle` or `c++filt`).\n", "[nm-output.txt](https://github.com/tensorflow/tensorflow/files/552340/nm-output.txt)\n\nHere's the output of nm on libtensorflow_cc.so within the Docker image. All of the functions seem to be using cxx11 ABI correctly, so not sure why local references would be looking for the non-cxx11 ABI version of the method.\n", "I think it's that clang is too old and doesn't support the `__attribute__` for the cxx abi.\n\nSo, maybe, _either_:\n1. Use gcc-4.8 to build tensorflow (apt-get install gcc-4.8), then set env variables `CC` and `CXX`\n2. Upgrade llvm using [this procedure](http://askubuntu.com/questions/787383/how-to-install-llvm-3-9) so that it honors the flags. You can build a hello world and check `nm` output\n3. Rebuild your code using the system compiler, gcc5\n", "Automatically closing due to lack of recent activity, we will reopen if further information becomes available. Thanks!\n", "@drpngx: Thanks for your help! I've had some trouble getting things to build with the same compiler, but we identified the problem and just working on getting one of the solutions implemented correctly.\n", "CXX11_ABI is causing a log or issues between boost 1.58 and tensorflow 1.4.1 in my computer. When can this be correctly addressed by tensorflow?"]}, {"number": 5178, "title": "R0.11", "body": "", "comments": ["Can one of the admins verify this patch?\n", "@zhenhe168, thanks for your PR! By analyzing the history of the files in this pull request, we identified @yifeif, @martinwicke and @caisq to be potential reviewers.\n", "Thanks for your pull request.  It looks like this may be your first contribution to a Google open source project. Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).\n\n:memo: **Please visit https://cla.developers.google.com/ to sign.**\n\nOnce you've signed, please reply here (e.g. `I signed it!`) and we'll verify.  Thanks.\n\n---\n- If you've already signed a CLA, it's possible we don't have your GitHub username or you're using a different email address.  Check [your existing CLA data](https://cla.developers.google.com/clas) and verify that your [email is set on your git commits](https://help.github.com/articles/setting-your-email-in-git/).\n- If you signed the CLA as a corporation, please let us know the company's name.\n\n<!-- need_sender_cla -->\n"]}, {"number": 5177, "title": "Bugfixes", "body": "- Align start of learning rate decay with documentation.\n- Use correct configuration for creation of test inputs.\n", "comments": ["Can one of the admins verify this patch?\n", "@b-3-n, thanks for your PR! By analyzing the history of the files in this pull request, we identified @tensorflower-gardener, @vrv and @benoitsteiner to be potential reviewers.\n", "Thanks for your pull request.  It looks like this may be your first contribution to a Google open source project. Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).\n\n:memo: **Please visit https://cla.developers.google.com/ to sign.**\n\nOnce you've signed, please reply here (e.g. `I signed it!`) and we'll verify.  Thanks.\n\n---\n- If you've already signed a CLA, it's possible we don't have your GitHub username or you're using a different email address.  Check [your existing CLA data](https://cla.developers.google.com/clas) and verify that your [email is set on your git commits](https://help.github.com/articles/setting-your-email-in-git/).\n- If you signed the CLA as a corporation, please let us know the company's name.\n\n<!-- need_sender_cla -->\n", "I signed it!\n", "CLAs look good, thanks!\n\n<!-- ok -->\n", "@tensorflow-jenkins test this please.\n", "@tensorflow-jenkins test this please\n"]}, {"number": 5176, "title": "Improved mnist/convolution.py performance", "body": "", "comments": ["Can one of the admins verify this patch?\n", "@willdzeng, thanks for your PR! By analyzing the history of the files in this pull request, we identified @yaroslavvb, @vrv and @vincentvanhoucke to be potential reviewers.\n", "Can one of the admins verify this patch?\n", "@vincentvanhoucke sure, it's done.\nThis code is very helpful in learning tenrsorflow and convolution neural network, my modification is trivial.\nThank you.\n", "@tensorflow-jenkins test this please\n"]}, {"number": 5175, "title": "Fix string comparison issue in py3 for export_test.", "body": "", "comments": ["@gunan, thanks for your PR! By analyzing the history of the files in this pull request, we identified @tensorflower-gardener, @ilblackdragon and @philstahlfeld to be potential reviewers.\n", "Jenkins, test this please\n", "Jenkins, test this please\n", "Last try, windows slaves are taking too long to clone the repo.\nJenkins, test this please.\n", "Windows slaves are broken due to an unrelated issue. Merging.\n"]}, {"number": 5174, "title": "Einsum dynamic shape bug fix", "body": "I fixed a bug in einsum that did not allow for dynamic tensor shapes. I'm not sure if that's the only change necessary and I'm also not sure what conventions you follow to write tests for this, so since I have a paper deadline approaching I'll leave it at that for now. It seems to be working fine for me but I haven't tested any edge cases.\n", "comments": ["@eaplatanios, thanks for your PR! By analyzing the history of the files in this pull request, we identified @nikhilmishra000 and @lukaszkaiser to be potential reviewers.\n", "Thanks for your pull request.  It looks like this may be your first contribution to a Google open source project. Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).\n\n:memo: **Please visit https://cla.developers.google.com/ to sign.**\n\nOnce you've signed, please reply here (e.g. `I signed it!`) and we'll verify.  Thanks.\n\n---\n- If you've already signed a CLA, it's possible we don't have your GitHub username or you're using a different email address.  Check [your existing CLA data](https://cla.developers.google.com/clas) and verify that your [email is set on your git commits](https://help.github.com/articles/setting-your-email-in-git/).\n- If you signed the CLA as a corporation, please let us know the company's name.\n\n<!-- need_sender_cla -->\n", "Can one of the admins verify this patch?\n", "I signed it!\n", "CLAs look good, thanks!\n\n<!-- ok -->\n", "Yeah, we should wait on this one until tests are added. Simply add a test that unsets the shape before calling `einsum` should test the new behavior.\n", "Ping for @eaplatanios \n", "Closing due to lack of activity and to clear out back log -- ping back or open a new PR if you still want to get this in!  We have an internal change also making huge changes to einsum it seems, so might be worth waiting for that too.\n"]}, {"number": 5173, "title": "Fix contrib/makefile builds in 0.11", "body": "contrib/makefile builds include version_info.cc twice and end up with duplicate symbols in the resulting library.  As a result none of the iOS examples work and the resulting library can't be used.\n\nThis is simply the fix from master, https://github.com/tensorflow/tensorflow/commit/1283b84a49a9f5e14aca833cf981b61848aaf916.\n", "comments": ["Can one of the admins verify this patch?\n", "@avalys, thanks for your PR! By analyzing the history of the files in this pull request, we identified @martinwicke, @tensorflower-gardener and @vrv to be potential reviewers.\n", "Already cherrypicked into the branch:\nhttps://github.com/tensorflow/tensorflow/pull/5146\nClosing this one.\n"]}, {"number": 5172, "title": "Add a GCS test to create a file and list it.", "body": "", "comments": ["Can one of the admins verify this patch?\n", "@anand-c-goog, thanks for your PR! By analyzing the history of the files in this pull request, we identified @caisq to be a potential reviewer.\n", "Also, @anand-c-goog , when you are done making the changes, please squash the commits into one. Thanks.\n"]}, {"number": 5171, "title": "Fixed typo in train api documentation", "body": "\"It `True`\" -> \"If `True`\" in the documentation for `tf.train.exponential_decay`\n", "comments": ["Can one of the admins verify this patch?\n", "@oskopek, thanks for your PR! By analyzing the history of the files in this pull request, we identified @tensorflower-gardener, @keveman and @vrv to be potential reviewers.\n", "Thanks for the fix, could fix upstream tensorflow/python/training/learning_rate_decay.py? \n"]}, {"number": 5170, "title": "files not found \"graph.pb.h\" and \"image_ops.h\"", "body": "The 2 files below are included in main.cc of label image example, but i can't find these 2 **.h** files in the relevant **ops** and **framework** folders. So we can remove them out directly?\n# include \"**tensorflow/cc/ops/image_ops.h**\"\n# include \"**tensorflow/core/framework/graph.pb.h**\"\n\nhttps://github.com/tensorflow/tensorflow/blob/master/tensorflow/examples/label_image/main.cc#L38\n\nhttps://github.com/tensorflow/tensorflow/blob/master/tensorflow/examples/label_image/main.cc#L40\n", "comments": ["These files are generated when you use `bazel build` to build the example.  The files are placed in `bazel-genfiles`. \n\nHope that helps. \n"]}, {"number": 5169, "title": "Windows GPU random initialization not working", "body": "Using `tf.truncated_normal` (and possibly the other random functions too) on my GPU (GTX 1060) with the new Windows build produces only zeros whereas running it on my CPU works as expected.\n\nExample code:\n\n``` Python\nwith tf.device('/cpu:0'):\n    with tf.Session() as sess:\n        # Something random, as expected\n        print(\"CPU:\", sess.run(tf.truncated_normal([5])))\n\nwith tf.device('/gpu:0'):\n    with tf.Session() as sess:\n        # All zeros\n        print(\"GPU:\", sess.run(tf.truncated_normal([5])))\n```\n\nI used the same setup as [here](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/cmake/README.md) with CMake 3.6 and rolled back to https://github.com/tensorflow/tensorflow/commit/41ba1e0e6fbf443f1a972ff0130ba6741b9b7a50 to fix the issue with eigen not compiling.\n\n// Also it seems the result of any calculation involving a tf.Variable becomes 0, while just running / printing the variable itself shows its correct value (CPU works fine though).\n", "comments": ["@mrry @guschmue for any insight\n", "let me take look. I still have a bunch of gpu fixes - working on a pr for those but not sure of this one is part of it.\n", "Works on my box but I have some idea why its not working for you: on windows there might be some issue that it doesn't handle correctly if the exact cuda version is not compiled in. By default we compile with cuda 3.5+5.2 but a 1060 is on 6.1. I belief on linux it would downgrade you to 5.2 but on windows it does something undefined. Let me debug this a little - should not be to hard to find. \nIf you need a solution right away: you can edit the CMakefile and add 6.1 to the list of cuda capabilities.\n", "Alright I'll try it tomorrow and let you know if it worked, thanks for your help and great work!\n", "If you change your CMakefile: search for all occurrences of 5.2 and add a 6.1. I should have a better solution by tomorrow.\n", "I added 6.1 everywhere and it worked. I also tried neural style which worked too.\n", "OK, closing this for now. Thanks much @guschmue !\n", "I found the reason why on windows we are not falling back to 5.2 if we find a 6.1 gpu. Going to send a PR so in the future it will behave just like linux.\n"]}, {"number": 5168, "title": "[unexpected keyword argument 'syntax'] occurs on Ubuntu 16.04 with protobuf 3 of 4e8497d by installing from source", "body": "### What related GitHub issues or StackOverflow threads have you found by searching the web for your problem?\n#4\n### Environment info\n\nOperating System: Ubuntu 16.04\nInstalled version of CUDA and cuDNN: CUDA 8 & CUDNN 5.1\n1. The commit hash (`git rev-parse HEAD`)\n   Download the zip file by http. Version:[4e8497d](https://github.com/tensorflow/tensorflow/commit/4e8497dcdb7918082732c01cf777f3559fc8168b)\n2. The output of `bazel version`\n   Build label: 0.3.2\n   Build target: bazel-out/local-fastbuild/bin/src/main/java/com/google/devtools/build/lib/bazel/BazelServer_deploy.jar\n   Build time: Fri Oct 7 17:25:10 2016 (1475861110)\n   Build timestamp: 1475861110\n   Build timestamp as int: 1475861110\n### What other attempted solutions have you tried?\n\nChange /usr/bin/protoc & /usr/include/google version from 2 to 3.\n### Logs or other output that would be helpful\n\n[2,290 / 2,578] Still waiting for 196 jobs to complete:\n      Running (standalone):\nTarget //tensorflow/tools/pip_package:build_pip_package up-to-date:\n  bazel-bin/tensorflow/tools/pip_package/build_pip_package\nINFO: Elapsed time: 2425.533s, Critical Path: 2122.33s\n#### Problem\n\npython -c \"import tensorflow\"\n\nI tensorflow/stream_executor/dso_loader.cc:125] successfully opened CUDA library libcublas.so locally\nI tensorflow/stream_executor/dso_loader.cc:125] successfully opened CUDA library libcudnn.so locally\nI tensorflow/stream_executor/dso_loader.cc:125] successfully opened CUDA library libcufft.so locally\nI tensorflow/stream_executor/dso_loader.cc:125] successfully opened CUDA library libcuda.so.1 locally\nI tensorflow/stream_executor/dso_loader.cc:125] successfully opened CUDA library libcurand.so locally\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"/home/name/.local/lib/python2.7/site-packages/tensorflow/**init**.py\", line 23, in <module>\n    from tensorflow.python import *\n  File \"/home/name/.local/lib/python2.7/site-packages/tensorflow/python/**init**.py\", line 63, in <module>\n    from tensorflow.core.framework.graph_pb2 import *\n  File \"/home/name/.local/lib/python2.7/site-packages/tensorflow/core/framework/graph_pb2.py\", line 16, in <module>\n    from tensorflow.core.framework import node_def_pb2 as tensorflow_dot_core_dot_framework_dot_node__def__pb2\n  File \"/home/name/.local/lib/python2.7/site-packages/tensorflow/core/framework/node_def_pb2.py\", line 16, in <module>\n    from tensorflow.core.framework import attr_value_pb2 as tensorflow_dot_core_dot_framework_dot_attr__value__pb2\n  File \"/home/name/.local/lib/python2.7/site-packages/tensorflow/core/framework/attr_value_pb2.py\", line 16, in <module>\n    from tensorflow.core.framework import tensor_pb2 as tensorflow_dot_core_dot_framework_dot_tensor__pb2\n  File \"/home/name/.local/lib/python2.7/site-packages/tensorflow/core/framework/tensor_pb2.py\", line 16, in <module>\n    from tensorflow.core.framework import resource_handle_pb2 as tensorflow_dot_core_dot_framework_dot_resource__handle__pb2\n  File \"/home/name/.local/lib/python2.7/site-packages/tensorflow/core/framework/resource_handle_pb2.py\", line 22, in <module>\n    serialized_pb=_b('\\n/tensorflow/core/framework/resource_handle.proto\\x12\\ntensorflow\\\"m\\n\\x0eResourceHandle\\x12\\x0e\\n\\x06\\x64\\x65vice\\x18\\x01 \\x01(\\t\\x12\\x11\\n\\tcontainer\\x18\\x02 \\x01(\\t\\x12\\x0c\\n\\x04name\\x18\\x03 \\x01(\\t\\x12\\x11\\n\\thash_code\\x18\\x04 \\x01(\\x04\\x12\\x17\\n\\x0fmaybe_type_name\\x18\\x05 \\x01(\\tB4\\n\\x18org.tensorflow.frameworkB\\x13ResourceHandleProtoP\\x01\\xf8\\x01\\x01\\x62\\x06proto3')\nTypeError: __init__() got an unexpected keyword argument 'syntax'\n", "comments": ["Could you post your _pb2.py files?\n", "Thx, @drpngx  \n[resource_handle_pb2.txt](https://github.com/tensorflow/tensorflow/files/549427/resource_handle_pb2.txt)\n\n[_pb2_files.zip](https://github.com/tensorflow/tensorflow/files/549437/_pb2_files.zip)\n\npls, :)\n", "It looks like you're loading a python protobuf that doesn't have \"syntax\". Could you look at https://github.com/tensorflow/tensorflow/issues/57?\n", "While, I tried, still not work:\n\n```\n$ python\nPython 2.7.12 (default, Jul  1 2016, 15:12:24) \n[GCC 5.4.0 20160609] on linux2\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> import google.protobuf\n>>> print google.protobuf.__version__\n3.1.0\n```\n\n```\n$ protoc --version\nlibprotoc 3.1.0\n```\n\n```\n$ pip show numpy protobuf\nName: numpy\nVersion: 1.11.2\nSummary: NumPy: array processing for numbers, strings, records, and objects.\nHome-page: http://www.numpy.org\nAuthor: NumPy Developers\nAuthor-email: numpy-discussion@scipy.org\nInstaller: pip\n\nName: protobuf\nVersion: 3.1.0\nSummary: Protocol Buffers\nHome-page: https://developers.google.com/protocol-buffers/\nAuthor: protobuf@googlegroups.com\nAuthor-email: protobuf@googlegroups.com\nInstaller: pip\n```\n\nAfter pip uninstall protobuf, pip uninstall tensorflow, & reComplied the tensorflow-master/configure, \naccording to [os_setup](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/g3doc/get_started/os_setup.md#create-the-pip-package-and-install) , still not work, but release no module problem:\n\n```\n$ python -c \"import tensorflow\"\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\nImportError: No module named tensorflow\n```\n", "you need to pip re-install the tensorflow:\n\n```\nbazel-bin/tensorflow/tools/pip_package/build_pip_package /tmp/tensorflow_pkg\npip install /tmp/tensorflow_pkg/tensorflow-*.whl \n```\n", "OK, after series opts, mainly about solution is protoc need to update to version 3 & replace apt install libprotoc by download from https://github.com/google/protobuf, & rebuild tensorflow. \n\nthis issue may be cause by the libprotoc of ubuntu version 2 but python protobuf version 3 compliing.\n\nAnyway, thx @drpngx\n"]}, {"number": 5167, "title": "Fix bad var echoing introduced by #5135", "body": "A minor mistake slipped through PR #5135\n", "comments": ["@villasv, thanks for your PR! By analyzing the history of the files in this pull request, we identified @vrv, @meteorcloudy and @itsmeolivia to be potential reviewers.\n", "Can one of the admins verify this patch?\n", "@tensorflow-jenkins test this please.\n", "Thank you for the fix, @villasv \n"]}, {"number": 5166, "title": "Fix incorrect link for Building a Random Forest Model", "body": "Replace `random_forest.py` with `random_forest_mnist.py`, because `random_forest.py` is not exist.\n", "comments": ["@wangyum, thanks for your PR! By analyzing the history of the files in this pull request, we identified @yifeif and @tyfkda to be potential reviewers.\n", "Can one of the admins verify this patch?\n", "@tensorflow-jenkins test this please.\n", "Thank you for the fix, @wangyum \n"]}, {"number": 5165, "title": "Remove conflict include statments in port.cc", "body": "I was getting errors like following when building PIP package with Bazel:\n\n```\nC:\\Program Files (x86)\\Windows Kits\\8.1\\include\\\\um\\WinSock2.h(2699): error C2375: 'WSAAsyncSelect': redefinition; different linkage\nC:\\Program Files (x86)\\Windows Kits\\8.1\\include\\\\um\\winsock.h(933): note: see declaration of 'WSAAsyncSelect'\n```\n\nTurned out these two line was removed at 46110c5aecfafcce220252bb8455b6188389b91d,\n\n```\n-#include <WinSock2.h>      \n-#pragma comment(lib, \"Ws2_32.lib\")\n```\n\nBut brought back at https://github.com/tensorflow/tensorflow/commit/c5ab3dd177dc16bb211821e38219f350a613b5e8\nSeems like a merge error to me.\n", "comments": ["@meteorcloudy, thanks for your PR! By analyzing the history of the files in this pull request, we identified @tensorflower-gardener, @drpngx and @mrry to be potential reviewers.\n", "Can one of the admins verify this patch?\n", "Jenkins, test this please.\n", "My bad, I thought both were required.\n", "Test again please?\n", "I think we're still waiting for a fix on windows. Let's try anyway.\n", "Jenkins, test this please.\n", "Jenkins, test this please.\n"]}, {"number": 5164, "title": "Orthogonal initializer", "body": "This PR adds an orthogonal initializer based on the paper [Exact solutions to the nonlinear dynamics of learning in deep linear neural networks](https://arxiv.org/abs/1312.6120).\n", "comments": ["Can one of the admins verify this patch?\n", "ping for @zheng-xq \n", "Or ping for @rmlarsen \n", "@tensorflow-jenkins test this please\n", "@tensorflow-jenkins test this please\n", "The failing tests on Windows emit error messages of the form \n\n```\n11:16:03 ======================================================================\n11:16:03 ERROR: testGain (__main__.OrthogonalInitializerTest)\n11:16:03 ----------------------------------------------------------------------\n11:16:03 Traceback (most recent call last):\n11:16:03   File \"C:\\Program Files\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\client\\session.py\", line 1021, in _do_call\n11:16:03     return fn(*args)\n11:16:03   File \"C:\\Program Files\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\client\\session.py\", line 999, in _run_fn\n11:16:03     self._extend_graph()\n11:16:03   File \"C:\\Program Files\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\client\\session.py\", line 1048, in _extend_graph\n11:16:03     self._session, graph_def.SerializeToString(), status)\n11:16:03   File \"C:\\Program Files\\Anaconda3\\lib\\contextlib.py\", line 66, in __exit__\n11:16:03     next(self.gen)\n11:16:03   File \"C:\\Program Files\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\framework\\errors_impl.py\", line 469, in raise_exception_on_not_ok_status\n11:16:03     pywrap_tensorflow.TF_GetCode(status))\n11:16:03 tensorflow.python.framework.errors_impl.InvalidArgumentError: No OpKernel was registered to support Op 'Svd' with these attrs.  Registered kernels:\n11:16:03   <no registered kernels>\n11:16:03 \n11:16:03     [[Node: Svd = Svd[T=DT_FLOAT, compute_uv=true, full_matrices=false](random_uniform)]]\n```\n\nUnfortunately, I'm not quite sure what to make of that.\n", "@mrry Derek, do you understand why this failure occurs on Windows but not Linux or Mac?\n", "Yes, IIRC there was a problem compiling the SVD op, so it was originally excluded from the (CMake) build. I can look into it later, or you could try commenting out [this line](https://github.com/tensorflow/tensorflow/blob/7f3d8e1f8736f4c812e4a0a96154af3bd3750180/tensorflow/contrib/cmake/tf_core_kernels.cmake#L93) in this CL and running the tests again....\n\n[The unrelated `reader_ops_test.py` failure is being caused by an old version of SWIG on the Jenkins machines, and there's a fix for that in the pipeline.]\n", "@mrry Thanks for the explanation, Derek. I think we should probably get the SVD op working on Windows before merging this PR then?\n", "@rmlarsen Sounds good. I'll look at getting the SVD op compiled today.\n", "@tensorflow-jenkins test this please\n", "@tensorflow-jenkins test this please\n", "Our Mac tests are rather flaky at the moment :-1: . I'll keep running the tests until they pass at least once...\n"]}, {"number": 5163, "title": "AttributeError: 'module' object has no attribute 'histogram'", "body": "### Environment info\n\nOperating System: MacOS 10.12\n\nRunning tensorflow (0.11.0rc1), I'm trying to retrain the Inception's final layer with my own set of images, and I'm running into this error:\n\n<img width=\"749\" alt=\"screen shot 2016-10-24 at 12 56 46 am\" src=\"https://cloud.githubusercontent.com/assets/8280282/19637602/c7ea232e-9984-11e6-8d9d-5e0ba56a7b47.png\">\n", "comments": ["@abhishekbanthia : It seems you're running example code from the HEAD of master branch of the tensorflow git repository, which is not compatible with the release (in this case, because of https://github.com/tensorflow/tensorflow/commit/8532897352ada1d8ecd3ca1dd17aaa869a42d4b8#diff-e27def9997dcd569e1f2412fd6f3ae76).\n\nPerhaps you `git clone`ed the master branch, instead of the release branch, to get the example code? To clone the release branch, you can use:\n\n``` sh\ngit clone -b r0.11 https://github.com/tensorflow/tensorflow\n```\n\nHope that helps.\n(And in the future, please try to fill in the [New issue template](https://github.com/tensorflow/tensorflow/issues/new), in particular the section about providing a minimal example to reproduce the error as that is often the most useful in helping to diagnose a problem).\n\nFeel free to re-open this issue with more details if using the release branch does not solve the problem. Thanks!\n", "Thanks, This has worked for me\n", "![image](https://cloud.githubusercontent.com/assets/14166608/23104603/0c765a74-f6f7-11e6-9185-336663aa7a8d.png)\r\ncan you please help me with this error? I tried the solution given in earlier post of git clone...... in the folder of the code that I want to run. But it didn't work. Can you please help?", "Which version of TensorFlow are you using? It seems you're using one from head. I'd suggest using the release version if possible ad things in head will always be in flux and it can be hard to support. That said, do browse through the [upgrade instructions](https://www.tensorflow.org/install/migration). In this particular case, you want to use `tf.summary.histogram`.\r\n\r\nGoing forward, with future 1.x releases, the API will be much more stable.", "I have tenserflow with 0.11.0rc2 version, but still getting error.\r\n"]}, {"number": 5162, "title": "How to use tf c api with cuda ?", "body": "I followed the  tutorial of  \"https://www.tensorflow.org/versions/r0.11/tutorials/image_recognition/index.html#usage-with-the-c-api\" \n\nbut it is only support CPU, so how to enable GPU supported ? \n", "comments": ["@tanguofu : Adding `--config=cuda` to your `bazel build` command should enable GPU support. So, in this case it would be:\n\n``` sh\nbazel build --config=cuda tensorflow/examples/label_image/...\n```\n\nHope that helps. Let us know either way. Thanks.\n", "@asimshankar  \ni build build_pip_package is ok  \n`./configure with cuda`\n`bazel build -c opt --config=cuda --jobs 2 //tensorflow/tools/pip_package:build_pip_package`\n\nbut when run \n`bazel build --config=cuda --jobs 2 tensorflow/examples/label_image/label_image`\ncome to:\n_ERROR: /home/tanguofu/.cache/bazel/_bazel_tanguofu/5e46183ef599b405375ab0f36c679e7e/external/local_config_cuda/crosstool/BUILD:4:1: Traceback (most recent call last):\n    File \"/home/tanguofu/.cache/bazel/_bazel_tanguofu/5e46183ef599b405375ab0f36c679e7e/external/local_config_cuda/crosstool/BUILD\", line 4\n        error_gpu_disabled()\n    File \"/home/tanguofu/.cache/bazel/_bazel_tanguofu/5e46183ef599b405375ab0f36c679e7e/external/local_config_cuda/crosstool/error_gpu_disabled.bzl\", line 3, in error_gpu_disabled\n        fail(\"ERROR: Building with --config=c...\")\nERROR: Building with --config=cuda but TensorFlow is not configured to build with GPU support. Please re-run ./configure and enter 'Y' at the prompt to build with GPU support.\nERROR: no such target '@local_config_cuda//crosstool:toolchain': target 'toolchain' not declared in package 'crosstool' defined by /home/tanguofu/.cache/bazel/_bazel_tanguofu/5e46183ef599b405375ab0f36_\n\nso which tf version do you build success ?\n`\nbazel build --config=cuda tensorflow/examples/label_image/..\n`\nand mine is master, the head git log is : \n\n_tanguofu@tanguofu-ThinkPad-T450:~/workspace/tensorflow$ git log\ncommit 4e8497dcdb7918082732c01cf777f3559fc8168b\nMerge: ef2ca7f ae36978\nAuthor: drpngx drpngx@users.noreply.github.com\nDate:   Sun Oct 23 14:36:54 2016 -0700\n\n```\nMerge pull request #5135 from villasv/master\n\nOption to config python lib path from env var_\n```\n\nthanks for your help.\n", "Did you reboot your machine or restart the bazel daemon after ./configure and pip build? If yes, it might be related to [#4705](https://github.com/tensorflow/tensorflow/issues/4705) and [#4841](https://github.com/tensorflow/tensorflow/issues/4841)\n", "@tanguofu : Could you also provide details on what happened with the `./configure` script? From the bazel errors, it seems that CUDA wasn't enabled with `./configure`. \n", "Also, could you try with `bazel build -c opt --config=cuda //tensorflow/examples/label_image/...`?\n", "after re checkout the code, and i build this ok ! \n`\nbazel build -c opt --config=cuda //tensorflow/examples/label_image/... \n`\namazing !   thank @asimshankar  and @firolino very much !!!\n", "Glad it worked out. If you have any insight into what may have been broken in the previous checkout, do share. \n\nBut since it seems things are working when you start from a clean slate, I'm going to close this issue out. Feel free to reopen if I'm mistaken. Thanks!\n"]}, {"number": 5161, "title": "`import tensorflow` with CUDA throws segmentation fault in macOS", "body": "```\n$ export DYLD_LIBRARY_PATH=/usr/local/cuda/lib\n$ python -c 'import tensorflow'\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcublas.dylib locally\n[1]    9772 segmentation fault  python -c 'import tensorflow'\n```\n### What related GitHub issues or StackOverflow threads have you found by searching the web for your problem?\n\nSimilar one: http://stackoverflow.com/questions/38924568/tensorflow-0-10-cuda-on-osx-segfaults-on-python-import\nBut the answer is not helpful.\n### Environment info\n\nOperating System: macOS 10.12\n\nInstalled version of CUDA and cuDNN:\n\n```\n$ ls -l libcud*\n-rwxr-xr-x 1 root wheel 13504 Sep 27 06:59 libcuda.dylib\nlrwxr-xr-x 1 root wheel    45 Sep 27 07:00 libcudadevrt.a -> /Developer/NVIDIA/CUDA-8.0/lib/libcudadevrt.a\nlrwxr-xr-x 1 root wheel    50 Sep 27 07:00 libcudart.8.0.dylib -> /Developer/NVIDIA/CUDA-8.0/lib/libcudart.8.0.dylib\nlrwxr-xr-x 1 root wheel    46 Sep 27 07:00 libcudart.dylib -> /Developer/NVIDIA/CUDA-8.0/lib/libcudart.dylib\nlrwxr-xr-x 1 root wheel    49 Sep 27 07:00 libcudart_static.a -> /Developer/NVIDIA/CUDA-8.0/lib/libcudart_static.a\n```\n\nIf installed from binary pip package, provide:\n1. A link to the pip package you installed:\n\nwheel: https://storage.googleapis.com/tensorflow/mac/gpu/tensorflow-0.11.0rc1-py2-none-any.whl\n(CUDA driver version: 8.0.46)\n1. The output from `python -c \"import tensorflow; print(tensorflow.__version__)\"`.\n\nNot possible.\n### Logs or other output that would be helpful\n\nHow can I capture more detail of the segmentation fault? I will attach more if it is possible.\n", "comments": ["You're probably using the wrong python binary that does not correspond with your pip binary used for tf installation.\nFor MacOS this is usually a PITA with the built-in python and pip in /usr/bin/ and other ones from brew,macports,virtualenvs,etc. Make perfectly sure they match.\n", "This seems related to #5141.\n", "Do you want to try the resolutions in #5141 ? (Re-install CUDNN)\n", "Thanks, it looks like the same issue. Unfortunately, I still have same problem after installing cuddn. I will close this issue and subscribe #5141 \n"]}, {"number": 5160, "title": "installation issue\uff1aCan we install TensorFlow in Ubuntu14.04 without UI environment?", "body": "Can we install TensorFlow in Ubuntu14.04 **without UI environment**?\nI try install to install tensorflow in ubuntu with out UI, but i fail. So I want to know ,does the tensorflow support the ubuntu without UI environment?  thanks~\n### Environment info\n\nOperating System:\nUbuntu 14.04 without UI.\n`Linux data-science-toolbox 3.13.0-24-generic #47-Ubuntu SMP Fri May 2 23:30:00 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux`\n\nIf installed from binary pip package, provide:\n1. A link to the pip package you installed:\nhttps://storage.googleapis.com/tensorflow/linux/cpu/tensorflow-0.11.0rc1-cp27-none-linux_x86_64.whl\n", "comments": ["I've installed TensorFlow without UI, you just need shell access and be able to run \"pip install\" on the wheel\n", "@Lewis-Liu : Could you add some details about how you went about the install and what the failure was? (As much as possible, please fill in the details asked for in the [New issue template](https://github.com/tensorflow/tensorflow/issues/new) for future issues. Having more context helps us diagnose issues more effectively).\n", "@asimshankar   \n\n### Environment info\n\nubuntu 14.04  x86-64  on the VirtualBox. \n**I delete the Unity UI from OS for saving the system resource.**\npython version: python 2.7.6\n\n### A link to the pip package you installed:\n\nhttps://storage.googleapis.com/tensorflow/linux/cpu/tensorflow-0.11.0rc1-cp27-none-linux_x86_64.whl\n\n### What other attempted solutions have you tried?\n\nFirstly, I use pip to install the tensorflow. \n\n> sudo pip install --upgrade $TF_BINARY_URL\n\nBut it is very slow to download the  package.\nSo I use another way to download the package from the site.\nThen I cd to the directory of the package.\nAnd I use the following command to install tensorflow,but IOError happen.\n\n> vagrant@data-science-toolbox:~$ pwd\n> /home/vagrant\n> vagrant@data-science-toolbox:~$ ls\n> book  get-pip.py  tensorflow-0.11.0rc1-cp27-none-linux_x86_64.zip\n> vagrant@data-science-toolbox:~$ **sudo pip install tensorflow-0.11.0rc1-cp27-none-linux_x86_64.zip**\n> Unpacking ./tensorflow-0.11.0rc1-cp27-none-linux_x86_64.zip\n>   Running setup.py (path:/tmp/pip-w8yLzr-build/setup.py) egg_info for package from file:///home/vagrant/tensorflow-0.11.0rc1-cp27-none-linux_x86_64.zip\n>     Traceback (most recent call last):\n>       File \"<string>\", line 17, in <module>\n>     **IOError: [Errno 2] No such file or directory: '/tmp/pip-w8yLzr-build/setup.py'**\n>     Complete output from command python setup.py egg_info:\n>     Traceback (most recent call last):\n> \n> File \"<string>\", line 17, in <module>\n> \n> **IOError: [Errno 2] No such file or directory: '/tmp/pip-w8yLzr-build/setup.py'**\n> \n> ----------------------------------------\n> Cleaning up...\n> Command python setup.py egg_info failed with error code 1 in /tmp/pip-w8yLzr-build\n> Storing debug log for failure in /home/vagrant/.pip/pip.log\n", "@Lewis-Liu :  You seem to be using a customized installation process that does not work with pip. Simply downloading the file, renaming it to a `.zip` and using `pip install` on it will not work (for one, any dependencies will not be downloaded and installed). \n\nPlease use one of the [supported installation procedures](https://www.tensorflow.org/versions/r0.11/get_started/os_setup.html#download-and-setup).\n\nUnfortunately, we do not have the bandwidth to support customized installation processes. Sorry about that.\n\nThat said, the installation process does not require a UI, so you're good there :)\n", "@asimshankar  ok, thanks a lot.\n"]}, {"number": 5159, "title": "r0.11 iOS build and examples fail with duplicate symbols in libtensorflow-core.a", "body": "This is from a fresh checkout of commit-id 40d28e24df77130792dc20408e45dda3154b9bc2, the current r0.11 branch.\n\nOn Mac OS 10.11.6 and Xcode 8.0, building the iOS library with build_ios_all.sh completes without errors, but attempting to actually build the Xcode projects in contrib/ios_examples or use the resulting libtensorflow-core.a in my own project fails with a linker error.\n\n```\nduplicate symbol __Z14tf_git_versionv in:\n    /Users/avalys/Desktop/tensorflow.build_ios/tensorflow/contrib/ios_examples/simple/../../makefile/gen/lib/libtensorflow-core.a(version_info.o)\nduplicate symbol __Z19tf_compiler_versionv in:\n    /Users/avalys/Desktop/tensorflow.build_ios/tensorflow/contrib/ios_examples/simple/../../makefile/gen/lib/libtensorflow-core.a(version_info.o)\nld: 2 duplicate symbols for architecture x86_64\nclang: error: linker command failed with exit code 1 (use -v to see invocation)\n```\n\nAnd indeed, nm -a libtensorflow-core.a | grep git_version gives:\n\n```\n0000000000000000 T __Z14tf_git_versionv\n0000000000000000 T __Z14tf_git_versionv\n```\n", "comments": ["This was apparently fixed in `master` by a change to `tensorflow/contrib/makefile/Makefile`:  https://github.com/tensorflow/tensorflow/commit/1283b84a49a9f5e14aca833cf981b61848aaf916#diff-acde23d6b74f5e8c54a951f435364be7R428\n\nversion_info.cc would seem to be included twice.\n", "@avalys : Sorry for the trouble and thanks very much for tracking down the fix yourself.\n\nI'm going to close this out since it seems you've found the right resolution. Feel free to reopen if I have misunderstood or if your problem hasn't been addressed.\n\nWe'll look into possibly cherry picking this into the next release candidate for 0.11, but no promises yet. We tend to avoid delayed releases to fix issues in the contrib/ directory.\n", "This is such a simple fix, I'd hate to see 0.11 get released without a working iOS build.\n\nThere is a bunch of other stuff in that commit - I've submitted a pull request with just this fix if it makes it any easier.\n\nhttps://github.com/tensorflow/tensorflow/pull/5173\n", "@avalys : This fix will be part of 0.11.0rc2 (and thus 0.11 final)\n"]}, {"number": 5158, "title": "add required positional argument: 'features_dtype'", "body": "method load_csv_with_header() need three positional argument. \n\n``` python3\ndef load_csv_with_header(filename,\n                         target_dtype,\n                         features_dtype,\n                         target_column=-1):\n```\n", "comments": ["@MrQianJinSi, thanks for your PR! By analyzing the history of the files in this pull request, we identified @jart, @tensorflower-gardener and @philstahlfeld to be potential reviewers.\n", "Can one of the admins verify this patch?\n", "LGTM. \n\n@tensorflow-jenkins test this please. \n"]}, {"number": 5157, "title": "move type2index into EIGEN_HAS_INDEX_LIST", "body": "https://github.com/tensorflow/tensorflow/pull/5127 has a small issue that type2index / IndexList is used without checking for EIGEN_HAS_INDEX_LIST which broke the windows gpu build.\nThis makes it build again.\n", "comments": ["@guschmue, thanks for your PR! By analyzing the history of the files in this pull request, we identified @ebrevdo, @keveman and @Mistobaan to be potential reviewers.\n", "Can one of the admins verify this patch?\n", "can you invert the if condition? `#if defined #else ... #endif`. This to be able to remove the `!`. I had a feeling that I had to do something like this from the single example that I found in TF using these functions. \n", "certainly can switch the ifdef. But there is the same ifdef in line 67. Switch both or none ? \n", "oh I see, no then is better to leave it like this for consistency. \n", "Cool, thank you. Btw, the missing ifdef: I'd not have seen it either. But next time we know :)\n", "Thanks for the fix, Guenther!\n", "@tensorflow-jenkins test this please.\n", "Jenkins, test this please.\n"]}, {"number": 5156, "title": "Feature Request : inline graph visualization for ipython", "body": "Building TensorFlow graphs is much easier when done in an interactive environment like ipython.\n\nWould be nice to have an interactive display of the current graph inline in ipython using something like mpld3. Another simpler possibility would be to just output an image of the current graph (no interactivity).\n", "comments": ["There's already a way to do it. The widget that's used to visualize the graph in TensorBoard is embeddable into Jupyter notebook: http://stackoverflow.com/questions/38189119/simple-way-to-visualize-a-tensorflow-graph-in-jupyter/38192374#38192374\n", "This is awesome! Thanks!\n\nMaybe this should be documented better? Also something like tf.show_graph() might be nicer than the current solution.\n", "FYI @jart @danmane \n(Thanks @yaroslavvb!)\nClosing this out since there is a way to do what @AshishBora asked for.\n"]}, {"number": 5155, "title": "Cannot install tensorflow on OSX", "body": "I'm having issues installing tensorflow on my mac device. I seem to be getting a protobuf version mismatch with rc0 wheel. \n\n> Installing collected packages: protobuf, tensorflow\n>   Found existing installation: protobuf 3.0.0a2\n>     Uninstalling protobuf-3.0.0a2:\n>       Successfully uninstalled protobuf-3.0.0a2\n>   Found existing installation: tensorflow 0.11.0rc0\n>     Uninstalling tensorflow-0.11.0rc0:\n>       Successfully uninstalled tensorflow-0.11.0rc0\n> Successfully installed protobuf-3.0.0 tensorflow-0.11.0rc1\n\nAnd then trying to import\n\n```\npython -c \"import tensorflow\"\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"/usr/local/lib/python2.7/site-packages/tensorflow/__init__.py\", line 23, in <module>\n    from tensorflow.python import *\n  File \"/usr/local/lib/python2.7/site-packages/tensorflow/python/__init__.py\", line 53, in <module>\n    from tensorflow.core.framework.graph_pb2 import *\n  File \"/usr/local/lib/python2.7/site-packages/tensorflow/core/framework/graph_pb2.py\", line 16, in <module>\n    from tensorflow.core.framework import node_def_pb2 as tensorflow_dot_core_dot_framework_dot_node__def__pb2\n  File \"/usr/local/lib/python2.7/site-packages/tensorflow/core/framework/node_def_pb2.py\", line 16, in <module>\n    from tensorflow.core.framework import attr_value_pb2 as tensorflow_dot_core_dot_framework_dot_attr__value__pb2\n  File \"/usr/local/lib/python2.7/site-packages/tensorflow/core/framework/attr_value_pb2.py\", line 16, in <module>\n    from tensorflow.core.framework import tensor_pb2 as tensorflow_dot_core_dot_framework_dot_tensor__pb2\n  File \"/usr/local/lib/python2.7/site-packages/tensorflow/core/framework/tensor_pb2.py\", line 16, in <module>\n    from tensorflow.core.framework import tensor_shape_pb2 as tensorflow_dot_core_dot_framework_dot_tensor__shape__pb2\n  File \"/usr/local/lib/python2.7/site-packages/tensorflow/core/framework/tensor_shape_pb2.py\", line 22, in <module>\n    serialized_pb=_b('\\n,tensorflow/core/framework/tensor_shape.proto\\x12\\ntensorflow\\\"z\\n\\x10TensorShapeProto\\x12-\\n\\x03\\x64im\\x18\\x02 \\x03(\\x0b\\x32 .tensorflow.TensorShapeProto.Dim\\x12\\x14\\n\\x0cunknown_rank\\x18\\x03 \\x01(\\x08\\x1a!\\n\\x03\\x44im\\x12\\x0c\\n\\x04size\\x18\\x01 \\x01(\\x03\\x12\\x0c\\n\\x04name\\x18\\x02 \\x01(\\tB2\\n\\x18org.tensorflow.frameworkB\\x11TensorShapeProtosP\\x01\\xf8\\x01\\x01\\x62\\x06proto3')\nTypeError: __init__() got an unexpected keyword argument 'syntax'\n```\n\nThis thread https://github.com/tensorflow/tensorflow/issues/11 seems to mention this to be a protobuf version mismatch error but I'm not sure. \n\nAny workarounds or if anyone has a clue on what's wrong?\n", "comments": ["@mohitsharma0690 : Thanks for the report. However, could you please add some more detail, for example, a minimal set of steps one can take to reproduce the problem? For example, I tried the following on my OS X El Capitan laptop (where I use [virtualenv](https://www.tensorflow.org/versions/r0.11/get_started/os_setup.html#virtualenv-installation)):\n\n``` sh\nvirtualenv --system-site-packages ~/tf-venv\nsource ~/tf-venv/bin/activate \nexport TF_BINARY_URL=https://storage.googleapis.com/tensorflow/mac/cpu/tensorflow-0.11.0rc1-py2-none-any.whl\npip install --upgrade $TF_BINARY_URL\npython -c \"import tensorflow; print tensorflow.__version__\"\n```\n\nand got the following output (no errors):\n\n```\nCollecting tensorflow==0.11.0rc1 from https://storage.googleapis.com/tensorflow/mac/cpu/tensorflow-0.11.0rc1-py2-none-any.whl\n  Downloading https://storage.googleapis.com/tensorflow/mac/cpu/tensorflow-0.11.0rc1-py2-none-any.whl (35.5MB)\n    100% |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 35.5MB 36kB/s \nRequirement already up-to-date: mock>=2.0.0 in /Library/Python/2.7/site-packages (from tensorflow==0.11.0rc1)\nCollecting protobuf==3.0.0 (from tensorflow==0.11.0rc1)\n  Downloading protobuf-3.0.0-py2.py3-none-any.whl (342kB)\n    100% |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 348kB 1.8MB/s \nCollecting numpy>=1.11.0 (from tensorflow==0.11.0rc1)\n  Downloading numpy-1.11.2-cp27-cp27m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl (3.9MB)\n    100% |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 3.9MB 322kB/s \nRequirement already up-to-date: wheel in ./tf-venv/lib/python2.7/site-packages (from tensorflow==0.11.0rc1)\nRequirement already up-to-date: six>=1.10.0 in /Library/Python/2.7/site-packages/six-1.10.0-py2.7.egg (from tensorflow==0.11.0rc1)\nRequirement already up-to-date: funcsigs>=1; python_version < \"3.3\" in /Library/Python/2.7/site-packages (from mock>=2.0.0->tensorflow==0.11.0rc1)\nRequirement already up-to-date: pbr>=0.11 in /Library/Python/2.7/site-packages (from mock>=2.0.0->tensorflow==0.11.0rc1)\nRequirement already up-to-date: setuptools in ./tf-venv/lib/python2.7/site-packages (from protobuf==3.0.0->tensorflow==0.11.0rc1)\nInstalling collected packages: protobuf, numpy, tensorflow\n  Found existing installation: protobuf 3.0.0b2\n    Not uninstalling protobuf at /Library/Python/2.7/site-packages, outside environment ./tf-venv\n  Found existing installation: numpy 1.8.0rc1\n    Not uninstalling numpy at /System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python, outside environment \nSuccessfully installed numpy-1.11.2 protobuf-3.0.0 tensorflow-0.11.0rc1\n\n0.11.0rc1\n```\n\nLet us know what steps you took that led to this problem, and we might be able to figure it out. If possible, please provide all details asked for in the [New issue template](https://github.com/tensorflow/tensorflow/issues/new).\n", "This seems similar to #5168 , which (though for Ubuntu) has more detail. Closing this bug out as a duplicate, please follow along on #5168  (and maybe use virtualenv if you can, since that isolates the pip packages and their dependencies)\n", "For anyone seeing this, my issue was with having protobuf(2.6.0 or something) installed somehow via homebrew, it worked after removing it.\n", "Ran across this as well, upgrading protobuf also works (installed version 3.1).", "i think tensorflow is not supported on python 3.8. Any idea?"]}, {"number": 5154, "title": "Unknown git option: -C", "body": "I'm trying to compile the latest TensorFlow, but I'm getting a `git` error:\n\n```\n$ bazel build -c opt //tensorflow/tools/pip_package:build_pip_package\nINFO: Loading package: @local_config_xcode//\nINFO: Found 1 target...\nINFO: From Executing genrule //tensorflow/core:version_info_gen:\nUnknown option: -C\nusage: git [--version] [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]\n           [-p|--paginate|--no-pager] [--no-replace-objects] [--bare]\n           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]\n           [-c name=value] [--help]\n           <command> [<args>]\n! \n```\n\nIt looks like the `git -C` option is used, but that is only supported in git version >= 1.8.\n\nIt looks like it's not worth requiring git 1.8 just for this?\n", "comments": ["@markusdr : Thanks for the note.\nWe welcome contributions to make this work with git < 1.8 (you probably have to change things in [gen_git_source.py](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/tools/git/gen_git_source.py#L150). Feel free to submit a Pull Request.\n\nHowever, given than git 1.8 is over 4 years old, it may be hard to predict other issues that might arise with using very old versions of git. If you consider it particularly important to work with such old versions of git, I'd be curious to hear your thoughts.\n", "Please watch PR #4580.\n", "Submitted. Woohoo!\n"]}, {"number": 5153, "title": "skflow: DNNClassifier fit has no logdir Parameter", "body": "I'm missing the logdir parameter on DNNClassifier  fit. This is either a bug or a changed behaviour that I don't get (sorry if this should be on stackoverflow, I'm not sure)\n\nTensorFlowDNNClassifier tells me it's depracted and I should use DNNClassifier:\n![tensorflowdnnclassifier](https://cloud.githubusercontent.com/assets/10122382/19629647/835ef85c-9979-11e6-9966-0aeedb8107bc.png)\n\nBut when I use DNNClassifier the classifier.fit() Method loses it's logdir parameter (I use for tensorboard):\n![logdir](https://cloud.githubusercontent.com/assets/10122382/19629870/60dd7ba0-997e-11e6-8071-5c5f1c1ee81c.PNG)\n\nThe behaviour slightly changes in general like now max_steps behaves like steps previously did and steps or no parameter about steps trains very long/forever.\n", "comments": ["Use `model_dir`. Yes that is the right change in behavior. \n", "@codingyourlife : Just to add a little more detail - `model_dir` is a constructor parameter to to [DNNClassifier](https://www.tensorflow.org/versions/r0.11/api_docs/python/contrib.learn.html#DNNClassifier).\n\nHope that helps. I'm going to close this issue as it seems you have an answer. But in case you run into trouble, please feel free to reopen. Thanks!\n"]}]