[{"number": 52778, "title": "Fix out-of-bounds memory error in tf.ragged.cross shape inference whe\u2026", "body": "\u2026n it is called with invalid inputs.\r\n\r\nPiperOrigin-RevId: 400049589\r\nChange-Id: Icd535f4c6b96b3c926befb70a0e44e6d2b004c0a", "comments": []}, {"number": 52777, "title": "Fix out-of-bounds memory error in tf.ragged.cross shape inference whe\u2026", "body": "\u2026n it is called with invalid inputs.\r\n\r\nPiperOrigin-RevId: 400049589\r\nChange-Id: Icd535f4c6b96b3c926befb70a0e44e6d2b004c0a", "comments": []}, {"number": 52776, "title": "Update TPU AllToAll op to avoid divide by 0.", "body": "PiperOrigin-RevId: 400259638\r\nChange-Id: Ic4cfe4fe7159da38caed8044ee005f898e42cd86", "comments": []}, {"number": 52775, "title": "Update TPU AllToAll op to avoid divide by 0.", "body": "PiperOrigin-RevId: 400259638\r\nChange-Id: Ic4cfe4fe7159da38caed8044ee005f898e42cd86", "comments": []}, {"number": 52773, "title": "Error checking for zero size filters for tf.nn.convolution (conv2d, c\u2026", "body": "\u2026onv3d)\r\n\r\nPreviously, this case was crash (floating point exception).\r\n\r\nPiperOrigin-RevId: 389661784\r\nChange-Id: I65a60c1c1608537d38a37b8839ce0e82e419472e", "comments": []}, {"number": 52772, "title": "Error checking for zero size filters for tf.nn.convolution (conv2d, c\u2026", "body": "\u2026onv3d)\r\n\r\nPreviously, this case was crash (floating point exception).\r\n\r\nPiperOrigin-RevId: 389661784\r\nChange-Id: I65a60c1c1608537d38a37b8839ce0e82e419472e", "comments": []}, {"number": 52771, "title": "A negative size in one of the split sizes allowed the computed size o\u2026", "body": "\u2026f another\r\n\r\nto exceed the total dimension, leading to a segfault and security vulnerability.\r\nAdding a check for negative sizes prevents this.\r\n\r\nPiperOrigin-RevId: 401035665\r\nChange-Id: I79bbe329787dac82aa4bf60397a9129b716aedab", "comments": []}, {"number": 52770, "title": "A negative size in one of the split sizes allowed the computed size o\u2026", "body": "\u2026f another\r\n\r\nto exceed the total dimension, leading to a segfault and security vulnerability.\r\nAdding a check for negative sizes prevents this.\r\n\r\nPiperOrigin-RevId: 401035665\r\nChange-Id: I79bbe329787dac82aa4bf60397a9129b716aedab", "comments": []}, {"number": 52769, "title": "Add shape checks to FusedBatchNorm kernels.", "body": "PiperOrigin-RevId: 399755576\r\nChange-Id: If8049fde109cc33badb5509d174b9b95aee1ea5e", "comments": []}, {"number": 52768, "title": "No matching distribution found for tensorflow", "body": "Used one of your Dockerfiles to build a docker image with TensorFlow installed (also I've tried to do it manually and used python docker image and latest Ubuntu image) but all the time I get same error: \r\n\r\n<img width=\"1051\" alt=\"image\" src=\"https://user-images.githubusercontent.com/33292483/139205340-79248dec-c487-4589-be45-9593f0492dd8.png\">\r\n\r\nI've tried to update pip and setuptools.", "comments": ["I don't get how can I install TensorFlow inside docker image (python or ubuntu). Always get \r\nERROR: No matching distribution found for tensorflow", "Hi @KochankovID ! Sorry for the late response. Did you follow instructions from [here ](https://www.tensorflow.org/install/docker) ?You can check these threads to upgrade your setup tools.[link1](https://stackoverflow.com/questions/59469537/how-can-i-upgrade-pips-setup-tools),[link2 ](https://github.com/pypa/pip/issues/8395)and confirm the version using this command  `pip --version` . Thank you!\r\n", "I actually found out what my problem and hope it'll help others.\r\n\r\nI use mac with m1 processor which has arm architecture. So, when I use Docker images (as Ubuntu or others) it downloads images compiled for aarch64 platform (kind of Linux for arm) because it's my host platform.\r\n\r\nBut looks like TensorFlow doesn't have aarch64 package on PyPi and doesn't support this platform.\r\nAnd that's why I had such error. Pip can't find distribution package for aarch64 platform.\r\n\r\nBasically, mac can run x82_64 images (but they are a bit slower). In order to fix this problem, one can just specify platform of docker image:\r\n\r\nFROM amd64/python:3.9-bullseye\r\n\r\nor arm64/\"name of your image\"\r\n\r\n@mohantym  Thank you for your response. Hope some day TensorFlow will support aarch64 platform :) \r\n\r\n", "Are you satisfied with the resolution of your issue?\n<a href=\"https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&entry.2137816233=https://github.com/tensorflow/tensorflow/issues/52768\">Yes</a>\n<a href=\"https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&entry.2137816233=https://github.com/tensorflow/tensorflow/issues/52768\">No</a>\n"]}, {"number": 52767, "title": "Merge pull request #51138 from yongtang:46911-tile", "body": "PiperOrigin-RevId: 397891537\r\nChange-Id: I9b12304000e80dd87e6d4a42614ab10383a967b0", "comments": []}, {"number": 52766, "title": "Merge pull request #51138 from yongtang:46911-tile", "body": "PiperOrigin-RevId: 397891537\r\nChange-Id: I9b12304000e80dd87e6d4a42614ab10383a967b0", "comments": []}, {"number": 52765, "title": "Merge pull request #51138 from yongtang:46911-tile", "body": "PiperOrigin-RevId: 397891537\r\nChange-Id: I9b12304000e80dd87e6d4a42614ab10383a967b0", "comments": []}, {"number": 52764, "title": "MultiHeadAttention layer save and load changes weight", "body": "Please go to Stack Overflow for help and support:\r\n\r\nhttps://stackoverflow.com/questions/tagged/tensorflow\r\n\r\nIf you open a GitHub issue, here is our policy:\r\n\r\n1.  It must be a bug, a feature request, or a significant problem with the\r\n    documentation (for small docs fixes please send a PR instead).\r\n2.  The form below must be filled out.\r\n3.  It shouldn't be a TensorBoard issue. Those go\r\n    [here](https://github.com/tensorflow/tensorboard/issues).\r\n\r\n**Here's why we have that policy**: TensorFlow developers respond to issues. We want to focus on work that benefits the whole community, e.g., fixing bugs and adding features. Support only helps individuals. GitHub also notifies thousands of people when issues are filed. We want them to see you communicating an interesting problem, rather than being redirected to Stack Overflow.\r\n\r\n------------------------\r\n\r\n### System information\r\n\r\n-   **Have I written custom code (as opposed to using a stock example script\r\n    provided in TensorFlow)**: Yes\r\n-   **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Linux Ubuntu 16.04\r\n-   **Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue\r\n    happens on a mobile device**:\r\n-   **TensorFlow installed from (source or binary)**: pip install tensorflow\r\n-   **TensorFlow version (use command below)**: v2.4.0-49-g85c8b2a817f 2.4.1\r\n-   **Python version**: 3.7.11\r\n-   **Bazel version (if compiling from source)**:\r\n-   **GCC/Compiler version (if compiling from source)**:\r\n-   **CUDA/cuDNN version**: https://aws.amazon.com/ec2/instance-types/g4/\r\n-   **GPU model and memory**: https://aws.amazon.com/ec2/instance-types/g4/\r\n-   **Exact command to reproduce**: see below in the source code session.\r\n\r\nYou can collect some of this information using our environment capture script:\r\n\r\nhttps://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh\r\n\r\nYou can obtain the TensorFlow version with:\r\n\r\n```bash\r\npython -c \"import tensorflow as tf; print(tf.version.GIT_VERSION, tf.version.VERSION)\"\r\n```\r\n\r\n### Describe the problem\r\nDescribe the problem clearly here. Be sure to convey here why it's a bug in TensorFlow or a feature request.\r\n\r\ntrained a small model with a MHA layer and save model and load it back, the weight of the MHA layer changed. I have checked similar thread like [this](https://github.com/tensorflow/tensorflow/issues/47722), the suggestion was to fix the seed given to the `kernel_initializer`, so did that as shown below, but does not fix the problem. Notably, if just build the model and save without training (`.fit`), loading back the model, then the outputs are consistent. \r\n\r\n### Source code\r\n\r\nfrom tensorflow.keras.layers import MultiHeadAttention, Concatenate, Add, Dense\r\nfrom tensorflow.keras.initializers import glorot_uniform\r\nimport tensorflow as tf\r\nfrom tensorflow.keras.optimizers import Adam\r\n\r\n    def encoder_layer_simple(units, d_model, num_heads, dropout, name=\"encoder_layer\"):\r\n        assert d_model % num_heads == 0\r\n    \r\n        depth = d_model // num_heads\r\n        query = tf.keras.Input(shape=(None, d_model), name=\"query\")\r\n        key = tf.keras.Input(shape=(None, d_model), name=\"key\")\r\n        value = tf.keras.Input(shape=(None, d_model), name='value')\r\n    \r\n        attention, attn_weights = MultiHeadAttention(num_heads, key_dim=depth, value_dim=depth, dropout=dropout,\r\n                                                     kernel_initializer=glorot_uniform(seed=0))(\r\n            query=query, value=value, key=key, return_attention_scores=True)\r\n        attention = tf.keras.layers.LayerNormalization(epsilon=1e-6)(attention + value)\r\n    \r\n        # ffwd sub-layer\r\n        outputs = tf.keras.layers.Dense(units=units, activation='relu')(attention)\r\n        outputs = tf.keras.layers.Dense(units=d_model)(outputs)\r\n        outputs = tf.keras.layers.Dropout(rate=dropout)(outputs)\r\n    \r\n        outputs = tf.keras.layers.LayerNormalization(epsilon=1e-6)(outputs + attention)\r\n    \r\n        return tf.keras.Model(inputs=[query, key, value], outputs=outputs, name=name)\r\n\r\n#### then create an 'encoder' model and do a fit\r\n    encoder = encoder_layer_simple(512, 400, 8, 0, name='test_encoder')\r\n    \r\n    query = tf.random.uniform([256, 100, 400])\r\n    \r\n    enc_x = {'query':query, 'value':query, 'key':query}\r\n    enc_y = tf.random.uniform([256, 100, 400])\r\n    encoder.compile(Adam(),'MSE')\r\n    # if we don't do fit, then the results are consistent\r\n    encoder.fit(x=enc_x, y=enc_y)\r\n    \r\n    save_path = \"path_to_model\"\r\n    encoder.save(save_path)\r\n    loaded = tf.keras.models.load_model(save_path, compile=False)\r\n    \r\n    eout = encoder(enc_x)\r\n    lout = loaded(enc_x)\r\n    \r\n    np.allclose(lout.numpy(), eout.numpy()) # will output False\r\n\r\n#### also can get weight matrix from the MHA layer, close but different\r\n\r\n    encoder.get_layer(\"multi_head_attention\").get_weights()[0][1, 4, 1:10]\r\n\r\narray([ 0.01589977,  0.01451083, -0.00762749, -0.00915873,  0.00802898,\r\n        0.00830225, -0.01598875,  0.01182209,  0.01533959], dtype=float32)\r\n    \r\n    loaded.get_layer(\"multi_head_attention\").get_weights()[0][1, 4, 1:10]\r\n\r\narray([ 0.01591637,  0.01452216, -0.00764309, -0.00916362,  0.0079951 ,\r\n        0.0082739 , -0.01598743,  0.01181626,  0.01530811], dtype=float32)\r\n   \r\n\r\n\r\n\r\n\r\n\r\n", "comments": ["@yesufeng \r\nPlease post this issue on [keras-team/keras repo.](https://github.com/keras-team/keras/issues)\r\nTo know more see;\r\n[https://discuss.tensorflow.org/t/keras-project-moved-to-new-repository-in-https-github-com-keras-team-keras/1999](https://discuss.tensorflow.org/t/keras-project-moved-to-new-repository-in-https-github-com-keras-team-keras/1999)\r\nThank you!", "This issue has been automatically marked as stale because it has no recent activity. It will be closed if no further activity occurs. Thank you.\n", "Closing as stale. Please reopen if you'd like to work on this further.\n", "Are you satisfied with the resolution of your issue?\n<a href=\"https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&entry.2137816233=https://github.com/tensorflow/tensorflow/issues/52764\">Yes</a>\n<a href=\"https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&entry.2137816233=https://github.com/tensorflow/tensorflow/issues/52764\">No</a>\n"]}, {"number": 52763, "title": "Model weight and training loss turn to nan During and after training", "body": "I'm using Keras layer to define a multi-input single output model. I've check the calculation by passing a dummy data to the layer using functional API and model.predict before calling model.fit, and the model works fine. It computes the output as a float, and calculate the loss value as expected. However, whenever I call model.fit, the training loss turns to `nan`. I tried to see the model weight before and after training, and it turns out the weight was exist before calling `model.fit`, but turns to nan after fitting the model. I assume this issue was caused by gradient calculation, but I don't know for sure.\r\n\r\nHere is the sample of what happened:\r\n\r\n<img width=\"1104\" alt=\"Screen Shot 2021-10-28 at 12 14 11\" src=\"https://user-images.githubusercontent.com/38188988/139191329-f6e45e8a-1ff1-4c82-b647-d7d945881136.png\">\r\n\r\n<img width=\"1115\" alt=\"Screen Shot 2021-10-28 at 12 14 33\" src=\"https://user-images.githubusercontent.com/38188988/139191365-a51f54d8-4800-4b71-959e-2a01a4094438.png\">\r\n\r\n<img width=\"1119\" alt=\"Screen Shot 2021-10-28 at 12 14 49\" src=\"https://user-images.githubusercontent.com/38188988/139191386-afe14fb7-2489-4f4b-8c4b-bc35382effaa.png\">\r\n\r\n<img width=\"1113\" alt=\"Screen Shot 2021-10-28 at 12 15 06\" src=\"https://user-images.githubusercontent.com/38188988/139191407-9254f87e-e10d-4cae-af37-8b799c0e5eba.png\">\r\n\r\n<img width=\"815\" alt=\"Screen Shot 2021-10-28 at 12 15 16\" src=\"https://user-images.githubusercontent.com/38188988/139191424-09062211-fcf8-4fe8-a88b-86a45fad5d52.png\">\r\n\r\nI'm experiencing this issue on multiple devices: AWS SageMaker CPU and GPU instance, and my MacOS local jupyter notebook.\r\n\r\n**Tensorflow Version** : 2.6.0\r\n**Tensorflow Installed from**: PyPI\r\n**Python ver**: 3.7.10\r\n", "comments": ["I've found the solution. It turns out my data is not clean and still contain null values here and there. Closing this issue.", "Are you satisfied with the resolution of your issue?\n<a href=\"https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&entry.2137816233=https://github.com/tensorflow/tensorflow/issues/52763\">Yes</a>\n<a href=\"https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&entry.2137816233=https://github.com/tensorflow/tensorflow/issues/52763\">No</a>\n"]}, {"number": 52762, "title": "PR #51732: Fix crash of tf.image.crop_and_resize when input is large \u2026", "body": "\u2026number\r\n\r\nImported from GitHub PR https://github.com/tensorflow/tensorflow/pull/51732\r\n\r\nThis PR is part of the effort in #46890 where\r\ntf.image.crop_and_resize will crash if shape consists of large number.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\nCopybara import of the project:\r\n\r\n--\r\nc8d87055a56d8740d27ad8bdc74a7459ede6900e by Yong Tang <yong.tang.github@outlook.com>:\r\n\r\nFix crash of tf.image.crop_and_resize when input is large number\r\n\r\nThis PR is part of the effort in 46890 where\r\ntf.image.crop_and_resize will crash if shape consists of large number.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\nCOPYBARA_INTEGRATE_REVIEW=https://github.com/tensorflow/tensorflow/pull/51732 from yongtang:46890-tf.image.crop_and_resize c8d87055a56d8740d27ad8bdc74a7459ede6900e\r\nPiperOrigin-RevId: 394109830\r\nChange-Id: If049dad0844df9353722029ee95bc76819eda1f4", "comments": ["#52841"]}, {"number": 52761, "title": "PR #51658: Fix crash of tf.image.extract_glimpse with negative input -merge to r2.5", "body": "PiperOrigin-RevId: 401246064\r\nChange-Id: I9e64ab662b1a0bc8c6be4dcc4f0e620db6708d22", "comments": []}, {"number": 52760, "title": "PR #51658: Fix crash of tf.image.extract_glimpse with negative input (merge to 2.6)", "body": "PiperOrigin-RevId: 401246064\r\nChange-Id: I9e64ab662b1a0bc8c6be4dcc4f0e620db6708d22", "comments": []}, {"number": 52759, "title": "Is tf1.15-gpu compatible with cudnn8,cuda10.2?", "body": "centos7\r\ngpu 2080ti\r\ngcc 4.8.5\r\nbazel 0.26.1\r\npython 3.8 \r\ntf code  1.15\r\ncuda 10.2\r\ncudnn 8.0.1\r\ni modified  **./configure.py**  and  **./third_party/gpus/find_cuda_config.py** and **WORKSPACE** When I execute **bazel build --config=opt --config=cuda //tensorflow:libtensorflow_cc.so** command, it has some errors:\r\n\r\n![\u4f01\u4e1a\u5fae\u4fe1\u622a\u56fe_16353867475126](https://user-images.githubusercontent.com/61573829/139174477-e5d1b8d1-0832-4f09-a1af-ada97a8c5464.png)\r\n![\u4f01\u4e1a\u5fae\u4fe1\u622a\u56fe_16353867872436](https://user-images.githubusercontent.com/61573829/139174479-c98cdfe8-f4f4-4418-9227-51d86d9ff36e.png)\r\n![\u4f01\u4e1a\u5fae\u4fe1\u622a\u56fe_16353874251878](https://user-images.githubusercontent.com/61573829/139174718-eabfe646-bf5b-4643-8696-43066fa2e98a.png)\r\n\r\n![\u4f01\u4e1a\u5fae\u4fe1\u622a\u56fe_16353866595640](https://user-images.githubusercontent.com/61573829/139174485-e5b06680-7573-4ea0-a363-32ae9f5c90b2.png)\r\n![\u4f01\u4e1a\u5fae\u4fe1\u622a\u56fe_16353865686228](https://user-images.githubusercontent.com/61573829/139174495-7398e059-8bcc-4141-bf62-acc2d3e21698.png)\r\n\r\nIs tf1.1x-gpu can not be build with cudnn8,cuda10.2?", "comments": ["Hi @Zhangts98 ! Please try again with  GCC 7.3.1 and Python 3.6 .[Reference1 ](https://www.tensorflow.org/install/source#gpu), [Reference 2](https://www.tensorflow.org/install/source).     \r\n\r\nIt seems you are using older versions(1.x versions) of Tensorflow. We recommend that you upgrade  your code base to 2.x  versions as many features and bug fixes has been done in newer versions and let us know if the issue still persists in newer versions.    ", "> Hi @Zhangts98 ! Please try again with GCC 7.3.1 and Python 3.6 .[Reference1 ](https://www.tensorflow.org/install/source#gpu), [Reference 2](https://www.tensorflow.org/install/source).\r\n> \r\n> It seems you are using older versions(1.x versions) of Tensorflow. We recommend that you upgrade your code base to 2.x versions as many features and bug fixes has been done in newer versions and let us know if the issue still persists in newer versions.\r\n\r\nok, thank you.", "Ok @Zhangts98! Feel free to close this issue if it helped . Thanks!", "This issue has been automatically marked as stale because it has no recent activity. It will be closed if no further activity occurs. Thank you.\n", "Closing as stale. Please reopen if you'd like to work on this further.\n", "Are you satisfied with the resolution of your issue?\n<a href=\"https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&entry.2137816233=https://github.com/tensorflow/tensorflow/issues/52759\">Yes</a>\n<a href=\"https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&entry.2137816233=https://github.com/tensorflow/tensorflow/issues/52759\">No</a>\n"]}, {"number": 52758, "title": "Merge pull request #51975 from yongtang:51936-max_pool3d", "body": "PiperOrigin-RevId: 401245519\r\nChange-Id: I67d2cbb0e21729b94186ca9bf82450ff93132ff2", "comments": []}, {"number": 52757, "title": "Merge pull request #51975 from yongtang:51936-max_pool3d", "body": "PiperOrigin-RevId: 401245519\r\nChange-Id: I67d2cbb0e21729b94186ca9bf82450ff93132ff2", "comments": []}, {"number": 52756, "title": "Merge pull request #51975 from yongtang:51936-max_pool3d", "body": "PiperOrigin-RevId: 401245519\r\nChange-Id: I67d2cbb0e21729b94186ca9bf82450ff93132ff2", "comments": ["#52844"]}, {"number": 52755, "title": "pycham Cannot auto replenish kersa.layers", "body": "import numpy as np\r\nimport pandas as pd\r\nimport matplotlib as plt\r\nimport tensorflow as tf\r\nimport minst_reader\r\n\r\n\r\n# \u52a0\u8f7dfashion_mnist\u6570\u636e\u96c6\r\nx_train, y_train= minst_reader.load_mnist('fashion',kind='train')\r\nx_test, y_test= minst_reader.load_mnist('fashion',kind='t10k')\r\nx_train,y_train = x_train/ 255.0,y_train/255.0\r\n\r\nmodel = tf.keras.Sequential([\r\n    tf.keras.layers.Flatten(),\r\n    tf.keras.layers.Dense(128,activation = 'relu')\r\n    tf.keras.layers.Dense(10,activation = 'softmax')\r\n])\r\n![}8C4{Z5%P`2%A)JP3OB{7AN](https://user-images.githubusercontent.com/72368814/139173294-0c713a9e-9849-4bbc-a3c3-a12fe62009cf.png)\r\ne\r\n", "comments": ["@a906247390 \r\nPlease post this issue on [keras-team/keras repo.](https://github.com/keras-team/keras/issues)\r\nTo know more see;\r\n[https://discuss.tensorflow.org/t/keras-project-moved-to-new-repository-in-https-github-com-keras-team-keras/1999](https://discuss.tensorflow.org/t/keras-project-moved-to-new-repository-in-https-github-com-keras-team-keras/1999)\r\nThank you!", "@a906247390 I think this is more related to pycharm than keras. May be you need to set some parameters in pycharm. Thanks!", "This issue has been automatically marked as stale because it has no recent activity. It will be closed if no further activity occurs. Thank you.\n", "Closing as stale. Please reopen if you'd like to work on this further.\n", "Are you satisfied with the resolution of your issue?\n<a href=\"https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&entry.2137816233=https://github.com/tensorflow/tensorflow/issues/52755\">Yes</a>\n<a href=\"https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&entry.2137816233=https://github.com/tensorflow/tensorflow/issues/52755\">No</a>\n"]}, {"number": 52754, "title": "ModuleNotFoundError: No module named 'tf'", "body": "import numpy as np\r\nimport pandas as pd\r\nimport matplotlib as plt\r\nimport tensorflow as tf\r\nfrom tensorflow import keras\r\n\r\nprint(tf.__version__)\r\n\r\n# \u52a0\u8f7dfashion_mnist\u6570\u636e\u96c6\r\nfashion_mnist1 = tf.keras.datasets.fashion_mnist\r\n(x_train, y_train), (x_test, y_test) = fashion_mnist.load_data()\r\n\r\n\r\n\r\noutput is\r\n2.6.0\r\nTraceback (most recent call last):\r\n  File \"G:/workspace/py/data analize/untitled/Tensorflow2leanProject/prectise.py\", line 10, in <module>\r\n    fashion_mnist1 = tf.keras.datasets.fashion_mnist\r\n  File \"D:\\Users\\Administrator\\anaconda3\\lib\\site-packages\\tensorflow\\python\\util\\lazy_loader.py\", line 62, in __getattr__\r\n    module = self._load()\r\n  File \"D:\\Users\\Administrator\\anaconda3\\lib\\site-packages\\tensorflow\\python\\util\\lazy_loader.py\", line 45, in _load\r\n    module = importlib.import_module(self.__name__)\r\n  File \"D:\\Users\\Administrator\\anaconda3\\lib\\importlib\\__init__.py\", line 127, in import_module\r\n    return _bootstrap._gcd_import(name[level:], package, level)\r\n  File \"<frozen importlib._bootstrap>\", line 1014, in _gcd_import\r\n  File \"<frozen importlib._bootstrap>\", line 991, in _find_and_load\r\n  File \"<frozen importlib._bootstrap>\", line 961, in _find_and_load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 219, in _call_with_frames_removed\r\n  File \"<frozen importlib._bootstrap>\", line 1014, in _gcd_import\r\n  File \"<frozen importlib._bootstrap>\", line 991, in _find_and_load\r\n  File \"<frozen importlib._bootstrap>\", line 961, in _find_and_load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 219, in _call_with_frames_removed\r\n  File \"<frozen importlib._bootstrap>\", line 1014, in _gcd_import\r\n  File \"<frozen importlib._bootstrap>\", line 991, in _find_and_load\r\n  File \"<frozen importlib._bootstrap>\", line 961, in _find_and_load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 219, in _call_with_frames_removed\r\n  File \"<frozen importlib._bootstrap>\", line 1014, in _gcd_import\r\n  File \"<frozen importlib._bootstrap>\", line 991, in _find_and_load\r\n  File \"<frozen importlib._bootstrap>\", line 975, in _find_and_load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 671, in _load_unlocked\r\n  File \"<frozen importlib._bootstrap_external>\", line 783, in exec_module\r\n  File \"<frozen importlib._bootstrap>\", line 219, in _call_with_frames_removed\r\n  File \"D:\\Users\\Administrator\\anaconda3\\lib\\site-packages\\keras\\__init__.py\", line 25, in <module>\r\n    from tf.keras import models\r\nModuleNotFoundError: No module named 'tf'\r\n", "comments": ["@a906247390 ,\r\nPlease try to execute the code as mentioned **from tensorflow.keras import models** or **from tensorflow.keras.models import Model**.Please find the gist [here](https://colab.research.google.com/gist/tilakrayal/259ceda8330d6916037bb622111ea187/untitled104.ipynb).", "This issue has been automatically marked as stale because it has no recent activity. It will be closed if no further activity occurs. Thank you.\n", "Your reply is very helpful to me. I have newly configured Anaconda virtual environment to solve this problem", "Are you satisfied with the resolution of your issue?\n<a href=\"https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&entry.2137816233=https://github.com/tensorflow/tensorflow/issues/52754\">Yes</a>\n<a href=\"https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&entry.2137816233=https://github.com/tensorflow/tensorflow/issues/52754\">No</a>\n"]}, {"number": 52753, "title": "Make SparseFillEmptyRows validate that the length of `values` must be\u2026", "body": "\u2026 equal to the number of index tuples.\r\n\r\nPiperOrigin-RevId: 399969549\r\nChange-Id: I3c2f2ca1c1d2cc88bb5951c6958b38c16e9436c8", "comments": []}, {"number": 52751, "title": "Upgrade rules_apple to work with latest Bazel version", "body": null, "comments": ["CC @meteorcloudy @learning-to-play @pranve ", "Unfortunately, to merge this PR we'll have to upgrade Bazel to 4.x first, because Bazel 3.7.2 is not compatible with the new version of rules_apple anymore \ud83d\ude14", "https://github.com/tensorflow/tensorflow/pull/53261", "Should be handled by https://github.com/tensorflow/tensorflow/commit/18a1dc0ba806dc023808531f0373d9ec068e64bf"]}, {"number": 52750, "title": "Fixing security fixes in boosted trees ops", "body": "PiperOrigin-RevId: 405669548\r\nChange-Id: Iae224d240d1779bcc02405c2fff99785644fbd0d", "comments": ["#52821"]}, {"number": 52749, "title": "Fixing security fixes in boosted trees ops", "body": "PiperOrigin-RevId: 405669548\r\nChange-Id: Iae224d240d1779bcc02405c2fff99785644fbd0d", "comments": []}, {"number": 52748, "title": "Adding more validation checks to _ParallelConcatUpdate to avoid NPE.", "body": "PiperOrigin-RevId: 402569467\r\nChange-Id: I2db122dab68be2a5e4e8dd3375f5a70c4d2307ec", "comments": []}, {"number": 52747, "title": "Adding more validation checks to _ParallelConcatUpdate to avoid NPE.", "body": "PiperOrigin-RevId: 402569467\r\nChange-Id: I2db122dab68be2a5e4e8dd3375f5a70c4d2307ec", "comments": []}]