[{"number": 52874, "title": "Update release notes for TensorFlow 2.6.1", "body": "This PR is intentionally incomplete. One of the Release Owners for 2.6.1\nneeds to fill in the internal release notes for this version before the PR gets\nsubmitted. Click on the :pencil2: icon in the header for `RELEASE.md` under\n\"Files Changed\" above.", "comments": []}, {"number": 52873, "title": "Update release notes for TensorFlow 2.5.2", "body": "This PR is intentionally incomplete. One of the Release Owners for 2.5.2\nneeds to fill in the internal release notes for this version before the PR gets\nsubmitted. Click on the :pencil2: icon in the header for `RELEASE.md` under\n\"Files Changed\" above.", "comments": []}, {"number": 52872, "title": "Update release notes for TensorFlow 2.4.4", "body": "This PR is intentionally incomplete. One of the Release Owners for 2.4.4\nneeds to fill in the internal release notes for this version before the PR gets\nsubmitted. Click on the :pencil2: icon in the header for `RELEASE.md` under\n\"Files Changed\" above.", "comments": []}, {"number": 52871, "title": "Disable failing test", "body": null, "comments": []}, {"number": 52870, "title": "Fix bad ident", "body": null, "comments": []}, {"number": 52869, "title": "Remove merge markers", "body": null, "comments": []}, {"number": 52868, "title": "Update version numbers for TensorFlow 2.7.0", "body": "Before merging this PR, please double check that it has correctly updated\n`core/public/version.h`, `tools/pip_package/setup.py`, and\n`tensorflow/tensorflow.bzl`. Also review the execution notes below:\n\n```\nMajor: 2 -> 2\nMinor: 7 -> 7\nPatch: 0 -> 0\n\nNo lingering old version strings \"2.7.0-rc1\" found in source directory \n\"tensorflow/\". Good.\nNo lingering old version strings \"2.7.0rc1\" found in source directory \n\"tensorflow/\". Good.\n```", "comments": []}, {"number": 52867, "title": "Linker command not proper, as it does not look under /usr/local/lib", "body": "## URL(s) with the issue:\r\n\r\nhttps://www.tensorflow.org/install/lang_c\r\n\r\n## Description of issue (what needs changing):\r\n\r\nIn the **Linker** section, the given command is `sudo ldconfig`, but as per the description, it only links to the trusted directories (`/lib` and `/usr/lib`). This needs to be replaced with `sudo ldconfig /usr/local/lib -v` (-v is optional, only for verbose) assuming that the libtensorflow files have been extracted in `/usr/local`.\r\n\r\n### Clear description\r\n\r\nIf this method is not used, then we get this error while building the example \"Hello World\" program:\r\n`libtensorflow.so.2: cannot open shared object file: No such file or directory`.", "comments": ["@Ashvith \r\nA CL has been created and once that is closed this issue will be closed.", "@Ashvith \r\nPlease refer to the page for the update and move the issue to closed status.", "@Saduf2019 thanks for the improvement, I'll be closing this issue."]}, {"number": 52866, "title": "Add support for the \"--external-delegate-path\" to the CMake build of the benchmark tool", "body": "8f7b238: added support for the \"--external-delegate-path\" to the cmake build of the benchmark tool.  The support for external delegates is already part of the bazel build.\r\n\r\n4a85ea5: Adds TFLITE_ENABLE_HEXAGON around code that should have it.", "comments": ["Sorry, apologize for closing this ticket, also. I'm still getting used to github.  I want to commit the two commits as two separate pull requests.  I'll be resubmitting (again)."]}, {"number": 52865, "title": "Fix build on `tensorflow/core/kernels/boosted_trees/stats_ops.cc`", "body": null, "comments": []}, {"number": 52864, "title": "Fix build broken by merge conflict in `tensorflow/core/kernels/sequen\u2026`", "body": "\u2026ce_ops.cc`", "comments": []}, {"number": 52863, "title": "Fix build on `tpu_cross_replica_ops.cc`", "body": null, "comments": []}, {"number": 52862, "title": "Fix build on `tensorflow/core/kernels/boosted_trees/stats_ops.cc`", "body": null, "comments": []}, {"number": 52861, "title": "Fix build broken by merge conflict in `tensorflow/core/kernels/sequen\u2026", "body": "\u2026ce_ops.cc`", "comments": []}, {"number": 52860, "title": "Added external delegate support to the benchmark tool", "body": "Change-Id: I360dc811219948b7de53100fb4be4063a791d006\r\n\r\nThis adds support for the \"--external_delegate_path\" command line flag in the **CMake** build of the benchmark tool.  The _bazel_ build already supports the flag, so this just synchronizes both types of builds.", "comments": ["Sorry, first time using github, I ddidn't mean to \"fork\" the project."]}, {"number": 52859, "title": "Fix broken build due to bad merge conflict resolution", "body": null, "comments": []}, {"number": 52858, "title": "Fix build broken by merge conflict in `tensorflow/core/kernels/sequen\u2026", "body": "\u2026ce_ops.cc`", "comments": []}, {"number": 52857, "title": "Add missing `AddDimWithStatus`", "body": null, "comments": []}, {"number": 52856, "title": "Fix build on `tensorflow/core/kernels/boosted_trees/stats_ops.cc`", "body": null, "comments": []}, {"number": 52855, "title": "Fix build on `tpu_cross_replica_ops.cc`", "body": null, "comments": []}, {"number": 52854, "title": "[Tflite] quantized ABS operator doesn't behave as intended", "body": "**System information**\r\n- Have I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes\r\n- OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Ubuntu 18.04.5 LTS\r\n- TensorFlow installed from (source or binary): source\r\n- TensorFlow version (use command below): master/nightly\r\n- Python version: 3.7\r\n- Bazel version (if compiling from source): 3.7.2\r\n\r\n**Describe the current behavior**\r\n(Please read the standalone code)\r\nI have quantized tf.math.abs via int8 post-training quantization with a representative dataset of negative values only.\r\nWhen running the model in tflite by giving negative values to the model the output will be zeros.\r\nWhen looking at the tflite model in Netron it seems that the output_scaling and output_zero_point is erroneous (the range can only represent negative values). output_scale = 0.003921568859368563 and output_zero_point = -127\r\n\r\n**Describe the expected behavior**\r\nI expect the quantized tf.math.abs operator to output positive values and to have a correct output scaling and zero_point.\r\n\r\n**[Contributing](https://www.tensorflow.org/community/contribute)**\r\n\r\n- Do you want to contribute a PR? (yes/no): depending on the complexity of the solution\r\n\r\n**Standalone code to reproduce the issue**\r\n```python\r\nimport tensorflow as tf\r\nimport numpy as np\r\n\r\ninput_data = np.array([-0.2, -0.33, -1.0, -0.4, -0.1], dtype=np.float32)\r\n\r\ninp = tf.keras.Input(shape=(5,))\r\nout = tf.math.abs(inp)\r\nmodel = tf.keras.Model(inp, out)\r\n\r\n# Post training quantization\r\ndef representative_dataset():\r\n    yield [input_data]\r\nconverter = tf.lite.TFLiteConverter.from_keras_model(model)\r\nconverter.optimizations = [tf.lite.Optimize.DEFAULT]\r\nconverter.representative_dataset = representative_dataset\r\nconverter.target_spec.supported_ops = [tf.lite.OpsSet.TFLITE_BUILTINS_INT8]\r\ntflite_quant_model = converter.convert()\r\ntflite_model_path = \"model.tflite\"\r\nwith open(tflite_model_path, \"wb\") as f:\r\n    f.write(tflite_quant_model)\r\n\r\n# Tflite inference with the quantized model\r\ninterpreter = tf.lite.Interpreter(tflite_model_path)\r\ninput_details = interpreter.get_input_details()\r\noutput_details = interpreter.get_output_details()\r\ninterpreter.allocate_tensors()\r\ninterpreter.set_tensor(input_details[0][\"index\"], [input_data])\r\ninterpreter.invoke()\r\noutput_data = interpreter.get_tensor(output_details[0][\"index\"])\r\n\r\n# The quantized model doesn't behave as expected:\r\n# The quant output should be able to represent positive numbers\r\n# However, the quant output can't represent positive numbers\r\n# Input_scale = output_scale = 0.003921568859368563\r\n# Input_zero_point = output_zero_point = -127\r\nprint(\"input: \", input_data)  # [-0.2, -0.33, -1.0, -0.4, -0.1]\r\nprint(\"expected output: \", model(input_data))  # [0.2  0.33 1.   0.4  0.1 ]\r\nprint(\"quantized output: \", output_data)  # [[0. 0. 0. 0. 0.]]\r\n```", "comments": ["Hi @sachinprasadhs! Could you please look at this issue! Attaching Gist in [2.5](https://colab.sandbox.google.com/gist/mohantym/a977debead828c24a0d72d7c6c0320d0/github_52854.ipynb#scrollTo=9bXl_OvYRhis),[2.6 ](https://colab.sandbox.google.com/gist/mohantym/f0a7d4dfb0db0cf0067a0b5d20bd0b76/github_52854.ipynb)and [nightly ](https://colab.sandbox.google.com/gist/mohantym/495ed934741467da97352bef5c09b6f1/github_52854.ipynb#scrollTo=9bXl_OvYRhis)for reference . Thanks!", "We looked a bit on our side and it seems the quantizer takes either the scaling/zero-point of one of the inputs or of one of the outputs when the operator has the `SameOperandsAndResultsScale` trait and override all the inputs and outputs scaling/zero-point with it.\r\n\r\nIdeally I think it should calculate the common scaling/zero-point based on the union of all the inputs ranges and outputs ranges of the operator (e.g. if we have a `[-1.0; 0]` input range and a `[0; 1.0]` output range, a common union range of `[-1.0; 1.0]` should be used to calculate the scaling/zero-point that will be affected to the input and output). I wonder though if there may be a reason why it wasn't done like that initially (at least for the cases where none of the scaling/zero-point of the inputs/outputs are immutable)?\r\n\r\nOtherwise we could just remove the `SameOperandsAndResultsScale` restriction as the quantized ABS kernel already supports different input/output scales. It seems the `SameOperandsAndResultsScale` restriction was added afterward https://github.com/tensorflow/tensorflow/commit/57db297c71026f6c388484fbcfc391e426062831 (though this kind of bug may affect other operators).", "Sorry for the delay, adding this to my to fix queue", "It seems the problem was resolved by https://github.com/tensorflow/tensorflow/commit/99bc50cb35133301f0fb1700b7308d4bdea1d546. The ticket can be closed, thanks."]}, {"number": 52852, "title": "please add tf.size support", "body": "**System information**\r\n- OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Ubuntu 18.04\r\n- TensorFlow installed from (source or binary): pip\r\n- TensorFlow version (or github SHA if from source): 2.4.1\r\n\r\n\r\n**Provide the text output from tflite_convert**\r\n```\r\ntf.size' of is neither a custom op nor a flex op\r\n```\r\n\r\n**Standalone code to reproduce the issue** \r\nhttps://www.tensorflow.org/lite/tutorials/pose_classification\r\n\r\nAlso, please include a link to a GraphDef or the model if possible.\r\n\r\n=====In Addition======\r\nI know that the convert works if add following line,\r\n```\r\nconverter.target_spec.supported_ops = [\r\n        tf.lite.OpsSet.TFLITE_BUILTINS,  # enable TensorFlow Lite ops.\r\n        tf.lite.OpsSet.SELECT_TF_OPS  # enable TensorFlow ops.  --> because tf.Size is not supported by tflite\r\n    ]\r\n```\r\nbut, this tflite model does not work on Android even if I add \"tensorflow-lite-select-tf-ops.aar\" inside my project.\r\nSo, could you please add tf.size support, please?\r\n\r\nOr is there another way to replace tf.size when training this pose_classification model?\r\nthere're two place using the 'tf.size' inside the tutorial:\r\n\r\n```\r\npose_center = tf.broadcast_to(pose_center, \r\n                                [tf.size(landmarks) // (17*2), 17, 2])\r\n```\r\n", "comments": ["Update:\r\nI use tf.shape()[0] to replace tf.size()/(17*2), now the converted tflite model works on android.\r\n\r\nAnd, it'll be better if tf.size supported in tensorflowlite. So just keep this feature request.", "Since Tensorflow Life supports limited number of builtin operators, however you can still enable `tf.size` with the `select TF option`.\r\nRefer [this](https://www.tensorflow.org/lite/guide/ops_select) documentation for more details. Thanks!", "@zuozhen Regarding the part about not working in your app after converting with TF_SELECT.\r\nCan you please follow the instructions [here](https://www.tensorflow.org/lite/guide/ops_select#android_aar) and let us know how it works", "> @zuozhen Regarding the part about not working in your app after converting with TF_SELECT. Can you please follow the instructions [here](https://www.tensorflow.org/lite/guide/ops_select#android_aar) and let us know how it works\r\n\r\n@karimnosseir Thanks for your reply. I did follow that instruction step by step, but it crush at the native part.  In consideration of it works now by an alternative method, I'd close this issue."]}, {"number": 52850, "title": "ubantu18.0.4   python2.7  tensorflow 1.4.0 ", "body": "ubantu18.0.4   python2.7  tensorflow 1.4.0  when i use \r\nq = tf.FIFOQueue(capacity=capacity, dtypes=dtypes, shapes=shapes)\r\n\r\nit report \r\n\r\n  q = tf.FIFOQueue(capacity=capacity, dtypes=dtypes, shapes=shapes)\r\n  File \"/data/conda/app/envs/GRnet/lib/python2.7/site-packages/tensorflow/python/ops/data_flow_ops.py\", line 756, in __init__\r\n    name=name)\r\n  File \"/data/conda/app/envs/GRnet/lib/python2.7/site-packages/tensorflow/python/ops/gen_data_flow_ops.py\", line 810, in _fifo_queue_v2\r\n    name=name)\r\n  File \"/data/conda/app/envs/GRnet/lib/python2.7/site-packages/tensorflow/python/framework/op_def_library.py\", line 343, in _apply_op_helper\r\n    raise RuntimeError(\"Unrecognized Op name \" + op_type_name)\r\nRuntimeError: Unrecognized Op name FIFOQueueV2\r\n", "comments": []}, {"number": 52849, "title": "tensorflow 1.4.0  python 2.7", "body": "ubantu18.0.4   python2.7  tensorflow 1.4.0  when i use \r\nq = tf.FIFOQueue(capacity=capacity, dtypes=dtypes, shapes=shapes)\r\n\r\nit report \r\n\r\n  q = tf.FIFOQueue(capacity=capacity, dtypes=dtypes, shapes=shapes)\r\n  File \"/data/conda/app/envs/GRnet/lib/python2.7/site-packages/tensorflow/python/ops/data_flow_ops.py\", line 756, in __init__\r\n    name=name)\r\n  File \"/data/conda/app/envs/GRnet/lib/python2.7/site-packages/tensorflow/python/ops/gen_data_flow_ops.py\", line 810, in _fifo_queue_v2\r\n    name=name)\r\n  File \"/data/conda/app/envs/GRnet/lib/python2.7/site-packages/tensorflow/python/framework/op_def_library.py\", line 343, in _apply_op_helper\r\n    raise RuntimeError(\"Unrecognized Op name \" + op_type_name)\r\nRuntimeError: Unrecognized Op name FIFOQueueV2", "comments": ["@xuchen-dev \r\nIn order to expedite the trouble-shooting process here,Could you please fill the issue [template](https://github.com/tensorflow/tensorflow/issues/new/choose),Thanks!", "<em>Please make sure that this is a bug. As per our\r\n[GitHub Policy](https://github.com/tensorflow/tensorflow/blob/master/ISSUES.md),\r\nwe only address code/doc bugs, performance issues, feature requests and\r\nbuild/installation issues on GitHub. tag:bug_template</em>\r\n\r\n**System information**\r\n- Have I written custom code (as opposed to using a stock example script provided in TensorFlow):\r\n- OS Platform and Distribution (e.g., Linux Ubuntu 16.04):unbantu 18.0.4\r\n- Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: no\r\n- TensorFlow installed from (source or binary):pip isntall \r\n- TensorFlow version (use command below):1.4.0\r\n- Python version:2.7.1\r\n- Bazel version (if compiling from source): \r\n- GCC/Compiler version (if compiling from source):\r\n- CUDA/cuDNN version:\r\n- GPU model and memory:\r\n\r\n**Describe the current behavior**\r\n when i use\r\nq = tf.FIFOQueue(capacity=capacity, dtypes=dtypes, shapes=shapes)\r\n\r\nit report\r\n\r\nq = tf.FIFOQueue(capacity=capacity, dtypes=dtypes, shapes=shapes)\r\nFile \"/data/conda/app/envs/GRnet/lib/python2.7/site-packages/tensorflow/python/ops/data_flow_ops.py\", line 756, in init\r\nname=name)\r\nFile \"/data/conda/app/envs/GRnet/lib/python2.7/site-packages/tensorflow/python/ops/gen_data_flow_ops.py\", line 810, in _fifo_queue_v2\r\nname=name)\r\nFile \"/data/conda/app/envs/GRnet/lib/python2.7/site-packages/tensorflow/python/framework/op_def_library.py\", line 343, in _apply_op_helper\r\nraise RuntimeError(\"Unrecognized Op name \" + op_type_name)\r\nRuntimeError: Unrecognized Op name FIFOQueueV2\r\n\r\n**Describe the expected behavior**\r\n\r\n\r\n**[Contributing](https://www.tensorflow.org/community/contribute)**\r\n\r\n- Do you want to contribute a PR? (yes/no):\r\n- Briefly describe your candidate solution(if contributing):\r\n\r\n**Standalone code to reproduce the issue**\r\nProvide a reproducible test case that is the bare minimum necessary to generate\r\nthe problem. If possible, please share a link to Colab/Jupyter/any notebook.\r\n\r\n**Other info / logs** Include any logs or source code that would be helpful to\r\ndiagnose the problem. If including tracebacks, please include the full\r\ntraceback. Large logs and files should be attached.\r\n", "@xuchen-dev Thank you for the update! \r\nWe could see you're using `TF v1.4.0 `which is out of support window .Could you please try using latest stable `TF v2.6.0 `and let us know if the issue still persists ? Thanks!", "Are you satisfied with the resolution of your issue?\n<a href=\"https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&entry.2137816233=https://github.com/tensorflow/tensorflow/issues/52849\">Yes</a>\n<a href=\"https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&entry.2137816233=https://github.com/tensorflow/tensorflow/issues/52849\">No</a>\n"]}, {"number": 52848, "title": "tensorboard walltime and step not consistent", "body": "Does anyone know whats happening here? The walltime and the step is not consistent, might it be the asynchronous of the SummaryWriter on CPU and the training on GPU?\r\n\r\n![image](https://user-images.githubusercontent.com/67493438/139387653-cff79104-508e-40eb-b920-f331acb52cc1.png)\r\n\r\n![image](https://user-images.githubusercontent.com/67493438/139387687-ddfb8b5b-c683-475d-b2c2-49ebc07ec08f.png)\r\n\r\n![image](https://user-images.githubusercontent.com/67493438/139387752-a4291b6e-aebd-48b2-8869-a397174037a7.png)\r\n", "comments": ["@DS-Liu ,\r\nThis issue is more suitable for Tensorboard  repo. Please post it on tensorflow/tensorboard repo from [here](https://github.com/tensorflow/tensorboard/issues). Thanks!\r\n", "This issue has been automatically marked as stale because it has no recent activity. It will be closed if no further activity occurs. Thank you.\n", "Closing as stale. Please reopen if you'd like to work on this further.\n"]}, {"number": 52847, "title": "[ROCm] fix for //tensorflow/compiler/tests:cast_ops_test_gpu", "body": "This fixes //tensorflow/compiler/tests:cast_ops_test_gpu for ROCM platforms\r\nInspired by changes in cuda side\r\n\r\n@cheshire @chsigg @deven-amd ", "comments": ["\nThanks for your pull request. It looks like this may be your first contribution to a Google open source project (if not, look below for help). Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).\n\n:memo: **Please visit <https://cla.developers.google.com/> to sign.**\n\nOnce you've signed (or fixed any issues), please reply here with `@googlebot I signed it!` and we'll verify it.\n\n----\n\n#### What to do if you already signed the CLA\n\n##### Individual signers\n\n*   It's possible we don't have your GitHub username or you're using a different email address on your commit. Check [your existing CLA data](https://cla.developers.google.com/clas) and verify that your [email is set on your git commits](https://help.github.com/articles/setting-your-email-in-git/).\n\n##### Corporate signers\n\n*   Your company has a Point of Contact who decides which employees are authorized to participate. Ask your POC to be added to the group of authorized contributors. If you don't know who your Point of Contact is, direct the Google project maintainer to [go/cla#troubleshoot](http://go/cla#troubleshoot) ([Public version](https://opensource.google/docs/cla/#troubleshoot)).\n*   The email used to register you as an authorized contributor must be the email used for the Git commit. Check [your existing CLA data](https://cla.developers.google.com/clas) and verify that your [email is set on your git commits](https://help.github.com/articles/setting-your-email-in-git/).\n*   The email used to register you as an authorized contributor must also be [attached to your GitHub account](https://github.com/settings/emails).\n\t\t\n\n\u2139\ufe0f **Googlers: [Go here](https://goto.google.com/prinfo/https%3A%2F%2Fgithub.com%2Ftensorflow%2Ftensorflow%2Fpull%2F52847) for more info**.\n\n<!-- need_sender_cla -->", "@reza-amd fyi", "@googlebot I signed it!", "All (the pull request submitter and all commit authors) CLAs are signed, **but** one or more commits were authored or co-authored by someone other than the pull request submitter.\n\nWe need to confirm that all authors are ok with their commits being contributed to this project.  Please have them confirm that by leaving a comment that contains only `@googlebot I consent.` in this pull request.\n\n*Note to project maintainer:* There may be cases where the author cannot leave a comment, or the comment is not properly detected as consent.  In those cases, you can manually confirm consent of the commit author(s), and set the `cla` label to `yes` (if enabled on your project).\n\n\u2139\ufe0f **Googlers: [Go here](https://goto.google.com/prinfo/https%3A%2F%2Fgithub.com%2Ftensorflow%2Ftensorflow%2Fpull%2F52847) for more info**.\n\n<!-- need_author_consent -->", "Could you bundle enabling the test together with this CL?", "This test isn't disabled for ROCm, currently. It's just failing.\r\n\r\n@reza-amd Can you add a consent comment? thx!", "The test associated with this fix was never tagged with \"no_rocm\" in upstream repo.", "@googlebot I consent"]}, {"number": 52846, "title": "Adding new patch for LLVM to support building on darwin arm64", "body": "This should also enable cross-compiling from x86_64 to arm64, without breaking the existing x86_64 builds.\r\n\r\nOver in https://github.com/google/jax/issues/5501, we've been struggling to get JAX to compile properly on the Apple arm64 architecture or cross-compiled from x86_64, since the compiler flags for `llvm-project` don't get set properly. This was the simplest method I could find for getting this to work, without breaking the existing builds. I've tested that I can get JAX to compile and cross-compile properly after applying this patch, but I don't know if there are specific TensorFlow tests that would be good to run too.\r\n\r\nI don't think that it makes sense to submit this upstream to LLVM since (I think!) the version there, based on platforms, should already work, and I don't entirely understand why it doesn't for the TensorFlow build. Folks over there were (correctly, I think) unhappy about exposing a configuration variable like this just as a workaround for our purposes.\r\n\r\nThanks!\r\n\r\n/cc @yashk2810, @hawkinsp", "comments": ["\nThanks for your pull request. It looks like this may be your first contribution to a Google open source project (if not, look below for help). Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).\n\n:memo: **Please visit <https://cla.developers.google.com/> to sign.**\n\nOnce you've signed (or fixed any issues), please reply here with `@googlebot I signed it!` and we'll verify it.\n\n----\n\n#### What to do if you already signed the CLA\n\n##### Individual signers\n\n*   It's possible we don't have your GitHub username or you're using a different email address on your commit. Check [your existing CLA data](https://cla.developers.google.com/clas) and verify that your [email is set on your git commits](https://help.github.com/articles/setting-your-email-in-git/).\n\n##### Corporate signers\n\n*   Your company has a Point of Contact who decides which employees are authorized to participate. Ask your POC to be added to the group of authorized contributors. If you don't know who your Point of Contact is, direct the Google project maintainer to [go/cla#troubleshoot](http://go/cla#troubleshoot) ([Public version](https://opensource.google/docs/cla/#troubleshoot)).\n*   The email used to register you as an authorized contributor must be the email used for the Git commit. Check [your existing CLA data](https://cla.developers.google.com/clas) and verify that your [email is set on your git commits](https://help.github.com/articles/setting-your-email-in-git/).\n*   The email used to register you as an authorized contributor must also be [attached to your GitHub account](https://github.com/settings/emails).\n\t\t\n\n\u2139\ufe0f **Googlers: [Go here](https://goto.google.com/prinfo/https%3A%2F%2Fgithub.com%2Ftensorflow%2Ftensorflow%2Fpull%2F52846) for more info**.\n\n<!-- need_sender_cla -->", "@googlebot I signed it!"]}, {"number": 52844, "title": "Merge pull request #51975 from yongtang:51936-max_pool3d", "body": "PiperOrigin-RevId: 401245519\r\nChange-Id: I67d2cbb0e21729b94186ca9bf82450ff93132ff2", "comments": []}, {"number": 52843, "title": "PR #51732: Fix crash of tf.image.crop_and_resize when input is large \u2026", "body": "\u2026number\r\n\r\nImported from GitHub PR https://github.com/tensorflow/tensorflow/pull/51732\r\n\r\nThis PR is part of the effort in #46890 where\r\ntf.image.crop_and_resize will crash if shape consists of large number.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\nCopybara import of the project:\r\n\r\n--\r\nc8d87055a56d8740d27ad8bdc74a7459ede6900e by Yong Tang <yong.tang.github@outlook.com>:\r\n\r\nFix crash of tf.image.crop_and_resize when input is large number\r\n\r\nThis PR is part of the effort in 46890 where\r\ntf.image.crop_and_resize will crash if shape consists of large number.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\nCOPYBARA_INTEGRATE_REVIEW=https://github.com/tensorflow/tensorflow/pull/51732 from yongtang:46890-tf.image.crop_and_resize c8d87055a56d8740d27ad8bdc74a7459ede6900e\r\nPiperOrigin-RevId: 394109830\r\nChange-Id: If049dad0844df9353722029ee95bc76819eda1f4", "comments": []}, {"number": 52842, "title": "PR #51732: Fix crash of tf.image.crop_and_resize when input is large \u2026", "body": "\u2026number\r\n\r\nImported from GitHub PR https://github.com/tensorflow/tensorflow/pull/51732\r\n\r\nThis PR is part of the effort in #46890 where\r\ntf.image.crop_and_resize will crash if shape consists of large number.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\nCopybara import of the project:\r\n\r\n--\r\nc8d87055a56d8740d27ad8bdc74a7459ede6900e by Yong Tang <yong.tang.github@outlook.com>:\r\n\r\nFix crash of tf.image.crop_and_resize when input is large number\r\n\r\nThis PR is part of the effort in 46890 where\r\ntf.image.crop_and_resize will crash if shape consists of large number.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\nCOPYBARA_INTEGRATE_REVIEW=https://github.com/tensorflow/tensorflow/pull/51732 from yongtang:46890-tf.image.crop_and_resize c8d87055a56d8740d27ad8bdc74a7459ede6900e\r\nPiperOrigin-RevId: 394109830\r\nChange-Id: If049dad0844df9353722029ee95bc76819eda1f4", "comments": []}]