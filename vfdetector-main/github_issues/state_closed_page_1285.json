[{"number": 14575, "title": "How to configure gpu memory fraction outside of my own code?", "body": "My tensorflow automatically allocates all of my GPU memory.\r\nI know the way to configure 'gpu memory fraction' in my own code like the below\r\n```\r\nimport tensorflow as tf\r\ngpu_options = tf.GPUOptions(per_process_gpu_memory_fraction=0.2)\r\nsess = tf.Session(config=tf.ConfigProto(gpu_options=gpu_options))\r\n```\r\nI added the codes at the front of my code, so it worked well.\r\n\r\nBUT I want to use tensorflow in distributed processing (e.g. spark)\r\nAdding the configuration code in the code is not working in the distributed processing since configuration in the code is applied to only master machine, not to other machines.\r\n\r\nSO, I try to configure gpu memory fraction of tensorflow itself.\r\nhow can I do??", "comments": ["Is this a different issue from #14585? If not, may we please close this one?", "It has been 14 days with no activity and the `awaiting response` label was assigned. Is this still an issue? Please update the label and/or status accordingly.", "It has been 14 days with no activity and the `awaiting response` label was assigned. Is this still an issue? Please update the label and/or status accordingly.", "Nagging Awaiting Response: It has been 14 days with no activityand the `awaiting response` label was assigned. Is this still an issue?", "Nagging Awaiting Response: It has been 14 days with no activityand the `awaiting response` label was assigned. Is this still an issue?", "Nagging Awaiting Response: It has been 14 days with no activityand the `awaiting response` label was assigned. Is this still an issue?", "Nagging Awaiting Response: It has been 14 days with no activityand the `awaiting response` label was assigned. Is this still an issue?", "It has been 14 days with no activity and the `awaiting response` label was assigned. Is this still an issue?", "It has been 14 days with no activity and the `awaiting response` label was assigned. Is this still an issue?", "It has been 29 days with no activity and the `awaiting response` label was assigned. Is this still an issue?", "It has been 182 days with no activity and the `awaiting response` label was assigned. Is this still an issue?", "We are closing this issue for now due to lack of activity. Please comment if this is still an issue for you. Thanks!"]}, {"number": 14574, "title": "Add LayerNormBasicGRUCell", "body": "LayerNormBasicGRUCell add layer normalization to basic GRU unit.\r\n\r\nLayer Normalization implementation is based on https://arxiv.org/abs/1607.06450 (\"Layer Normalization\", Jimmy Lei Ba, Jamie Ryan Kiros, Geoffrey E. Hinton) and is applied before the internal nonlinearities.", "comments": ["Can one of the admins verify this patch?", "Thanks for your pull request.  It looks like this may be your first contribution to a Google open source project. Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).\n\n:memo: **Please visit <https://cla.developers.google.com/> to sign.**\n\nOnce you've signed, please reply here (e.g. `I signed it!`) and we'll verify.  Thanks.\n\n---\n\n- If you've already signed a CLA, it's possible we don't have your GitHub username or you're using a different email address.  Check [your existing CLA data](https://cla.developers.google.com/clas) and verify that your [email is set on your git commits](https://help.github.com/articles/setting-your-email-in-git/).\n- If your company signed a CLA, they designated a Point of Contact who decides which employees are authorized to participate. You may need to contact the Point of Contact for your company and ask to be added to the group of authorized contributors. If you don't know who your Point of Contact is, direct the project maintainer to go/cla#troubleshoot.\n- In order to pass this check, please resolve this problem and have the pull request author add another comment and the bot will run again.\n\n<!-- need_sender_cla -->"]}, {"number": 14573, "title": "bazel build failure of current master in Docker container due to contrib/lite", "body": "Building current GPU version of master branch tensorflow/tensorflow@31b79e42b9e1643b3bcdc9df992eb3ce216804c5 fails in Docker container, saying\r\n\r\n    /usr/bin/ld: warning: libcuda.so.1, needed by bazel-out/host/bin/_solib_local/_U_S_Stensorflow_Scc_Cops_Sdata_Uflow_Uops_Ugen_Ucc___Utensorflow/libtensorflow_framework.so, not found (try using -rpath or -rpath-link)\r\n\r\nand I find that it is due to [`contrib/lite`](https://github.com/tensorflow/tensorflow/tree/master/tensorflow/contrib/lite): when I comment out the related dependencies in [`tensorflow/tools/pip_package/BUILD`](https://github.com/tensorflow/tensorflow/blob/31b79e42b9e1643b3bcdc9df992eb3ce216804c5/tensorflow/tools/pip_package/BUILD#L164-L166), the build success.\r\n\r\nI know this error is typically solved when I create a soft link inside the container before to build (c.f. #10776):\r\n\r\n    RUN ln -s /usr/local/cuda/lib64/stubs/libcuda.so /usr/local/cuda/lib64/stubs/libcuda.so.1\r\n\r\nbut this time, it doesn't help.", "comments": ["Can you give an exact sequence of commands to reproduce this?", "@angersson Here is my Dockerfile. My Docker version is 17.09.0-ce.\r\n\r\nIf I enable the commented \"RUN\"s, the build success.\r\n\r\n ```dockerfile\r\nFROM nvidia/cuda:9.0-cudnn7-devel-ubuntu16.04\r\nMAINTAINER Changho Hwang <ch.hwang128@gmail.com>\r\n\r\nENV LD_LIBRARY_PATH=\"/usr/local/lib:/usr/local/cuda/lib64:${LD_LIBRARY_PATH}\" \\\r\n     PATH=\"/usr/local/cuda/bin:${PATH}\"\r\n\r\n# Install preliminaries\r\nRUN apt-get update && apt-get install -y --no-install-recommends \\\r\n         build-essential \\\r\n         curl \\\r\n         libfreetype6-dev \\\r\n         libpng12-dev \\\r\n         libzmq3-dev \\\r\n         pkg-config \\\r\n         python3 \\\r\n         python3-dev \\\r\n         python3-pip \\\r\n         python3-numpy \\\r\n         python3-wheel \\\r\n         rsync \\\r\n         software-properties-common \\\r\n         unzip \\\r\n         git \\\r\n         mlocate \\\r\n         wget\r\n\r\n# Python dependencies - need to install setuptools first\r\nRUN pip3 --no-cache-dir install setuptools\r\nRUN pip3 --no-cache-dir install \\\r\n         six \\\r\n         numpy \\\r\n         wheel\r\n\r\n# Install Bazel\r\nRUN apt-get install -y openjdk-8-jdk\r\nRUN echo \"deb [arch=amd64] http://storage.googleapis.com/bazel-apt stable jdk1.8\" | tee /etc/apt/sources.list.d/bazel.list\r\nRUN curl https://bazel.build/bazel-release.pub.gpg | apt-key add -\r\nRUN apt-get update && \\\r\n     apt-get install -y --no-install-recommends bazel && \\\r\n     apt-get upgrade -y bazel\r\n\r\n# Environment to install TensorFlow\r\nENV PYTHON_BIN_PATH=\"/usr/bin/python3\" \\\r\n     PYTHON_LIB_PATH=\"/usr/local/lib/python3.5/dist-packages\" \\\r\n     TF_NEED_JEMALLOC=\"1\" \\\r\n     TF_NEED_GCP=\"0\" \\\r\n     TF_NEED_HDFS=\"0\" \\\r\n     TF_ENABLE_XLA=\"0\" \\\r\n     TF_NEED_VERBS=\"0\" \\\r\n     TF_NEED_OPENCL=\"0\" \\\r\n     TF_NEED_CUDA=\"1\" \\\r\n     TF_CUDA_CLANG=\"0\" \\\r\n     TF_CUDA_VERSION=\"9.0\" \\\r\n     CUDA_TOOLKIT_PATH=\"/usr/local/cuda\" \\\r\n     GCC_HOST_COMPILER_PATH=\"/usr/bin/gcc\" \\\r\n     TF_CUDNN_VERSION=\"7\" \\\r\n     CUDNN_INSTALL_PATH=\"/usr/local/cuda\" \\\r\n     TF_CUDA_COMPUTE_CAPABILITIES=\"6.1\" \\\r\n     TF_NEED_MPI=\"0\" \\\r\n     TF_NEED_GDR=\"0\" \\\r\n     TF_NEED_S3=\"0\"\r\n\r\nRUN updatedb\r\n\r\n# Download and install TensorFlow\r\nRUN ln -s /usr/local/cuda/lib64/stubs/libcuda.so /usr/local/cuda/lib64/stubs/libcuda.so.1\r\nRUN git clone https://github.com/tensorflow/tensorflow\r\nRUN cd /tensorflow && git checkout 31b79e4\r\n\r\n# For bug bypassing: issue #14573\r\n#RUN sed -i '/toco/s/^/#/' tensorflow/tensorflow/tools/pip_package/BUILD\r\n#RUN sed -i '/toco/s/^/#/' tensorflow/tensorflow/tools/pip_package/build_pip_package.sh\r\n\r\nRUN ln -s /usr/bin/python3 /usr/bin/python\r\nRUN cd /tensorflow && \\\r\n     ./configure && \\\r\n     LD_LIBRARY_PATH=\"/usr/local/cuda/lib64/stubs:${LD_LIBRARY_PATH}\" \\\r\n     bazel build --config=opt --config=cuda \\\r\n                 //tensorflow/tools/pip_package:build_pip_package && \\\r\n     mkdir /pip_pkg && \\\r\n     bazel-bin/tensorflow/tools/pip_package/build_pip_package /pip_pkg\r\n\r\nRUN pip3 --no-cache-dir install --upgrade /pip_pkg/tensorflow-*.whl && \\\r\n     rm -rf /pip_pkg /root/.cache /tensorflow\r\n\r\n# TensorBoard\r\nEXPOSE 6006\r\n```\r\n\r\nThis prints out a long error message starting with:\r\n\r\n```\r\nERROR: /tensorflow/tensorflow/contrib/lite/toco/BUILD:311:1: Linking of rule '//tensorflow/contrib/lite/toco:toco' fail\r\ned (Exit 1)\r\n/usr/bin/ld: warning: libcuda.so.1, needed by bazel-out/k8-py3-opt/bin/_solib_local/_U_S_Stensorflow_Scontrib_Slite_Sto\r\nco_Ctoco___Utensorflow/libtensorflow_framework.so, not found (try using -rpath or -rpath-link)\r\nbazel-out/k8-py3-opt/bin/_solib_local/_U_S_Stensorflow_Scontrib_Slite_Stoco_Ctoco___Utensorflow/libtensorflow_framework\r\n.so: undefined reference to `cuMemFree_v2'\r\n```\r\n\r\nI also tried to build the current master (tensorflow/tensorflow@480563e173e0f2fd7e108ada339ea8bc2c37b493), but it fails with another error, maybe not related with this issue. The error message is:\r\n\r\n```\r\n10 errors detected in the compilation of \"/root/.cache/bazel/_bazel_root/68a62076e91007a7908bc42a32e4cff9/execroot/org_tensorflow/tmp37f_7470eca8858f65d2/tmpxft_00005dc5_00000000-6_resampler_ops_gpu.cu.cpp1.ii\".\r\nERROR: /tensorflow/tensorflow/contrib/resampler/BUILD:51:1: output 'tensorflow/contrib/resampler/_objs/python/ops/_resampler_ops_gpu/tensorflow/contrib/resampler/kernels/resampler_ops_gpu.cu.pic.o' was not created\r\nERROR: /tensorflow/tensorflow/contrib/resampler/BUILD:51:1: not all outputs were created or valid\r\nTarget //tensorflow/tools/pip_package:build_pip_package failed to build\r\n```", "It has been 14 days with no activity and this issue has an assignee.Please update the label and/or status accordingly.", "This wasn't happening when I tried to replicate it just now -- the file had other errors. Are you using one of our containers?", "@angersson Now it's already more than a month ago, thus I'm not sure whether this is still a valid issue. If you know any later master commit hash (later than tensorflow/tensorflow@31b79e42b9e1643b3bcdc9df992eb3ce216804c5) that doesn't have this issue, can you please mention that? Thank you very much.", "@chhwang the ENV LD_LIBRARY_PATH is not set correctly.Please modify docker file and test as follows\uff1a\r\n```\r\n...\r\nENV LD_LIBRARY_PATH=\"/usr/local/lib:/usr/local/cuda/lib64:/usr/local/cuda/lib64/stubs:${LD_LIBRARY_PATH}\"  \r\n...\r\n```\r\nAnd you can add bazel build argument `--verbose_failures` to check LD_LIBRARY_PATH like this:\r\n```\r\nbazel build ... --verbose_failures\r\n```", "@chhwang  does the change to LD_LIBRARY_PATH fix this problem for you?", "@andrehentz @chengxiangwang You can check that I'm setting LD_LIBRARY_PATH as you say. `/usr/local/cuda/lib64/stubs` is included in the command line building bazel:\r\n\r\n```dockerfile\r\nRUN cd /tensorflow && \\\r\n    ./configure && \\\r\n    LD_LIBRARY_PATH=\"/usr/local/cuda/lib64/stubs:${LD_LIBRARY_PATH}\" \\\r\n    bazel build --config=opt --config=cuda \\\r\n                //tensorflow/tools/pip_package:build_pip_package && \\\r\n    mkdir /pip_pkg && \\\r\n    bazel-bin/tensorflow/tools/pip_package/build_pip_package /pip_pkg\r\n```", "The original poster has replied to this issue after the stat:awaiting response label was applied.", "I've just tested whether this issue is still valid in the latest master, and I still face the same error message.\r\nFollowing is my updated Dockerfile that builds the current latest master (tensorflow/tensorflow@f68404bdd10a4b6ef2a50439efac4614de024636), and I add `--incompatible_load_argument_is_label=false` option in the build command to bypass an orthogonal issue #15492. Building this Dockerfile successes only if I enable the commented `RUN` commands that remove the erroneous building targets.\r\n```dockerfile\r\nFROM nvidia/cuda:8.0-cudnn6-devel-ubuntu16.04\r\nMAINTAINER Changho Hwang <ch.hwang128@gmail.com>\r\n\r\nENV LD_LIBRARY_PATH=\"/usr/local/lib:/usr/local/cuda/lib64:${LD_LIBRARY_PATH}\" \\\r\n    PATH=\"/usr/local/cuda/bin:${PATH}\"\r\n\r\n# Install preliminaries\r\nRUN apt-get update && apt-get install -y --no-install-recommends \\\r\n        build-essential \\\r\n        curl \\\r\n        libfreetype6-dev \\\r\n        libpng12-dev \\\r\n        libzmq3-dev \\\r\n        pkg-config \\\r\n        python-dev \\\r\n        python-pip \\\r\n        python-numpy \\\r\n        python-wheel \\\r\n        rsync \\\r\n        software-properties-common \\\r\n        unzip \\\r\n        git \\\r\n        mlocate \\\r\n        wget\r\n\r\n# Python dependencies - need to install setuptools first\r\nRUN pip --no-cache-dir install setuptools\r\nRUN pip --no-cache-dir install \\\r\n        six \\\r\n        numpy \\\r\n        wheel\r\n\r\n# Install Bazel\r\nRUN apt-get install -y openjdk-8-jdk\r\nRUN echo \"deb [arch=amd64] http://storage.googleapis.com/bazel-apt stable jdk1.8\" | tee /etc/apt/sources.list.d/bazel.list\r\nRUN curl https://bazel.build/bazel-release.pub.gpg | apt-key add -\r\nRUN apt-get update && \\\r\n    apt-get install -y --no-install-recommends bazel && \\\r\n    apt-get upgrade -y bazel\r\n\r\n# Environment to install TensorFlow\r\nENV PYTHON_BIN_PATH=\"/usr/bin/python\" \\\r\n    PYTHON_LIB_PATH=\"/usr/local/lib/python2.7/dist-packages\" \\\r\n    TF_NEED_JEMALLOC=\"1\" \\\r\n    TF_NEED_GCP=\"0\" \\\r\n    TF_NEED_HDFS=\"0\" \\\r\n    TF_ENABLE_XLA=\"0\" \\\r\n    TF_NEED_VERBS=\"0\" \\\r\n    TF_NEED_OPENCL=\"0\" \\\r\n    TF_NEED_CUDA=\"1\" \\\r\n    TF_CUDA_CLANG=\"0\" \\\r\n    TF_CUDA_VERSION=\"8.0\" \\\r\n    CUDA_TOOLKIT_PATH=\"/usr/local/cuda\" \\\r\n    GCC_HOST_COMPILER_PATH=\"/usr/bin/gcc\" \\\r\n    TF_CUDNN_VERSION=\"6\" \\\r\n    CUDNN_INSTALL_PATH=\"/usr/local/cuda\" \\\r\n    TF_CUDA_COMPUTE_CAPABILITIES=\"6.1\" \\\r\n    TF_NEED_MPI=\"0\" \\\r\n    TF_NEED_GDR=\"0\" \\\r\n    TF_NEED_S3=\"0\"\r\n\r\nRUN updatedb\r\n\r\n# Download TensorFlow\r\nRUN git clone https://github.com/tensorflow/tensorflow && \\\r\n    cd /tensorflow && \\\r\n    git checkout f68404b\r\n\r\n# Bug bypassing: issue #14573\r\n#RUN sed -i '/toco/s/^/#/' tensorflow/tensorflow/tools/pip_package/BUILD\r\n#RUN sed -i '/toco/s/^/#/' tensorflow/tensorflow/tools/pip_package/build_pip_package.sh\r\n\r\nRUN ln -s /usr/local/cuda/lib64/stubs/libcuda.so /usr/local/cuda/lib64/stubs/libcuda.so.1\r\n\r\n# Bug bypassing: issue #15492\r\nRUN cd /tensorflow && \\\r\n    ./configure && \\\r\n    LD_LIBRARY_PATH=\"/usr/local/cuda/lib64/stubs:${LD_LIBRARY_PATH}\" \\\r\n    bazel build --config=opt --config=cuda \\\r\n                --incompatible_load_argument_is_label=false \\\r\n                //tensorflow/tools/pip_package:build_pip_package && \\\r\n    mkdir /pip_pkg && \\\r\n    bazel-bin/tensorflow/tools/pip_package/build_pip_package /pip_pkg\r\n\r\n# Install TensorFlow and remove temporal files\r\nRUN pip --no-cache-dir install --upgrade /pip_pkg/tensorflow-*.whl && \\\r\n    rm -rf /pip_pkg /root/.cache\r\n\r\n# TensorBoard\r\nEXPOSE 6006\r\n```", "I can confirm this is also an issue for me, building with CUDA 9.1 and TF 1.5.\r\n\r\nI'm building TensorFlow 1.5.0 from source using [this guide](https://gist.github.com/kmhofmann/e368a2ebba05f807fa1a90b3bf9a1e03) and I can only resolve the error with the above `sed` commands, i.e.:\r\n```\r\nsed -i '/toco/s/^/#/' tensorflow/tools/pip_package/BUILD\r\nsed -i '/toco/s/^/#/' tensorflow/tools/pip_package/build_pip_package.sh\r\n```\r\nFor clarity, the error I'm getting is quite long, but it starts with:\r\n```\r\nERROR: ~/tensorflow/tensorflow/contrib/lite/toco/BUILD:326:1: Linking of rule '//tensorflow/contrib/lite/toco:toco' failed (Exit 1)\r\n/usr/bin/ld: warning: libcublas.so.9.1, needed by bazel-out/k8-py3-opt/bin/_solib_local/_U_S_Stensorflow_Scontrib_Slite_Stoco_Ctoco___Utensorflow/libtensorflow_framework.so, not found (try using -rpath or -rpath-link)\r\n/usr/bin/ld: warning: libcudnn.so.7, needed by bazel-out/k8-py3-opt/bin/_solib_local/_U_S_Stensorflow_Scontrib_Slite_Stoco_Ctoco___Utensorflow/libtensorflow_framework.so, not found (try using -rpath or -rpath-link)\r\n/usr/bin/ld: warning: libcufft.so.9.1, needed by bazel-out/k8-py3-opt/bin/_solib_local/_U_S_Stensorflow_Scontrib_Slite_Stoco_Ctoco___Utensorflow/libtensorflow_framework.so, not found (try using -rpath or -rpath-link)\r\n/usr/bin/ld: warning: libcurand.so.9.1, needed by bazel-out/k8-py3-opt/bin/_solib_local/_U_S_Stensorflow_Scontrib_Slite_Stoco_Ctoco___Utensorflow/libtensorflow_framework.so, not found (try using -rpath or -rpath-link)\r\nbazel-out/k8-py3-opt/bin/_solib_local/_U_S_Stensorflow_Scontrib_Slite_Stoco_Ctoco___Utensorflow/libtensorflow_framework.so: undefined reference to `cublasZsyr2k_v2@libcublas.so.9.1'\r\nbazel-out/k8-py3-opt/bin/_solib_local/_U_S_Stensorflow_Scontrib_Slite_Stoco_Ctoco___Utensorflow/libtensorflow_framework.so: undefined reference to `cublasCgerc_v2@libcublas.so.9.1'\r\nbazel-out/k8-py3-opt/bin/_solib_local/_U_S_Stensorflow_Scontrib_Slite_Stoco_Ctoco___Utensorflow/libtensorflow_framework.so: undefined reference to `cublasChemv_v2@libcublas.so.9.1'\r\nbazel-out/k8-py3-opt/bin/_solib_local/_U_S_Stensorflow_Scontrib_Slite_Stoco_Ctoco___Utensorflow/libtensorflow_framework.so: undefined reference to `cublasZhemm_v2@libcublas.so.9.1'\r\nbazel-out/k8-py3-opt/bin/_solib_local/_U_S_Stensorflow_Scontrib_Slite_Stoco_Ctoco___Utensorflow/libtensorflow_framework.so: undefined reference to `cufftCreate@libcufft.so.9.1'\r\nbazel-out/k8-py3-opt/bin/_solib_local/_U_S_Stensorflow_Scontrib_Slite_Stoco_Ctoco___Utensorflow/libtensorflow_framework.so: undefined reference to `cudnnCreate@libcudnn.so.7'\r\nbazel-out/k8-py3-opt/bin/_solib_local/_U_S_Stensorflow_Scontrib_Slite_Stoco_Ctoco___Utensorflow/libtensorflow_framework.so: undefined reference to `cudnnCreatePoolingDescriptor@libcudnn.so.7'\r\n(and so on for other symbols)\r\n```", "@gunan @av8ramit Is the environment we use to build the official pip packages any different than this?", "I see the same issue outside of a Docker container, i.e. on my computer. The error message is quite long, and mentions several CUDA libraries, as in @CNugteren's example.\r\n\r\nCUDA is properly installed and all necessary environment variables are set (CUDA_HOME, LD_LIBRARY_PATH). Installing e.g. Tensorflow 1.4.1 (and most likely prior versions) with exactly the same set up is no problem.", "@chhwang The root cause of the primary report in this issue is because your build process is a part of `docker build`.\r\nNVIDIA docker does not make all the cuda libraries available in their final locations during `docker build`.\r\nYou need to manually make them available like this:\r\nhttps://github.com/gunan/tensorflow-docker/blob/master/gpu-devel/Dockerfile.ubuntu#L64\r\n\r\nThis will be fixed in the future, but this should get you through.\r\n\r\n@kmhofmann @CNugteren as I can successfully build TF with cuda9.1 or cuda 9.0 with the dockerfile I linked above as is, I need exact instructions to reproduce your errors. Would you mind filing new issues, and feel free to cc me so I can take a look?\r\n", "I ran into the same issue with my slightly customized docker file. Did all the libcuda symlink and LD_LIBRARY_PATH override stuff. Nothing worked until I added `--action_env=LD_LIBRARY_PATH=/usr/local/cuda/lib64/stubs:${LD_LIBRARY_PATH}` to bazel build option. So for some reason the LD_LIBRARY_PATH environment variable is not honored in the build process? I haven't had time to dig into this yet, anyone know what's the purpose of `action_env`?", "That is correct, we also need to add \"`--action_env` flag due to bazel trying to create a sealed and tightly controlled build environment.", "@gunan: OK, I've created #16694. Indeed, adding `--action_env=LD_LIBRARY_PATH=/usr/local/cuda/lib64/stubs:${LD_LIBRARY_PATH}` fixes the problem.", "@gunan Thank you for your suggestion, but my primary report already mentioned that manually linking CUDA library was not the solution. (I was already doing that.) By the way, adding `--action_env=LD_LIBRARY_PATH=/usr/local/cuda/lib64/stubs:${LD_LIBRARY_PATH}` fixes the problem without erasing build targets, so I'm closing this issue now. Further discussions would be in #16694. "]}, {"number": 14572, "title": "it's slow to train model when loading dataset and checkpoints from S3", "body": "# System information\r\n\r\n**Have I written custom code (as opposed to using a stock example script provided in TensorFlow):**  No\r\n\r\n**OS Platform and Distribution (e.g., Linux Ubuntu 16.04):** Amazon Linux, P2 Instance\r\n\r\n**TensorFlow installed from (source or binary):** pip\r\n\r\n**TensorFlow version (use command below):** 1.5.0.dev20171113\r\n\r\n**Python version:** 2.7\r\n\r\n**CUDA/cuDNN version:** CUDA 8.0 / cuDNN 6.0\r\n\r\n**GPU model and memory:** Tesla K80 12GB\r\n\r\n# Describe the problem\r\n\r\nThe dataset and checkpoints are stored in S3 filesystem. It's slowly when training model. Howevery, The structure of network is simple and the speed is fast when load dataset and checkpoints from local filesystem\r\n\r\n# Source code / logs\r\n\r\nsome code like \r\n\r\n```bash\r\ndef input_fn(mode):\r\n    \"\"\" Input callback for Estimator\r\n    \r\n    Arguments\r\n    ----\r\n    mode: str, tf.estimator.ModelKey\r\n    file_pattern: tensorflow file pattern, refer to `tf.gfile.Glob`\r\n\r\n    Return\r\n    ---\r\n    features: dict of Tensor, the input features for model\r\n    label: single Tensor, the input label for model, must be integeral\r\n    \"\"\"\r\n    is_train = tf.estimator.ModeKeys.TRAIN == mode\r\n\r\n    vocab_dir = hparams.vocab_dir\r\n\r\n    ds_dir = 'train' if is_train else 'test'\r\n    file_pattern = os.path.join(hparams.dataset_dir, ds_dir, 'part-')\r\n\r\n    tfrecords_files = [] \r\n    if file_pattern.startswith('s3'):\r\n        tfrecords_files = list_s3_file(file_pattern)\r\n    else:\r\n        tfrecords_files = tf.gfile.Glob(file_pattern)\r\n\r\n    example = create_example(vocab_dir)\r\n    example_spec = tf.feature_column.make_parse_example_spec(feature_columns=example)\r\n\r\n    batch_size = hparams.batch_size\r\n    num_epochs = hparams.num_epochs if is_train else 1\r\n    example_parsed = tf.contrib.learn.read_batch_record_features(file_pattern=tfrecords_files,\r\n                            batch_size=batch_size,\r\n                            num_epochs=num_epochs,\r\n                            features=example_spec)\r\n\r\n    label = example_parsed.pop('label')\r\n    features = example_parsed\r\n\r\n    return features, label\r\n```\r\n\r\nThe log \r\n\r\n```bash\r\n\r\nINFO:tensorflow:Into main function\r\nINFO:tensorflow:vocab_dir: s3://experiements/yajun/youtube-match/data/raw/vocab\r\nINFO:tensorflow:Create Estimator\r\nINFO:tensorflow:Using config: {'_save_checkpoints_secs': 600, '_session_config': None, '_keep_checkpoint_max': 5, '_tf_random_seed': None, '_task_type': 'worker', '_is_chief': True, '_cluster_spec': <tensorflow.python.training.server_lib.ClusterSpec object at 0x7efcfa4bff90>, '_model_dir': 's3://experiements/yajun/youtube-match/data/model', '_num_worker_replicas': 1, '_task_id': 0, '_log_step_count_steps': 100, '_master': '', '_save_checkpoints_steps': None, '_keep_checkpoint_every_n_hours': 10000, '_service': None, '_save_summary_steps': 100, '_num_ps_replicas': 0}\r\nINFO:tensorflow:Begin to train model\r\nINFO:tensorflow:List files in S3 according to the file pattern: s3://experiements/yajun/youtube-match/data/raw/train/part-\r\nINFO:tensorflow:Create CheckpointSaverHook.\r\n2017-11-15 03:03:41.798030: I tensorflow/core/platform/cpu_feature_guard.cc:137] Your CPU supports instructions that this TensorFlow binary was not compiled to use: SSE4.1 SSE4.2 AVX AVX2 FMA\r\n2017-11-15 03:03:45.623759: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:892] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\r\n2017-11-15 03:03:45.624258: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1031] Found device 0 with properties:\r\nname: Tesla K80 major: 3 minor: 7 memoryClockRate(GHz): 0.8235\r\npciBusID: 0000:00:1e.0\r\ntotalMemory: 11.17GiB freeMemory: 11.11GiB\r\n2017-11-15 03:03:45.624285: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1121] Creating TensorFlow device (/device:GPU:0) -> (device: 0, name: Tesla K80, pci bus id: 0000:00:1e.0, compute capability: 3.7)\r\nINFO:tensorflow:Restoring parameters from s3://experiements/yajun/youtube-match/data/model/model.ckpt-1400\r\n^[[O^[[I\r\n^[[OINFO:tensorflow:Saving checkpoints for 1401 into s3://experiements/yajun/youtube-match/data/model/model.ckpt.\r\nINFO:tensorflow:loss = 4.90536, step = 1401\r\nINFO:tensorflow:global_step/sec: 188.871\r\nINFO:tensorflow:loss = 7.86743, step = 1501 (0.530 sec)\r\nINFO:tensorflow:global_step/sec: 219.692\r\nINFO:tensorflow:loss = 2.34025, step = 1601 (0.455 sec)\r\nINFO:tensorflow:global_step/sec: 224.707\r\nINFO:tensorflow:loss = 2.32145, step = 1701 (0.445 sec)\r\n2017-11-15 03:14:24.980234: W tensorflow/core/framework/op_kernel.cc:1192] Out of range: FIFOQueue '_4_dequeue_record_examples/fifo_queue' is closed and has insufficient elements (requested 1, current size 0)\r\n\t [[Node: dequeue_record_examples/fifo_queue_Dequeue = QueueDequeueV2[component_types=[DT_INT64, DT_INT64, DT_STRING, DT_INT64, DT_STRING], timeout_ms=-1, _device=\"/job:localhost/replica:0/task:0/device:CPU:0\"](dequeue_record_examples/fifo_queue)]]\r\nINFO:tensorflow:Saving checkpoints for 1750 into s3://experiements/yajun/youtube-match/data/model/model.ckpt.\r\nINFO:tensorflow:Loss for final step: 6.49392.\r\nINFO:tensorflow:Begin to export model to s3://experiements/yajun/youtube-match/data/model/exports\r\n2017-11-15 03:14:29.600289: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1121] Creating TensorFlow device (/device:GPU:0) -> (device: 0, name: Tesla K80, pci bus id: 0000:00:1e.0, compute capability: 3.7)\r\nINFO:tensorflow:Restoring parameters from s3://experiements/yajun/youtube-match/data/model/model.ckpt-1750\r\nINFO:tensorflow:Assets added to graph.\r\nINFO:tensorflow:No assets to write.\r\nINFO:tensorflow:SavedModel written to: s3://experiements/yajun/youtube-match/data/model/exports/temp-1510715669/saved_model.pb\r\nINFO:tensorflow:Finish to run\r\n```", "comments": ["Thank you for your post. We noticed you have not filled out the following field in the issue template. Could you update them if they are relevant in your case, or leave them as N/A? Thanks.\nBazel version\nExact command to reproduce", "It has been 14 days with no activity and the `awaiting response` label was assigned. Is this still an issue? Please update the label and/or status accordingly.", "It has been 14 days with no activity and the `awaiting response` label was assigned. Is this still an issue? Please update the label and/or status accordingly.", "Nagging Awaiting Response: It has been 14 days with no activityand the `awaiting response` label was assigned. Is this still an issue?", "Nagging Awaiting Response: It has been 14 days with no activityand the `awaiting response` label was assigned. Is this still an issue?", "Nagging Awaiting Response: It has been 14 days with no activityand the `awaiting response` label was assigned. Is this still an issue?", "Nagging Awaiting Response: It has been 14 days with no activityand the `awaiting response` label was assigned. Is this still an issue?", "It has been 14 days with no activity and the `awaiting response` label was assigned. Is this still an issue?", "It has been 14 days with no activity and the `awaiting response` label was assigned. Is this still an issue?", "It has been 29 days with no activity and the `awaiting response` label was assigned. Is this still an issue?", "It has been 14 days with no activity and the `awaiting response` label was assigned. Is this still an issue?", "It has been 15 days with no activity and the `awaiting response` label was assigned. Is this still an issue?", "I've also noticed this issue when running Tensorboard 1.8.0 with an s3:// path for the logdir. It takes a long time (several minutes) to read .tfevents files that are less than 50 MB.\r\n\r\nHere's a way I think this can be reproduced:\r\n\r\n1. Put a TF events file from a training run in S3. I used one that was ~43 MB\r\n2. Run the following Python code:\r\n```\r\nfrom tensorboard.backend.event_processing.event_file_loader import EventFileLoader\r\nloader = EventFileLoader('s3://path/to/tfevents/file')\r\ngenerator = loader.Load()\r\nfor event in g:\r\n  continue\r\n```\r\nThis took around 50 minutes to complete with the official TensorFlow 1.8.0 installed via pip. The slowdown is also apparent if you point Tensoboard to a logdir in S3 - the graphs load much more slowly when reading from S3.\r\n\r\nI was looking at the S3 filesystem code and noticed an extra data copy in S3RandomAccessFile::Read(). I removed this and rebuilt TensorFlow. Afterwards, Tensorboard seems to load much faster from S3. This change should also help when loading datasets and checkpoints from S3.\r\n\r\nPR here: https://github.com/tensorflow/tensorflow/pull/20034", "It has been 14 days with no activity and the `awaiting response` label was assigned. Is this still an issue?", "It has been 29 days with no activity and the `awaiting response` label was assigned. Is this still an issue?", "I believe this is still an issue since there's still an extra copy and memory allocations when reading data with `S3RandomAccessFile::Read()`: \r\n\r\nhttps://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/platform/s3/s3_file_system.cc#L191\r\n\r\nMaybe @yongtang can confirm?", "It has been 14 days with no activity and the `awaiting response` label was assigned. Is this still an issue?"]}, {"number": 14571, "title": "Links in tensorflow/tensorflow/contrib/lite/g3doc/models.md are not working", "body": "The links in tensorflow/tensorflow/contrib/lite/g3doc/models.md are not working, please fix it?\r\nWhen I click the Link, get the error \"AccessDenied\".\r\nI try to modify the link from\r\nhttps://storage.googleapis.com/download.tensorflow.org/models/mobilenet_v1_1.0_224_float_2017_11_08.zip\r\nto\r\nhttps://storage.googleapis.com/download.tensorflow.org/models/tflite/mobilenet_v1_1.0_224_float_2017_11_08.zip\r\n\r\nit works.\r\nBut for inception model I don't know how to fix it , need your help?", "comments": ["Thank you for noticing this, the links are fixed now.\r\n\r\nAnitha"]}, {"number": 14570, "title": "minor spelling tweaks in headers", "body": "", "comments": ["Can one of the admins verify this patch?", "Jenkins, test this please"]}, {"number": 14569, "title": "Converting the real and imaginary float values from short_test_segmen\u2026", "body": "\u2026t_spectrogram.csv.bin on big endian for spectrogram_test", "comments": ["Can one of the admins verify this patch?", "@petewarden , Could you please review the changes?", "@petewarden could you take a look when you get a chance? Thanks!", "@jhseu, Any update on this?"]}, {"number": 14568, "title": "Cmake TF1.4 GUP on windows 10", "body": "Who can give me some recent samples about \"Cmake TF1.4 GUP on windows 10\"? \r\nI have tried several times  following some old links ,but failed.\r\n\r\n\r\n\r\n\r\nSystem information\r\n\r\n\u2022OS Platform and Distribution :win10/64\r\n\u2022TensorFlow version (use command below): 1.4.0\r\n\u2022Python version: 3.5.2\r\n\u2022CUDA/cuDNN version: 9.0 /7.0.3\r\n\u2022GPU model and memory: GTX 1080Ti\r\n\u2022VS2015\r\n\u2022Have I written custom code:\r\n\u2022TensorFlow installed from:\r\n\u2022Bazel version\uff1a\r\n\u2022Exact command to reproduce\uff1a\r\n", "comments": ["Thank you for your post. We noticed you have not filled out the following field in the issue template. Could you update them if they are relevant in your case, or leave them as N/A? Thanks.\nHave I written custom code\nTensorFlow installed from\nBazel version\nExact command to reproduce", "It has been 14 days with no activity and the `awaiting response` label was assigned. Is this still an issue? Please update the label and/or status accordingly.", "Your problem isn't clear by the description. Please, provide all relevant info requested on the issue template or else we aren't able to help you. Could start by how to reproduce, errors you got (stack trace) etc.", "It has been 14 days with no activity and the `awaiting response` label was assigned. Is this still an issue? Please update the label and/or status accordingly."]}, {"number": 14567, "title": "Convert SavedModel files into TFLite file with toco convertor", "body": "### Feature request\r\n\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: \r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Ubuntu 16.04\r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version (use command below)**: 1.4.0\r\n- **Python version**: 2.7\r\n- **Bazel version (if compiling from source)**:\r\n- **GCC/Compiler version (if compiling from source)**:\r\n- **CUDA/cuDNN version**:\r\n- **GPU model and memory**:\r\n- **Exact command to reproduce**:\r\n\r\n### Describe the problem\r\n\r\nTensorFlow Lite is great and we can use the [toco](https://github.com/tensorflow/tensorflow/tree/master/tensorflow/contrib/lite/toco) tools to convert freeze_graph. And we can specify the input and output tensors for this model.\r\n\r\nHowever, we use SavedModel a lot for TensorFlow Serving. It has all the weights of the model and described the model signature in the better way.\r\n\r\nIt would be great if we can convert SavedModel file format into the final TFLite so that we don't need to export the model in many ways.\r\n\r\n", "comments": ["I believe this is being worked on and will happen soon.\r\n\r\n@petewarden @suharshs ", "It has been 14 days with no activity and this issue has an assignee.Please update the label and/or status accordingly.", "It has been 14 days with no activity and this issue has an assignee.Please update the label and/or status accordingly.", "Nagging Assignee: It has been 14 days with no activity and this issue has an assignee. Please update the label and/or status accordingly.", "Nagging Assignee: It has been 14 days with no activity and this issue has an assignee. Please update the label and/or status accordingly.", "Nagging Assignees @suharshs, @gargn, @sidneyyan: It has been 14 days with no activity and this issue has an assignee. Please update the label and/or status accordingly.", "Nagging Assignees @suharshs, @gargn, @sidneyyan: It has been 14 days with no activity and this issue has an assignee. Please update the label and/or status accordingly.", "I will close because it is not really necessary and we can export TFLite file in another way.\r\n\r\nPlease free to re-open this and it would be great to support it later. Thanks @asimshankar @suharshs @PeterisP ", "Is this feature still under development? I think it would be very useful. The comment above suggests there are other ways of doing this. Could someone maybe post a tutorial of this? The only one I could find is from TensorFlow (https://github.com/tensorflow/models/blob/master/research/slim/README.md), but it only seems to be optimized for image classification models.", "I believe @miaout17 @gargn are working on the tooling around the saved model format.", "There is currently a command line version of TOCO that supports SavedModels ([example](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/lite/toco/g3doc/cmdline_examples.md)). There is some work being done to improve this tooling including adding a Python API for SavedModels (which should be available externally by end of this week). The [documentation](https://github.com/tensorflow/tensorflow/tree/master/tensorflow/contrib/lite/toco) will be updated as these changes are made.", "Thank you for your quick replies, @gargn and @asimshankar. My actual problem is I'm trying to export a model very similar to the iris classification model described [here](https://www.tensorflow.org/get_started/premade_estimators) but the [tutorial provided by TensorFlow](https://github.com/tensorflow/models/blob/master/research/slim/README.md) only seems to work for image classification models. \r\n\r\nI have also [posted a more detailed question](https://stackoverflow.com/questions/50581883/how-do-i-export-a-tensorflow-model-as-a-tflite-file) on Stackoverflow, but nobody seems to have an answer to this. I would really appreciate it if you could take a look at it and maybe suggest a way in which I could make this work. Thanks!\r\n\r\n\r\n** UPDATE **\r\nOk I think I have finally found the code snippet I needed! It was right [here](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/lite/toco/g3doc/python_api.md):\r\n```\r\nimport tensorflow as tf\r\n\r\nimg = tf.placeholder(name=\"img\", dtype=tf.float32, shape=(1, 64, 64, 3))\r\nval = img + tf.constant([1., 2., 3.]) + tf.constant([1., 4., 4.])\r\nout = tf.identity(val, name=\"out\")\r\nwith tf.Session() as sess:\r\n  tflite_model = tf.contrib.lite.toco_convert(sess.graph_def, [img], [out])\r\n  open(\"test.tflite\", \"wb\").write(tflite_model)\r\n```\r\nBut how do I convert, say, the iris classification model mentioned above to a TensorFlow Lite Model using this piece of code?"]}, {"number": 14565, "title": "Added mode to input function arguments", "body": "", "comments": ["Oops, did something wrong there... I'm going to delete this branch and try again."]}, {"number": 14564, "title": "minor spelling tweaks", "body": "", "comments": ["Can one of the admins verify this patch?", "Jenkins, test this please"]}, {"number": 14563, "title": "Fix speech hotword model links.", "body": "", "comments": []}, {"number": 14562, "title": "[Bug] tf.contrib.layers.layer_norm: third-party implementation does not reflect the original paper", "body": "Please go to Stack Overflow for help and support:\r\n\r\nhttps://stackoverflow.com/questions/tagged/tensorflow\r\n\r\nIf you open a GitHub issue, here is our policy:\r\n\r\n1. It must be a bug or a feature request.\r\n2. The form below must be filled out.\r\n3. It shouldn't be a TensorBoard issue. Those go [here](https://github.com/tensorflow/tensorboard/issues).\r\n\r\n**Here's why we have that policy**: TensorFlow developers respond to issues. We want to focus on work that benefits the whole community, e.g., fixing bugs and adding features. Support only helps individuals. GitHub also notifies thousands of people when issues are filed. We want them to see you communicating an interesting problem, rather than being redirected to Stack Overflow.\r\n\r\n------------------------\r\n\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Linux Ubuntu 16.04\r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version (use command below)**: 1.3\r\n- **Python version**: 2.7\r\n- **Bazel version (if compiling from source)**: N/A\r\n- **GCC/Compiler version (if compiling from source)**: N/A\r\n- **CUDA/cuDNN version**: CUDA 8.0/cuDNN 6.0\r\n- **GPU model and memory**: Titan X\r\n- **Exact command to reproduce**: \r\n\r\n### Describe the problem\r\nIn the [original layer normalization paper](https://arxiv.org/pdf/1607.06450.pdf), it's been said that beta/gamma should have the same dimension as hidden variable (see the lines below Eq (4) in Page 3). Based on current implementation, there is no such option that reflects the original paper.\r\n\r\nPlease run the following source code to verify that.\r\n\r\nAlso, see the comment #3671 .\r\n\r\n### Source code / logs\r\n`import tensorflow as tf`\r\n`layer_norm = tf.contrib.layers.layer_norm`\r\n`batch_size = 10`\r\n`hidden_dim = 5`\r\n`input = tf.zeros((batch_size, hidden_dim), dtype=tf.float32)`\r\n`output = layer_norm(input)`\r\n`tf.trainable_variables()`", "comments": ["@xodus7 Could you take a look at this please?", "Hi sorry, but I've been traveling these past few days and haven't had time to look at this properly until now. In your example code above alpha and gamma have a shape of (5,) which is consistent with what's expected. What results are you getting?", "Shouldn't the size be (10, 5)? If you refer to the sentence in this paper.\r\n\r\n> b and g are defined as the bias\r\nand gain parameters of the same dimension as h_t", "No, that equation does not include the batch or time dimensions. See the last few sentences of the first paragraph in section 3.1. This is one of the big advantages of layer normalization over batch norm for RNNs.\r\n", "Please compare (3) and (4): mu and sigma are scalars while beta and gamma\nare vectors.\n\nThis means beta and gamma should have one more rank compared to mu and\nsigma.\n\nIf you consider batch_size as well, mu and sigma should have size\n(batch_size) while beta and gamma should have size (batch_size, gamma).\nOn Fri, Nov 17, 2017 at 5:23 AM Corey Wharton <notifications@github.com>\nwrote:\n\n> No, that equation does not include the batch or time dimensions. See the\n> last few sentences of the first paragraph in section 3.1. This is one of\n> the big advantages of layer normalization over batch norm for RNNs.\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/tensorflow/tensorflow/issues/14562#issuecomment-345203647>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AIWuK4P_1KX0TM5iQHf7pc4h-eRzSS8mks5s3V6TgaJpZM4Qd9R5>\n> .\n>\n", "In equation (4): a^t = W_hh\\*a^(t-1) + W_xh\\*x^t yeilding a rank 1 vector of size h. This h_t is also a rank one vector of size h. The batch and time dimensions are not considered here and Gamma and beta are shared (broadcasted) across them.\r\n\r\nIf gamma was (batch_size, hidden_size) then we'd be learning a separate scaling factor per batch per channel which does not match up with the paper's description.\r\n\r\n", "@xodus7 I see your point. Is it possible to add some unit test for the layer_normalization.", "@xcyan There are some tests: https://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/layers/python/layers/layers_test.py#L2750\r\n\r\nWhat coverage do you feel is missing?", "What we discussed: the shape of gamma and beta.", "Not a bad idea; if I get some free time I'll add them. Please feel free to add some yourself and/or let me know if you find any problems. Are you using this op in your projects?", "@xodus7 Yes. Let us chat offline since it's not relevant to TensorFlow issue."]}, {"number": 14561, "title": "TFLite doc fixes.", "body": "", "comments": []}, {"number": 14560, "title": "Merge of two internal changes", "body": "175695370  by A. Unique TensorFlower:\r\n\r\n    Implements _shared_embedding_columns and adds some tests.\r\n--\r\n175695349  by A. Unique TensorFlower:\r\n\r\n    Implements tf.metrics.true_negatives, adds missing tests and does\r\nsome cleanup in tf.contrib.metrics.\r\n\r\n(This is 2 of the 3 commits in from staging\r\nc674e27bfd68a6c990e694b6afd901bfeeaa006d)", "comments": ["Pushed all internal changes out already."]}, {"number": 14559, "title": "Part1 of contrib/lite documentation.", "body": "", "comments": []}, {"number": 14558, "title": "Bug: Inclusion missing in TF 1.4 BUILD file for mpi component", "body": "\r\n### System information\r\n- **I'm compiling TF from sources to have AVX512F instruction support**:\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: **16.04**\r\n- **TensorFlow installed from (source or binary)**: **source (11/14/2017)**\r\n- **TensorFlow version (use command below)**: **1.4.0**\r\n- **Python version**: **3.6.1**\r\n- **Bazel version (if compiling from source)**: **0.7.0**\r\n- **GCC/Compiler version (if compiling from source)**: **5.4.0**\r\n- **CUDA/cuDNN version**: **9.0 /7.0.3**\r\n- **GPU model and memory**: **GTX 1080Ti**\r\n- CPU i9 7900x\r\n- **Exact command to reproduce**:\r\n\r\n\r\nbazel build --config=mkl  --config=cuda  --copt=\"-O3\" --cxxopt=\"-D_GLIBCXX_USE_CXX11_ABI=0\" --copt=\"-DOMPI_SKIP_MPICXX\"  //tensorflow/tools/pip_package:build_pip_package\r\n\r\n### Describe the problem\r\nerror in compile/build\r\n....\r\n**ERROR**: /home/tadeusz/temp/TF14a/tensorflow-master/tensorflow/contrib/mpi/BUILD:60:1: undeclared inclusion(s) in rule '//tensorflow/contrib/mpi:mpi_rendezvous_mgr':\r\nthis rule is missing dependency declarations for the following files included by 'tensorflow/contrib/mpi/mpi_rendezvous_mgr.cc':\r\n  '/home/tadeusz/temp/TF14a/tensorflow-master/tensorflow/core/distributed_runtime/tensor_coding.h'\r\nIn file included from ./tensorflow/core/platform/default/logging.h:24:0,\r\n                 from ./tensorflow/core/platform/logging.h:25,\r\n                 from ./tensorflow/core/lib/gtl/array_slice_internal.h:32,\r\n                 from ./tensorflow/core/lib/gtl/array_slice.h:101,\r\n                 from ./tensorflow/core/lib/strings/str_util.h:23,\r\n                 from ./tensorflow/contrib/mpi/mpi_utils.h:25,\r\n                 from ./tensorflow/contrib/mpi/mpi_rendezvous_mgr.h:33,\r\n                 from tensorflow/contrib/mpi/mpi_rendezvous_mgr.cc:18:\r\n./tensorflow/core/util/tensor_format.h: In instantiation of 'T tensorflow::GetTensorDim(tensorflow::gtl::ArraySlice<T>, tensorflow::TensorFormat, char) [with T = long long int]':\r\n./tensorflow/core/util/tensor_format.h:372:47:   required from here\r\n./tensorflow/core/util/tensor_format.h:340:29: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]\r\n\r\n### Source code / logs\r\nthe following helps\r\nin file //tensorflow/contrib/mpi/BUILD\r\n```\r\n....\r\ncc_library(\r\n    name = \"mpi_rendezvous_mgr\",\r\n    srcs = [\"mpi_rendezvous_mgr.cc\"],\r\n    hdrs = [\"mpi_rendezvous_mgr.h\"],\r\n    deps = [\r\n        \":mpi_msg_proto_cc\",\r\n        \":mpi_utils\",\r\n        \"//tensorflow/core:core_cpu_internal\",\r\n        \"//tensorflow/core:framework\",\r\n        \"//tensorflow/core:gpu_runtime\",\r\n        \"//tensorflow/core:lib\",\r\n        \"//tensorflow/core:protos_cc\",\r\n        \"//tensorflow/core:worker_proto_cc\",\r\n        \"//tensorflow/core/distributed_runtime:base_rendezvous_mgr\",\r\n        \"//tensorflow/core/distributed_runtime:session_mgr\",\r\n        \"//tensorflow/core/distributed_runtime:worker_env\",\r\n        \"//third_party/mpi\",\r\n        \"//tensorflow/core/distributed_runtime:tensor_coding\",   ## <<<<< add this line <<<<<<<\r\n    ],\r\n)\r\n\r\n```\r\n", "comments": ["@jbedorf Could you take a look as well? Somehow I couldn't assign this issue to you.", "I have not run into that problem when I last compiled TF a few weeks ago. Could it be caused by something similar to the problem that had to be fixed with  #13800 ?\r\n", "\r\nBuilding from source with MPI support.\r\n   OpenMPI 3.0.0\r\n    OS Platform and Distribution (e.g., Linux Ubuntu 16.04): 16.04\r\n    TensorFlow installed from (source or binary): source Current master branch 52467b8e68122560439534e3bc9ea266408fbfa7\r\n    Python version: 2.7\r\n    Bazel version (if compiling from source): 0.7.0\r\n    GCC/Compiler version (if compiling from source): 5.4.0\r\n    CUDA/cuDNN version: 8.0 /6.0\r\n    GPU model and memory: Quadro P5000\r\n    CPU E5-2683 v4 @ 2.10GHz\r\n    Exact command to reproduce: `bazel build --config=opt --config=cuda //tensorflow/tools/pip_package:build_pip_package`\r\n\r\nGot exactly the same error as above.\r\n", "Looks like the changes introduced by 2ce0b9149741105795083c4bae8fb0b85cb9659d broke the compilation. In that commit there is a fix for the gdr contrib project which is the same as the one mentioned by @thupalo. \r\nI'll create a PR to fix this. "]}, {"number": 14557, "title": "Improve SkipNBytes to RandomInputStream ", "body": "This fix tries to address the issue raised in #14512 where SkipNBytes will takes a long time. In existing implementation, it needs to read through the file even though it is possible to random access the file itself.\r\n\r\nThis fix convert SkipNBytes in InputStreamInterface to pure virtual so that it is possible to have different implementations based on the underlying file type (seekable vs. no seekable)\r\n\r\nThis fix then have a specialized implementation in `RandomInputStream` so that\r\n1. The `SkipNBytes` will first try to read 1 bytes from `expected_pos - 1`, if completed, then return.\r\n2. If an out of range error returned from last step, then we don't know how far away we are from the EOF. We are forced to read through the file from the current pos all the way to `expected_pos`. This is similar to existing implementation.\r\n\r\nNote: Because `RandomAccessFile` only exposes `Read` (with start offset), not `SizeOfFile`, it is not possible to just move the position marker as we won't know where is the EOF.\r\n\r\nOne potential improvement could be to expose a `SizeOfFile` in `RandomAccessFile`. That means adding additional changes. It could be added if it is agreed.\r\n\r\nThis fix fixes #14512.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>", "comments": ["@rohan100jain can you take a look?", "@rohan100jain any luck with this?", "Nagging Assignee: It has been 14 days with no activity and this issue has an assignee. Please update the label and/or status accordingly.", "@rohan100jain Please take a look.", "Thanks @rohan100jain for the review. The PR has been updated. Please take a look."]}, {"number": 14556, "title": "Changes to the TF mobile docs for TFLite, and a new intro for TFLite.", "body": "PiperOrigin-RevId: 175638087", "comments": []}, {"number": 14555, "title": "Remove python boolean check from adjust_gamma", "body": "The adjust_gamma operation used a python boolean to check if gamma was positive.  This however removes any possibility of using a scalar tensor, which means it can't be used to apply random augmentations during training.\r\n\r\nIt is fixed by using a tf.assert_positive statement.", "comments": ["Can one of the admins verify this patch?", "Thanks for your pull request.  It looks like this may be your first contribution to a Google open source project. Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).\n\n:memo: **Please visit <https://cla.developers.google.com/> to sign.**\n\nOnce you've signed, please reply here (e.g. `I signed it!`) and we'll verify.  Thanks.\n\n---\n\n- If you've already signed a CLA, it's possible we don't have your GitHub username or you're using a different email address.  Check [your existing CLA data](https://cla.developers.google.com/clas) and verify that your [email is set on your git commits](https://help.github.com/articles/setting-your-email-in-git/).\n- If your company signed a CLA, they designated a Point of Contact who decides which employees are authorized to participate. You may need to contact the Point of Contact for your company and ask to be added to the group of authorized contributors. If you don't know who your Point of Contact is, direct the project maintainer to go/cla#troubleshoot.\n- In order to pass this check, please resolve this problem and have the pull request author add another comment and the bot will run again.\n\n<!-- need_sender_cla -->", "signed", "CLAs look good, thanks!\n\n<!-- ok -->", "@drpngx could you look at this?", "Any reason not to use `tf.assert_non_negative` instead? That allows `gamma=0`, as in the original code.", "Also, if `gamma` can be a vector, we'd need to change the doc, and add a test.", "@drpngx could you look at this?\r\n\r\n@Timen It's often still useful to have a static check -- can you check whether gamma is a tensor (with `tf.framework.is_tensor`) and only if it is, add the assert? That way you get the static check if it is available.", "(sorry @drpngx, I started that comment before you replied, please ignore)", "Added requested if else based on whether or not gamma is a tensor.", "Not sure why the tests fail I can't see any of the failure reports.", "Two failures:\r\n```\r\nFAIL: Found 2 non-whitelited pylint errors:\r\ntensorflow/python/ops/image_ops_impl.py:1011: [W0311(bad-indentation), ] Bad indentation. Found 7 spaces, expected 6\r\n\r\ntensorflow/python/ops/image_ops_impl.py:1012: [W0311(bad-indentation), ] Bad indentation. Found 10 spaces, expected 8\r\n```\r\n\r\nand\r\n\r\n```\r\n======================================================================\r\nERROR: test_adjust_gamma_greater_one (__main__.AdjustGamma)\r\nVerifying the output with expected results for gamma\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/tmp/botexec/bazel-out/k8-opt/bin/tensorflow/python/image_ops_test.runfiles/org_tensorflow/tensorflow/python/ops/image_ops_test.py\", line 235, in test_adjust_gamma_greater_one\r\n    y = image_ops.adjust_gamma(x_np, gamma=2)\r\n  File \"/tmp/botexec/bazel-out/k8-opt/bin/tensorflow/python/image_ops_test.runfiles/org_tensorflow/tensorflow/python/ops/image_ops_impl.py\", line 1008, in adjust_gamma\r\n    if tf.framework.is_tensor(gamma):\r\nNameError: global name 'tf' is not defined\r\n\r\n----------------------------------------------------------------------\r\nRan 28 tests in 1.458s\r\n\r\nFAILED (errors=1)\r\n```\r\n\r\nYou can also run the test locally!\r\n```\r\nbazel test -c opt //tensorflow/python:image_ops_test\r\n```", "Implemented a new assertion structure using the available _assert method, added unit tests for gamma < 0 in python float and tensor form. Local tests passed successfully.", "Jenkins, test this please.", "Jenkins, test this please.", "Fixed tensorflow dtype prefix based on last failed jenkins test.\r\n  ", "Local tests passed.", "Jenkins, test this please/", "Jenkins, test this please."]}, {"number": 14554, "title": "Exporting tensorflow package for cmake", "body": "This PR is based on the PR #13867.\r\n\r\nIt provides the usage of cmake `find_package()`. Therefore it should be easier to intergrate the prebuilt tensorflow code into existing external projects.\r\n\r\n1. What about a version control mechanism? (Cons: Has to be manually changed in every new version)\r\n2. Supplying some examples with the installed version (This examples should not be prebuilt, furthermore they should be built with an installed tensorflow)\r\n", "comments": ["Can one of the admins verify this patch?"]}, {"number": 14553, "title": "Fix a bug of model_to_dot()", "body": "This patch fixes #14542 ", "comments": ["Can one of the admins verify this patch?", "It appears this issue was re-introduced in [commit](https://github.com/tensorflow/tensorflow/commit/0bd0bf02aa15a3238b77053a2f0ad6fe373c7d1c#diff-2391fd575f61ea7e3cf589012305ad36)", "I unfortunately am not allowed to push/pull to github from where I'm located. But the fix is simply to redo the one line replacement in this pull request. \r\nReplace line 122:\r\nif node_key in model.container_nodes: \r\nwith:\r\nif node_key in model._network_nodes:  # pylint: disable=protected-access ", "@garrettargenna Thanks for the information, seems @sibyjackgrove will work on it."]}, {"number": 14552, "title": "Make sparse_to_dense differentiable by wrapping scatter_nd_add.", "body": "Make `sparse_to_dense` a wrapper of `scatter_nd_add`, as the two have very similar functionality and the latter is differentiable while the former is not. Ran into this because there apparently is no warning when trying to differentiate not differentiable ops.\r\n\r\nRelated: https://github.com/tensorflow/tensorflow/issues/6391#issuecomment-268392143\r\n\r\nIf this has potential to be merged and further changes are required, I am happy to work on those.\r\n\r\nedit: Misleading commit message, wrapping `scatter_nd_add` in order to allow a default value.", "comments": ["Can one of the admins verify this patch?", "Thanks for your pull request.  It looks like this may be your first contribution to a Google open source project. Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).\n\n:memo: **Please visit <https://cla.developers.google.com/> to sign.**\n\nOnce you've signed, please reply here (e.g. `I signed it!`) and we'll verify.  Thanks.\n\n---\n\n- If you've already signed a CLA, it's possible we don't have your GitHub username or you're using a different email address.  Check [your existing CLA data](https://cla.developers.google.com/clas) and verify that your [email is set on your git commits](https://help.github.com/articles/setting-your-email-in-git/).\n- If your company signed a CLA, they designated a Point of Contact who decides which employees are authorized to participate. You may need to contact the Point of Contact for your company and ask to be added to the group of authorized contributors. If you don't know who your Point of Contact is, direct the project maintainer to go/cla#troubleshoot.\n- In order to pass this check, please resolve this problem and have the pull request author add another comment and the bot will run again.\n\n<!-- need_sender_cla -->", "Signed it!", "CLAs look good, thanks!\n\n<!-- ok -->", "@rmlarsen, could you take a look?", "@ahoereth can you add a unit test, please?", "@ahoereth any chance to add the unit test?", "Sorry for the late reply. Sure, I can add unit tests, I am just really not sure what kind of unit test you are expecting? The function itself and the one it wraps are both already unit tested. Should I duplicate the `scatter_nd_add` gradient unit tests (if there are any) and apply them to `sparse_to_dense`?\r\n  ", "@ahoereth sorry I dropped this. Yes, a basic unit test for the gradient of sparse_to_dense is needed. You can copy or modify an existing one.", "Also, please rebase to resolve the conflict.", "Nagging Assignee: It has been 14 days with no activity and this issue has an assignee. Please update the label and/or status accordingly.", "@ahoereth any progress on adding a basic unit test?", "Nagging Assignee: It has been 14 days with no activity and this issue has an assignee. Please update the label and/or status accordingly.", "Nagging Assignee @rmlarsen: It has been 14 days with no activity and this issue has an assignee. Please update the label and/or status accordingly.", "@ahoereth any chance you'll be able to finish this PR?", "It has been 14 days with no activity and the `awaiting response` label was assigned. Is this PR still valid? Assigning the `stalled` label. Please comment to reassure me that this is still being worked on.", "@ahoereth Thanks for adding the test.", "Please take a look at the test failures; https://source.cloud.google.com/results/invocations/7e00010b-9216-4bbd-8371-0be4e7023416/log", "Hey there, sorry for the long delay on this. Apparently my thoughts on how to easily do this would need some deeper changes (e.g. to allow [bool as ref's dtype for scatter_nd_add](https://source.cloud.google.com/results/invocations/356de39b-1dba-4e22-9cc7-780fe0fcc906/targets/%2F%2Ftensorflow%2Fpython%2Fkernel_tests:sparse_ops_test/log)). Closing this for now.", "is this merged to 1.12.0?"]}, {"number": 14551, "title": "Fix the wrong ValurError formatting in convolutional.py", "body": "This commit makes the error message of the build function of Conv2DTranspose a complete string, which is more human-readable.", "comments": ["Can one of the admins verify this patch?"]}, {"number": 14550, "title": "Log version of the SoftmaxFunctor implementation is numerically unstable", "body": "The following code in the log version of SoftmaxFunctor, should use reduce_logsumexp() instead of .exp().sum().log()\r\n\r\n```\r\n    if (log) {\r\n      // Calculate the log of the softmax\r\n      // softmax = logits - max(logits along classes);\r\n      softmax.device(d) = shifted_logits;\r\n      // softmax = softmax - log(sum(exp(softmax along classes)));\r\n      softmax.device(d) = (softmax -\r\n                           softmax.exp()\r\n                               .sum(along_class)\r\n                               .eval()\r\n                               .reshape(batch_by_one)\r\n                               .log()\r\n                               .broadcast(one_by_class));\r\n\r\n```\r\n\r\nAdditionally, the following code in the tests only passes without generating NANs because the data is generated using standard normals, never resulting in the values that are too small to be converted to zeroes when exponentiated:\r\n\r\n```\r\nclass LogSoftmaxTest(test_lib.TestCase):\r\n\r\n  def _log_softmax(self, x):\r\n    assert len(x.shape) == 2\r\n    m = x.max(1)[:, np.newaxis]\r\n    u = x - m\r\n    return u - np.log(np.sum(np.exp(u), 1, keepdims=True))\r\n```", "comments": ["Oh sorry, the logits are already shifted, all good!"]}, {"number": 14549, "title": "Windows Bazel build is failing due to compiling error for //tensorflow/compiler/xla:util", "body": "http://ci.tensorflow.org/job/tf-master-win-bzl/1902/console\r\n```\r\n09:28:12 bazel-out/msvc_x64-py3-opt/genfiles\\tensorflow/compiler/xla/xla_data.pb.h(280): error C2059: syntax error: 'constant'\r\n09:28:12 bazel-out/msvc_x64-py3-opt/genfiles\\tensorflow/compiler/xla/xla_data.pb.h(280): error C3805: 'constant': unexpected token, expected either '}' or a ','\r\n```\r\n\r\nCulprit: https://github.com/tensorflow/tensorflow/commit/64d9aa1ace99c66f20b65532f633acb34ee3c057\r\n\r\nThe dependency from pip package to this target is:\r\n```\r\n//tensorflow/tools/pip_package:build_pip_package\r\n//tensorflow/python/eager:eager_pip\r\n//tensorflow/python:pywrap_tensorflow\r\n//tensorflow/python:pywrap_tensorflow_internal\r\n//tensorflow/python:_pywrap_tensorflow_internal.so\r\n//tensorflow/python:tf_session_helper\r\n//tensorflow/core:all_kernels\r\n//tensorflow/core/kernels:summary_kernels\r\n//tensorflow/core/kernels:summary_interface\r\n//tensorflow/compiler/xla:util\r\n```\r\nThis dependency exists even when xla is disabled.\r\n\r\nhttps://github.com/tensorflow/tensorflow/commit/64d9aa1ace99c66f20b65532f633acb34ee3c057 changed [xla_data.proto](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/compiler/xla/xla_data.proto), which somehow caused this problem. \r\n\r\nBecause the code is generated by protobuf, I'm not sure if this is a protobuf bug.\r\n@yunxing @gunan \r\n", "comments": ["@alextp Should summary_kernel depend on `//tensorflow/compiler/xla:util`?\r\nCan we cut this dependency?", "It depends because it uses xla::MakeUnique which is convenient when working with unique_ptrs. Maybe we should pull MakeUnique out of xla and into tensorflow core lib?", "That sounds like a good idea to me :)", "@alextp do you want to take this, or should I mark it \"contributions welcome\"? ", "I have too much on my plate now to take this right away :-/\n\nOn Wed, Nov 15, 2017 at 6:06 PM, Cliff Young <notifications@github.com>\nwrote:\n\n> @alextp <https://github.com/alextp> do you want to take this, or should I\n> mark it \"contributions welcome\"?\n>\n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/tensorflow/tensorflow/issues/14549#issuecomment-344791696>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AAATxTgbMyEza5aUS7ARsFAcxh49w9cjks5s25iYgaJpZM4QdXyR>\n> .\n>\n\n\n\n-- \n - Alex\n"]}, {"number": 14548, "title": "Update wide.md", "body": "", "comments": ["Can one of the admins verify this patch?", "The existing text is correct."]}, {"number": 14547, "title": "Tensorflow Java Api Graph support any other than InceptionV3", "body": "I'm fairly new to tensorflow, but I've got a general idea of it.\r\n\r\nI've retrained Faster RCNN coco model on my own images in ubuntu. and exported the frozen graph.\r\nNow I'm busy writing an Java app in windows that will use the model for object detection, I need bounding boxes etc to can't just use the normal classifier.\r\n\r\nIn my java app when I try to load/importGraphDef the frozen graph(converted to bytes), I get the following error.\r\n\"Op type not registered 'NonMaxSuppressionV2'\"\r\nAny and all examples I find online of implementing the tensorflow java api uses inceptionv3.\r\nSo my guess is that the java API doesn't yet support other types(faster rcnn in my case) models\r\n\r\nIs that correct or are there something else I should be looking at, if it is then I have to rewrite my java app in python...\r\nAnd if so does anyone know when support will be implemented ?\r\n\r\nThank you.", "comments": ["Could you please provide more detail - ideally all the details asked for in the new issue template. These include which version of TensorFlow you're using and instructions to reproduce the problem.\r\n\r\nIn general, the Java API is not tied to InceptionV3 and there have been uses of it with different models. Without the information asked for in the new issue template, it'll be hard for us to diagnose the problem.\r\n\r\nThanks!", "I met the same question on iOS again. Do you know how to solve it?Thank you.", "It has been 14 days with no activity and the `awaiting response` label was assigned. Is this still an issue? Please update the label and/or status accordingly.", "Closing this due to inactivity. If there still is a problem, please do file a new issue including all the details asked for in the template and in  https://github.com/tensorflow/tensorflow/issues/14547#issuecomment-344477454"]}, {"number": 14546, "title": "[Go] SIGABRT when running go test, using tensorflow 1.4 compiled form source", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: no\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Archlinux\r\n- **TensorFlow installed from (source or binary)**: source\r\n- **TensorFlow version (use command below)**: 1.4.0\r\n- **Python version**: 3.6\r\n- **Bazel version (if compiling from source)**: Build label: 0.7.0- (@non-git)\r\n- **GCC/Compiler version (if compiling from source)**: gcc-6\r\n- **CUDA/cuDNN version**: CUDA 9 / cuDNN 7\r\n- **GPU model and memory**: Dual Nvidia 1080 Ti\r\n- **Exact command to reproduce**:\r\n\r\n```\r\ngo test github.com/tensorflow/tensorflow/tensorflow/go\r\n```\r\n\r\n### Describe the problem\r\n\r\nI have build tensorflow with CUDA support. Since Go requires the C library, I built `libtensorflow.so` and `libtensorflow_framework.so`, with:\r\n\r\n```\r\nbazel build //tensorflow:libtensorflow_framework.so\r\nbazel build //tensorflow:libtensorflow.so\r\n```\r\n\r\nI updated `LD_LIBRARY_PATH` accordingly:\r\n\r\n```bash\r\nTENSORFLOW_LIBLIB=\"${HOME}/sources/tensorflow/bazel-bin/tensorflow/\"\r\nexport LD_LIBRARY_PATH=\"$LD_LIBRARY_PATH:/opt/cuda/lib64:/opt/cuda/extras/CUPTI/lib64:${TENSORFLOW_LIBLIB}\"\r\nexport LIBRARY_PATH=\"${TENSORFLOW_LIBLIB}:${LIBRARY_PATH}\"\r\n```\r\n\r\nI can now go get tensorflow without problems, I can hence compile it and use the `-ltensorflow` linker flag.\r\n\r\nWhen I run `go test` on the tensorflow package, the following error (`tensorflow/core/framework/tensor.cc:822] Unexpected type: 23 `) is thrown and causes SIGABRT.\r\n\r\n### Source code / logs\r\n\r\n```\r\ngo test github.com/tensorflow/tensorflow/tensorflow/go                                                                                                                                                                                                    \r\n2017-11-14 12:12:06.299645: I tensorflow/core/platform/cpu_feature_guard.cc:137] Your CPU supports instructions that this TensorFlow binary was not compiled to use: SSE4.1 SSE4.2 AVX AVX2 AVX512F FMA                                                                        \r\n2017-11-14 12:12:06.303492: F tensorflow/core/framework/tensor.cc:822] Unexpected type: 23                                                                                                                                                                                     \r\nSIGABRT: abort                                                                                                                                                                                                                                                                 \r\nPC=0x7f1d39a098a0 m=6 sigcode=18446744073709551610                        \r\nsignal arrived during cgo execution                                                                                                                                                                                                                                            \r\n                                                                                                                                                                                                                                                                               goroutine 40 [syscall, locked to thread]:                                                                                                                                                                                                                                      \r\nruntime.cgocall(0x656af0, 0xc4200519c8, 0xc4200519f0)\r\n        /usr/lib/go/src/runtime/cgocall.go:132 +0xe4 fp=0xc420051998 sp=0xc420051958 pc=0x4054c4                                                                                                                                                                        \r\ngithub.com/tensorflow/tensorflow/tensorflow/go._Cfunc_TF_SetAttrTensor(0x7f1cf000a9a0, 0x7f1cf000b5a0, 0x7f1cf000b6b0, 0x7f1cf000cc00)                                                                                                                                         \r\n        github.com/tensorflow/tensorflow/tensorflow/go/_test/_obj_test/_cgo_gotypes.go:890 +0x45 fp=0xc4200519c8 sp=0xc420051998 pc=0x52ce85                                                                                                                                   \r\ngithub.com/tensorflow/tensorflow/tensorflow/go.setAttr.func18(0x7f1cf000a9a0, 0x7f1cf000b5a0, 0x7f1cf000b6b0, 0x7f1cf000cc00)                                                                                                                                                  \r\n        /home/pgaleone/go/src/github.com/tensorflow/tensorflow/tensorflow/go/graph.go:273 +0xec fp=0xc420051a00 sp=0xc4200519c8 pc=0x53907c\r\ngithub.com/tensorflow/tensorflow/tensorflow/go.setAttr(0x7f1cf000a9a0, 0xc42000e0c0, 0x6ef59e, 0x5, 0x6b6560, 0xc4200f6460, 0x0, 0x0)\r\n        /home/pgaleone/go/src/github.com/tensorflow/tensorflow/tensorflow/go/graph.go:273 +0x11b9 fp=0xc420051c00 sp=0xc420051a00 pc=0x52fab9                                                                                                                                  \r\ngithub.com/tensorflow/tensorflow/tensorflow/go.(*Graph).AddOperation(0xc42000e080, 0x6ef404, 0x5, 0xc42050c4e0, 0x6, 0x0, 0x0, 0x0, 0xc42008af00, 0x4b388b, ...)                                                                                                               \r\n        /home/pgaleone/go/src/github.com/tensorflow/tensorflow/tensorflow/go/graph.go:176 +0x4a0 fp=0xc420051d60 sp=0xc420051c00 pc=0x52e700                                                                                                                                   \r\ngithub.com/tensorflow/tensorflow/tensorflow/go.Const(0xc42000e080, 0xc42050c4e0, 0x6, 0x682c40, 0xc4200f62e0, 0xc42050c4e0, 0x6, 0x4d48ed, 0x7ab068)\r\n        /home/pgaleone/go/src/github.com/tensorflow/tensorflow/tensorflow/go/util_test.go:38 +0x221 fp=0xc420051e38 sp=0xc420051d60 pc=0x52a0a1\r\ngithub.com/tensorflow/tensorflow/tensorflow/go.TestOutputDataTypeAndShape.func1(0xc420110780)                                                                                                                                                                                  \r\n        /home/pgaleone/go/src/github.com/tensorflow/tensorflow/tensorflow/go/operation_test.go:137 +0x11e fp=0xc420051fa8 sp=0xc420051e38 pc=0x53650e                                                                                                                          \r\ntesting.tRunner(0xc420110780, 0xc4200f6420)                                                                                                                                                                                                                                    \r\n        /usr/lib/go/src/testing/testing.go:746 +0xd0 fp=0xc420051fd0 sp=0xc420051fa8 pc=0x4d4990\r\nruntime.goexit()                                                                                                                                                                                                                                                               \r\n        /usr/lib/go/src/runtime/asm_amd64.s:2337 +0x1 fp=0xc420051fd8 sp=0xc420051fd0 pc=0x45f981                                                                                                                                                                              \r\ncreated by testing.(*T).Run                                                                                                                                                                                                                                                    \r\n        /usr/lib/go/src/testing/testing.go:789 +0x2de                                                                                                                                                                                                                          \r\n                                                                                                                                                                                                                                                                               \r\ngoroutine 1 [chan receive]:                                                                                                                                                                                                                                                    \r\ntesting.(*T).Run(0xc420110000, 0x6f567b, 0x1a, 0x702ab0, 0x47b301)             \r\n        /usr/lib/go/src/testing/testing.go:790 +0x2fc                                                                                                                                                                                                                          \r\ntesting.runTests.func1(0xc420110000)                                           \r\n        /usr/lib/go/src/testing/testing.go:1004 +0x64                          \r\ntesting.tRunner(0xc420110000, 0xc420061de0)                                    \r\n        /usr/lib/go/src/testing/testing.go:746 +0xd0\r\ntesting.runTests(0xc4200f6240, 0xa413c0, 0x11, 0x11, 0xc420061e78)\r\n        /usr/lib/go/src/testing/testing.go:1002 +0x2d8\r\ntesting.(*M).Run(0xc420061f18, 0xc420061f70)\r\n        /usr/lib/go/src/testing/testing.go:921 +0x111                                                         \r\nmain.main()                                                                            \r\n        github.com/tensorflow/tensorflow/tensorflow/go/_test/_testmain.go:82 +0xdb\r\n\r\ngoroutine 36 [chan receive]:         \r\ntesting.(*T).Run(0xc4201103c0, 0xc4200145e0, 0x13, 0xc4200f6420, 0x2)                                                                                                                                                                                                          \r\n        /usr/lib/go/src/testing/testing.go:790 +0x2fc                                                                                                                                                                                                                          \r\ngithub.com/tensorflow/tensorflow/tensorflow/go.TestOutputDataTypeAndShape(0xc4201103c0)                                                                                                                                                                                        \r\n        /home/pgaleone/go/src/github.com/tensorflow/tensorflow/tensorflow/go/operation_test.go:136 +0x56e                                                                                                                                                                      \r\ntesting.tRunner(0xc4201103c0, 0x702ab0)                                                                                                                                                                                                                                        \r\n        /usr/lib/go/src/testing/testing.go:746 +0xd0\r\ncreated by testing.(*T).Run\r\n        /usr/lib/go/src/testing/testing.go:789 +0x2de\r\n\r\nrax    0x0\r\nrbx    0x6\r\nrcx    0x7f1d39a098a0\r\nrdx    0x0\r\nrdi    0x2\r\nrsi    0x7f1cf67fb7b0\r\nrbp    0x7f1cf67fba00\r\nrsp    0x7f1cf67fb7b0\r\nr8     0x0\r\nr9     0x7f1cf67fb7b0\r\nr10    0x8\r\nr11    0x246\r\nr12    0x7f1cf000c210\r\nr13    0x17\r\nr14    0x7f1cf000b5a0\r\nr15    0x7f1cf67fbc40\r\nrip    0x7f1d39a098a0\r\nrflags 0x246\r\ncs     0x33\r\nfs     0x0\r\ngs     0x0\r\nFAIL    github.com/tensorflow/tensorflow/tensorflow/go  0.059s\r\n```", "comments": ["@galeone I'm running up against this as well. Have you found any workarounds?", "I didn't have time to dig into the code, therefore no. But since C++ tests are passing, I guess that they have changed something in the C++ implementation without reflecting the changes in the tensorflow tests (maybe some operation that fist was accepting a `float32` now needs a `float64`). I'm pretty sure that other packages that depend on the go package could still work. Tomorrow I'm going to try if [tfgo](https://github.com/galeone/tfgo) can still be built and run. I keep you up-to-date", "Update: I checked if tfgo can be compiled and it can run its tests: it does. Therefore the problem is in the tensorflow go tests", "Ok, I found where the error is. It looks like that the `Uint64` type is somehow unsupported when creating a 2D tensor using the `Const` operation (in the C library).\r\n\r\nThe error line is: https://github.com/tensorflow/tensorflow/blob/master/tensorflow/go/operation_test.go#L126\r\n\r\nIf you comment these lines of code\r\n\r\n```go\r\n\t\t{ // Matrix of Uint64\r\n\t\t\t[][]uint64{\r\n\t\t\t\t{1, 2, 3},\r\n\t\t\t\t{4, 5, 6},\r\n\t\t\t},\r\n\t\t\t[]int64{2, 3},\r\n\t\t\tUint64,\r\n\t\t},\r\n````\r\n\r\n`go test` works without raising SIGABRT.\r\n\r\nAlso, the error is about a \"type 23\", but from what I can see here (https://godoc.org/github.com/tensorflow/tensorflow/tensorflow/go#DataType ) there are only 22 data types available.\r\n\r\n", "Apologies for the late reply, I was out.\r\n\r\nDataType 23 corresponds to `TF_UINT64`:\r\n\r\nhttps://github.com/tensorflow/tensorflow/blob/ab0fcaceda001825654424bf18e8a8e0f8d39df2/tensorflow/core/framework/types.proto#L39\r\n\r\nsupport for which was added pretty recently (after TensorFlow 1.4 was cut) in commit https://github.com/tensorflow/tensorflow/commit/3bafe0a86f67dd54197c6d60bdb5053f510de7d8 (see also #14331)\r\n\r\nSo the test at head will not work with the C library from the 1.4 branch.\r\nYou'll either need to run tests from the 1.4 branch or build the C library from head.\r\n\r\nPlease feel free to re-open if I misunderstood and you still see the problem at head (or when the Go code and C library versions are inconsistent)", "That was easier than I thought, so the fix is:\r\n\r\n```bash\r\ncd $GOPATH/src/github.com/tensorflow/tensorflow/tensorflow/go\r\ngit checkout r1.4\r\ngo test\r\n```\r\n\r\nPerfect. Thank you!", "I'm facing again this same exact issue.\r\nIt looks like the problem with the `Unexpected type: 23` has been fixed only in tensorflow 1.4, but it is still present in every other release (I've tested with 1.5, 1.6 and 1.7 and is present).\r\n\r\nProof:\r\n\r\n1.5\r\n```\r\n(cv) [pgaleone@persefone go]$ git checkout r1.5\r\nSwitched to branch 'r1.5'\r\nYour branch is up to date with 'origin/r1.5'.\r\n(cv) [pgaleone@persefone go]$ go test\r\n2018-04-07 08:37:06.625482: F tensorflow/core/framework/tensor.cc:822] Unexpected type: 23\r\nSIGABRT: abort\r\nPC=0x7f82afedd860 m=8 sigcode=18446744073709551610\r\n\r\ngoroutine 0 [idle]:\r\nruntime: unknown pc 0x7f82afedd860\r\nstack: frame={sp:0x7f82937f5880, fp:0x0} stack=[0x7f8292ff61d0,0x7f82937f5dd0)\r\n00007f82937f5780:  0000000000000000  0000006e0000005b \r\n00007f82937f5790:  0000000000000000  000000770000007c \r\n00007f82937f57a0:  000000000000001b  00007f827c000020 \r\n00007f82937f57b0:  0000000000000014  fffffffffffffef8 \r\n00007f82937f57c0:  00007f827c00822d  0000000000000003 \r\n00007f82937f57d0:  00007f827c006940  00007f82aff2b47a \r\n00007f82937f57e0:  00007f827c0052b0  00007f827c0052c1 \r\n00007f82937f57f0:  000000000000000d  00007f82aff5cdc2 \r\n00007f82937f5800:  00007f82b025b350  0000000000000001 \r\n00007f82937f5810:  0000000000000000  00000000000000ac \r\n00007f82937f5820:  00007f82b025b350  00007f82aff5de29 \r\n00007f82937f5830:  0000000000000001  ffffffff00000008 \r\n00007f82937f5840:  01000000004d1d96  0000000000000011 \r\n00007f82937f5850:  0000000000000008  0000000000000008 \r\n00007f82937f5860:  00000000000006b8  00000000000006b8 \r\n00007f82937f5870:  00007f82937f5900  0000000000000000 \r\n00007f82937f5880: <0000000000000000  0000000000000000 \r\n00007f82937f5890:  0800000000000000  0000000008000000 \r\n00007f82937f58a0:  08000000ae000000  0000000011000000 \r\n00007f82937f58b0:  0000000000000802  000000000076074b \r\n00007f82937f58c0:  0000000000000003  a56bbb4077756a00 \r\n00007f82937f58d0:  0000000000000000  00007f82937f5ae0 \r\n00007f82937f58e0:  00007f82937f5a50  00007f82937f5a70 \r\n00007f82937f58f0:  0000000000098b4a  00007f82937f5a20 \r\n00007f82937f5900:  fffffffe7fffffff  ffffffffffffffff \r\n00007f82937f5910:  ffffffffffffffff  ffffffffffffffff \r\n00007f82937f5920:  ffffffffffffffff  ffffffffffffffff \r\n00007f82937f5930:  ffffffffffffffff  ffffffffffffffff \r\n00007f82937f5940:  ffffffffffffffff  ffffffffffffffff \r\n00007f82937f5950:  ffffffffffffffff  ffffffffffffffff \r\n00007f82937f5960:  ffffffffffffffff  ffffffffffffffff \r\n00007f82937f5970:  ffffffffffffffff  ffffffffffffffff \r\nruntime: unknown pc 0x7f82afedd860\r\nstack: frame={sp:0x7f82937f5880, fp:0x0} stack=[0x7f8292ff61d0,0x7f82937f5dd0)\r\n00007f82937f5780:  0000000000000000  0000006e0000005b \r\n00007f82937f5790:  0000000000000000  000000770000007c \r\n00007f82937f57a0:  000000000000001b  00007f827c000020 \r\n00007f82937f57b0:  0000000000000014  fffffffffffffef8 \r\n00007f82937f57c0:  00007f827c00822d  0000000000000003 \r\n00007f82937f57d0:  00007f827c006940  00007f82aff2b47a \r\n00007f82937f57e0:  00007f827c0052b0  00007f827c0052c1 \r\n00007f82937f57f0:  000000000000000d  00007f82aff5cdc2 \r\n00007f82937f5800:  00007f82b025b350  0000000000000001 \r\n00007f82937f5810:  0000000000000000  00000000000000ac \r\n00007f82937f5820:  00007f82b025b350  00007f82aff5de29 \r\n00007f82937f5830:  0000000000000001  ffffffff00000008 \r\n00007f82937f5840:  01000000004d1d96  0000000000000011 \r\n00007f82937f5850:  0000000000000008  0000000000000008 \r\n00007f82937f5860:  00000000000006b8  00000000000006b8 \r\n00007f82937f5870:  00007f82937f5900  0000000000000000 \r\n00007f82937f5880: <0000000000000000  0000000000000000 \r\n00007f82937f5890:  0800000000000000  0000000008000000 \r\n00007f82937f58a0:  08000000ae000000  0000000011000000 \r\n00007f82937f58b0:  0000000000000802  000000000076074b \r\n00007f82937f58c0:  0000000000000003  a56bbb4077756a00 \r\n00007f82937f58d0:  0000000000000000  00007f82937f5ae0 \r\n00007f82937f58e0:  00007f82937f5a50  00007f82937f5a70 \r\n00007f82937f58f0:  0000000000098b4a  00007f82937f5a20 \r\n00007f82937f5900:  fffffffe7fffffff  ffffffffffffffff \r\n00007f82937f5910:  ffffffffffffffff  ffffffffffffffff \r\n00007f82937f5920:  ffffffffffffffff  ffffffffffffffff \r\n00007f82937f5930:  ffffffffffffffff  ffffffffffffffff \r\n00007f82937f5940:  ffffffffffffffff  ffffffffffffffff \r\n00007f82937f5950:  ffffffffffffffff  ffffffffffffffff \r\n00007f82937f5960:  ffffffffffffffff  ffffffffffffffff \r\n00007f82937f5970:  ffffffffffffffff  ffffffffffffffff \r\n\r\ngoroutine 30 [syscall]:\r\nruntime.cgocall(0x6524d0, 0xc42005b8d0, 0xc42005b8d8)\r\n\t/usr/lib/go/src/runtime/cgocall.go:128 +0x64 fp=0xc42005b8a0 sp=0xc42005b868 pc=0x405454\r\ngithub.com/tensorflow/tensorflow/tensorflow/go._Cfunc_TF_SetAttrTensor(0x7f827c0043b0, 0x7f827c005190, 0x7f827c005280, 0x7f827c006650)\r\n\t_cgo_gotypes.go:921 +0x45 fp=0xc42005b8d0 sp=0xc42005b8a0 pc=0x522ac5\r\ngithub.com/tensorflow/tensorflow/tensorflow/go.setAttr.func18(0x7f827c0043b0, 0x7f827c005190, 0x7f827c005280, 0x7f827c006650)\r\n\t/home/pgaleone/projects/go/src/github.com/tensorflow/tensorflow/tensorflow/go/graph.go:306 +0xce fp=0xc42005b908 sp=0xc42005b8d0 pc=0x52e4ae\r\ngithub.com/tensorflow/tensorflow/tensorflow/go.setAttr(0x7f827c0043b0, 0xc42000e0c0, 0x6ed34c, 0x5, 0x6b21a0, 0xc420112500, 0x0, 0x0)\r\n\t/home/pgaleone/projects/go/src/github.com/tensorflow/tensorflow/tensorflow/go/graph.go:306 +0x1006 fp=0xc42005bad8 sp=0xc42005b908 pc=0x5255f6\r\ngithub.com/tensorflow/tensorflow/tensorflow/go.(*Graph).AddOperation(0xc42000e080, 0x6ed1a3, 0x5, 0xc42001a7e8, 0x6, 0x0, 0x0, 0x0, 0xc42005bcb0, 0xc420047cf0, ...)\r\n\t/home/pgaleone/projects/go/src/github.com/tensorflow/tensorflow/tensorflow/go/graph.go:209 +0x49d fp=0xc42005bc30 sp=0xc42005bad8 pc=0x52443d\r\ngithub.com/tensorflow/tensorflow/tensorflow/go.Const(0xc42000e080, 0xc42001a7e8, 0x6, 0x67d160, 0xc420112340, 0xc42001a7e8, 0x6, 0x7ad090, 0x7ad0d0)\r\n\t/home/pgaleone/projects/go/src/github.com/tensorflow/tensorflow/tensorflow/go/util_test.go:38 +0x247 fp=0xc42005be40 sp=0xc42005bc30 pc=0x51fb77\r\ngithub.com/tensorflow/tensorflow/tensorflow/go.TestOutputDataTypeAndShape.func1(0xc420128780)\r\n\t/home/pgaleone/projects/go/src/github.com/tensorflow/tensorflow/tensorflow/go/operation_test.go:137 +0x111 fp=0xc42005bfa8 sp=0xc42005be40 pc=0x52bbc1\r\ntesting.tRunner(0xc420128780, 0xc4201124c0)\r\n\t/usr/lib/go/src/testing/testing.go:777 +0xd0 fp=0xc42005bfd0 sp=0xc42005bfa8 pc=0x4ce240\r\nruntime.goexit()\r\n\t/usr/lib/go/src/runtime/asm_amd64.s:2361 +0x1 fp=0xc42005bfd8 sp=0xc42005bfd0 pc=0x45cf41\r\ncreated by testing.(*T).Run\r\n\t/usr/lib/go/src/testing/testing.go:824 +0x2e0\r\n\r\ngoroutine 1 [chan receive]:\r\ntesting.(*T).Run(0xc4201283c0, 0x6f3637, 0x1a, 0x7013f0, 0x477b01)\r\n\t/usr/lib/go/src/testing/testing.go:825 +0x301\r\ntesting.runTests.func1(0xc420128000)\r\n\t/usr/lib/go/src/testing/testing.go:1063 +0x64\r\ntesting.tRunner(0xc420128000, 0xc42006bdf8)\r\n\t/usr/lib/go/src/testing/testing.go:777 +0xd0\r\ntesting.runTests(0xc420112260, 0xa49460, 0x11, 0x11, 0x413b29)\r\n\t/usr/lib/go/src/testing/testing.go:1061 +0x2c4\r\ntesting.(*M).Run(0xc420126000, 0x0)\r\n\t/usr/lib/go/src/testing/testing.go:978 +0x171\r\nmain.main()\r\n\t_testmain.go:82 +0x151\r\n\r\ngoroutine 26 [chan receive]:\r\ntesting.(*T).Run(0xc420128780, 0xc420018420, 0x13, 0xc4201124c0, 0x2)\r\n\t/usr/lib/go/src/testing/testing.go:825 +0x301\r\ngithub.com/tensorflow/tensorflow/tensorflow/go.TestOutputDataTypeAndShape(0xc4201283c0)\r\n\t/home/pgaleone/projects/go/src/github.com/tensorflow/tensorflow/tensorflow/go/operation_test.go:136 +0x552\r\ntesting.tRunner(0xc4201283c0, 0x7013f0)\r\n\t/usr/lib/go/src/testing/testing.go:777 +0xd0\r\ncreated by testing.(*T).Run\r\n\t/usr/lib/go/src/testing/testing.go:824 +0x2e0\r\n\r\nrax    0x0\r\nrbx    0x6\r\nrcx    0x7f82afedd860\r\nrdx    0x0\r\nrdi    0x2\r\nrsi    0x7f82937f5880\r\nrbp    0x7f82937f5ad0\r\nrsp    0x7f82937f5880\r\nr8     0x0\r\nr9     0x7f82937f5880\r\nr10    0x8\r\nr11    0x246\r\nr12    0x7f82937f5d10\r\nr13    0x5\r\nr14    0x7f827c005190\r\nr15    0x7f82937f5d10\r\nrip    0x7f82afedd860\r\nrflags 0x246\r\ncs     0x33\r\nfs     0x0\r\ngs     0x0\r\nexit status 2\r\nFAIL\tgithub.com/tensorflow/tensorflow/tensorflow/go\t0.081s\r\n```\r\n\r\n1.6\r\n```\r\n(cv) [pgaleone@persefone go]$ git checkout r1.6\r\nSwitched to branch 'r1.6'\r\nYour branch is up to date with 'origin/r1.6'.\r\n(cv) [pgaleone@persefone go]$ go test\r\n2018-04-07 08:37:33.608147: F tensorflow/core/framework/tensor.cc:822] Unexpected type: 23\r\nSIGABRT: abort\r\nPC=0x7f884c725860 m=7 sigcode=18446744073709551610\r\n\r\ngoroutine 0 [idle]:\r\nruntime: unknown pc 0x7f884c725860\r\nstack: frame={sp:0x7f88307f7880, fp:0x0} stack=[0x7f882fff81d0,0x7f88307f7dd0)\r\n00007f88307f7780:  0000000000000000  0000006e0000005b \r\n00007f88307f7790:  0000000000000000  000000770000007c \r\n00007f88307f77a0:  000000000000001b  00007f8828000020 \r\n00007f88307f77b0:  0000000000000014  fffffffffffffef8 \r\n00007f88307f77c0:  00007f882800a19d  0000000000000003 \r\n00007f88307f77d0:  00007f88280088b0  00007f884c77347a \r\n00007f88307f77e0:  00007f8828007220  00007f8828007231 \r\n00007f88307f77f0:  000000000000000d  00007f884c7a4dc2 \r\n00007f88307f7800:  00007f884caa3350  0000000000000001 \r\n00007f88307f7810:  0000000000000000  00000000000000ac \r\n00007f88307f7820:  00007f884caa3350  00007f884c7a5e29 \r\n00007f88307f7830:  0000000000000001  ffffffff00000008 \r\n00007f88307f7840:  01000000004d2166  0000000000000011 \r\n00007f88307f7850:  0000000000000008  0000000000000008 \r\n00007f88307f7860:  00000000000006b8  00000000000006b8 \r\n00007f88307f7870:  00007f88307f7900  0000000000000000 \r\n00007f88307f7880: <0000000000000000  0000000000000000 \r\n00007f88307f7890:  0800000000000000  0000000008000000 \r\n00007f88307f78a0:  08000000ae000000  0000000011000000 \r\n00007f88307f78b0:  0000000000000802  000000000076074b \r\n00007f88307f78c0:  0000000000000003  61e47ad4235a2e00 \r\n00007f88307f78d0:  0000000000000000  00007f88307f7ae0 \r\n00007f88307f78e0:  00007f88307f7a50  00007f88307f7a70 \r\n00007f88307f78f0:  0000000000094793  00007f88307f7a20 \r\n00007f88307f7900:  fffffffe7fffffff  ffffffffffffffff \r\n00007f88307f7910:  ffffffffffffffff  ffffffffffffffff \r\n00007f88307f7920:  ffffffffffffffff  ffffffffffffffff \r\n00007f88307f7930:  ffffffffffffffff  ffffffffffffffff \r\n00007f88307f7940:  ffffffffffffffff  ffffffffffffffff \r\n00007f88307f7950:  ffffffffffffffff  ffffffffffffffff \r\n00007f88307f7960:  ffffffffffffffff  ffffffffffffffff \r\n00007f88307f7970:  ffffffffffffffff  ffffffffffffffff \r\nruntime: unknown pc 0x7f884c725860\r\nstack: frame={sp:0x7f88307f7880, fp:0x0} stack=[0x7f882fff81d0,0x7f88307f7dd0)\r\n00007f88307f7780:  0000000000000000  0000006e0000005b \r\n00007f88307f7790:  0000000000000000  000000770000007c \r\n00007f88307f77a0:  000000000000001b  00007f8828000020 \r\n00007f88307f77b0:  0000000000000014  fffffffffffffef8 \r\n00007f88307f77c0:  00007f882800a19d  0000000000000003 \r\n00007f88307f77d0:  00007f88280088b0  00007f884c77347a \r\n00007f88307f77e0:  00007f8828007220  00007f8828007231 \r\n00007f88307f77f0:  000000000000000d  00007f884c7a4dc2 \r\n00007f88307f7800:  00007f884caa3350  0000000000000001 \r\n00007f88307f7810:  0000000000000000  00000000000000ac \r\n00007f88307f7820:  00007f884caa3350  00007f884c7a5e29 \r\n00007f88307f7830:  0000000000000001  ffffffff00000008 \r\n00007f88307f7840:  01000000004d2166  0000000000000011 \r\n00007f88307f7850:  0000000000000008  0000000000000008 \r\n00007f88307f7860:  00000000000006b8  00000000000006b8 \r\n00007f88307f7870:  00007f88307f7900  0000000000000000 \r\n00007f88307f7880: <0000000000000000  0000000000000000 \r\n00007f88307f7890:  0800000000000000  0000000008000000 \r\n00007f88307f78a0:  08000000ae000000  0000000011000000 \r\n00007f88307f78b0:  0000000000000802  000000000076074b \r\n00007f88307f78c0:  0000000000000003  61e47ad4235a2e00 \r\n00007f88307f78d0:  0000000000000000  00007f88307f7ae0 \r\n00007f88307f78e0:  00007f88307f7a50  00007f88307f7a70 \r\n00007f88307f78f0:  0000000000094793  00007f88307f7a20 \r\n00007f88307f7900:  fffffffe7fffffff  ffffffffffffffff \r\n00007f88307f7910:  ffffffffffffffff  ffffffffffffffff \r\n00007f88307f7920:  ffffffffffffffff  ffffffffffffffff \r\n00007f88307f7930:  ffffffffffffffff  ffffffffffffffff \r\n00007f88307f7940:  ffffffffffffffff  ffffffffffffffff \r\n00007f88307f7950:  ffffffffffffffff  ffffffffffffffff \r\n00007f88307f7960:  ffffffffffffffff  ffffffffffffffff \r\n00007f88307f7970:  ffffffffffffffff  ffffffffffffffff \r\n\r\ngoroutine 30 [syscall]:\r\nruntime.cgocall(0x653f10, 0xc420057898, 0xc4200578a0)\r\n\t/usr/lib/go/src/runtime/cgocall.go:128 +0x64 fp=0xc420057868 sp=0xc420057830 pc=0x405824\r\ngithub.com/tensorflow/tensorflow/tensorflow/go._Cfunc_TF_SetAttrTensor(0x7f8828006320, 0x7f8828007100, 0x7f88280071f0, 0x7f88280085c0)\r\n\t_cgo_gotypes.go:1024 +0x45 fp=0xc420057898 sp=0xc420057868 pc=0x523695\r\ngithub.com/tensorflow/tensorflow/tensorflow/go.setAttr.func18(0x7f8828006320, 0x7f8828007100, 0x7f88280071f0, 0x7f88280085c0)\r\n\t/home/pgaleone/projects/go/src/github.com/tensorflow/tensorflow/tensorflow/go/graph.go:313 +0xce fp=0xc4200578d0 sp=0xc420057898 pc=0x52f98e\r\ngithub.com/tensorflow/tensorflow/tensorflow/go.setAttr(0x7f8828006320, 0xc4200a60b8, 0x6ef1cc, 0x5, 0x6b3f40, 0xc4201284e0, 0x0, 0x0)\r\n\t/home/pgaleone/projects/go/src/github.com/tensorflow/tensorflow/tensorflow/go/graph.go:313 +0x1006 fp=0xc420057aa0 sp=0xc4200578d0 pc=0x526226\r\ngithub.com/tensorflow/tensorflow/tensorflow/go.(*Graph).AddOperation(0xc4200a6080, 0x6ef023, 0x5, 0xc42001a408, 0x6, 0x0, 0x0, 0x0, 0xc420057c98, 0x0, ...)\r\n\t/home/pgaleone/projects/go/src/github.com/tensorflow/tensorflow/tensorflow/go/graph.go:216 +0x4fb fp=0xc420057c00 sp=0xc420057aa0 pc=0x52506b\r\ngithub.com/tensorflow/tensorflow/tensorflow/go.Const(0xc4200a6080, 0xc42001a408, 0x6, 0x67ee40, 0xc420128320, 0xc42001a408, 0x6, 0x7af1f0, 0x7af230)\r\n\t/home/pgaleone/projects/go/src/github.com/tensorflow/tensorflow/tensorflow/go/util_test.go:38 +0x271 fp=0xc420057e40 sp=0xc420057c00 pc=0x5201e1\r\ngithub.com/tensorflow/tensorflow/tensorflow/go.TestOutputDataTypeAndShape.func1(0xc420140780)\r\n\t/home/pgaleone/projects/go/src/github.com/tensorflow/tensorflow/tensorflow/go/operation_test.go:137 +0x111 fp=0xc420057fa8 sp=0xc420057e40 pc=0x52cff1\r\ntesting.tRunner(0xc420140780, 0xc4201284a0)\r\n\t/usr/lib/go/src/testing/testing.go:777 +0xd0 fp=0xc420057fd0 sp=0xc420057fa8 pc=0x4ce610\r\nruntime.goexit()\r\n\t/usr/lib/go/src/runtime/asm_amd64.s:2361 +0x1 fp=0xc420057fd8 sp=0xc420057fd0 pc=0x45d311\r\ncreated by testing.(*T).Run\r\n\t/usr/lib/go/src/testing/testing.go:824 +0x2e0\r\n\r\ngoroutine 1 [chan receive]:\r\ntesting.(*T).Run(0xc4201403c0, 0x6f54ea, 0x1a, 0x703348, 0x477f01)\r\n\t/usr/lib/go/src/testing/testing.go:825 +0x301\r\ntesting.runTests.func1(0xc420140000)\r\n\t/usr/lib/go/src/testing/testing.go:1063 +0x64\r\ntesting.tRunner(0xc420140000, 0xc42006bdf8)\r\n\t/usr/lib/go/src/testing/testing.go:777 +0xd0\r\ntesting.runTests(0xc420128220, 0xa4c4c0, 0x12, 0x12, 0x413ef9)\r\n\t/usr/lib/go/src/testing/testing.go:1061 +0x2c4\r\ntesting.(*M).Run(0xc42013e000, 0x0)\r\n\t/usr/lib/go/src/testing/testing.go:978 +0x171\r\nmain.main()\r\n\t_testmain.go:84 +0x151\r\n\r\ngoroutine 26 [chan receive]:\r\ntesting.(*T).Run(0xc420140780, 0xc4200d22c0, 0x13, 0xc4201284a0, 0x2)\r\n\t/usr/lib/go/src/testing/testing.go:825 +0x301\r\ngithub.com/tensorflow/tensorflow/tensorflow/go.TestOutputDataTypeAndShape(0xc4201403c0)\r\n\t/home/pgaleone/projects/go/src/github.com/tensorflow/tensorflow/tensorflow/go/operation_test.go:136 +0x552\r\ntesting.tRunner(0xc4201403c0, 0x703348)\r\n\t/usr/lib/go/src/testing/testing.go:777 +0xd0\r\ncreated by testing.(*T).Run\r\n\t/usr/lib/go/src/testing/testing.go:824 +0x2e0\r\n\r\nrax    0x0\r\nrbx    0x6\r\nrcx    0x7f884c725860\r\nrdx    0x0\r\nrdi    0x2\r\nrsi    0x7f88307f7880\r\nrbp    0x7f88307f7ad0\r\nrsp    0x7f88307f7880\r\nr8     0x0\r\nr9     0x7f88307f7880\r\nr10    0x8\r\nr11    0x246\r\nr12    0x7f88307f7d10\r\nr13    0x5\r\nr14    0x7f8828007100\r\nr15    0x7f88307f7d10\r\nrip    0x7f884c725860\r\nrflags 0x246\r\ncs     0x33\r\nfs     0x0\r\ngs     0x0\r\nexit status 2\r\nFAIL\tgithub.com/tensorflow/tensorflow/tensorflow/go\t0.082s\r\n```\r\n\r\n1.7\r\n```\r\n(cv) [pgaleone@persefone go]$ git checkout r1.7\r\nSwitched to branch 'r1.7'\r\nYour branch is up to date with 'origin/r1.7'.\r\n(cv) [pgaleone@persefone go]$ go test\r\n2018-04-07 08:38:02.846973: F tensorflow/core/framework/tensor.cc:822] Unexpected type: 23\r\nSIGABRT: abort\r\nPC=0x7f88599b1860 m=7 sigcode=18446744073709551610\r\n\r\ngoroutine 0 [idle]:\r\nruntime: unknown pc 0x7f88599b1860\r\nstack: frame={sp:0x7f88417f9880, fp:0x0} stack=[0x7f8840ffa1d0,0x7f88417f9dd0)\r\n00007f88417f9780:  0000000000000000  0000006e0000005b \r\n00007f88417f9790:  0000000000000000  000000770000007c \r\n00007f88417f97a0:  000000000000001b  00007f8838000020 \r\n00007f88417f97b0:  0000000000000014  fffffffffffffef8 \r\n00007f88417f97c0:  00007f8838009d4d  0000000000000003 \r\n00007f88417f97d0:  00007f8838008460  00007f88599ff47a \r\n00007f88417f97e0:  00007f8838006dd0  00007f8838006de1 \r\n00007f88417f97f0:  000000000000000d  00007f8859a30dc2 \r\n00007f88417f9800:  00007f8859d2f350  0000000000000001 \r\n00007f88417f9810:  0000000000000000  00000000000000ac \r\n00007f88417f9820:  00007f8859d2f350  00007f8859a31e29 \r\n00007f88417f9830:  0000000000000001  ffffffff00000008 \r\n00007f88417f9840:  01000000004d2166  0000000000000011 \r\n00007f88417f9850:  0000000000000008  0000000000000008 \r\n00007f88417f9860:  00000000000006b8  00000000000006b8 \r\n00007f88417f9870:  00007f88417f9900  0000000000000000 \r\n00007f88417f9880: <0000000000000000  0000000000000000 \r\n00007f88417f9890:  0800000000000000  0000000008000000 \r\n00007f88417f98a0:  08000000ae000000  0000000011000000 \r\n00007f88417f98b0:  0000000000000802  000000000076074b \r\n00007f88417f98c0:  0000000000000003  6b320cc32e502500 \r\n00007f88417f98d0:  0000000000000000  00007f88417f9ae0 \r\n00007f88417f98e0:  00007f88417f9a50  00007f88417f9a70 \r\n00007f88417f98f0:  00000000000cec7d  00007f88417f9a20 \r\n00007f88417f9900:  fffffffe7fffffff  ffffffffffffffff \r\n00007f88417f9910:  ffffffffffffffff  ffffffffffffffff \r\n00007f88417f9920:  ffffffffffffffff  ffffffffffffffff \r\n00007f88417f9930:  ffffffffffffffff  ffffffffffffffff \r\n00007f88417f9940:  ffffffffffffffff  ffffffffffffffff \r\n00007f88417f9950:  ffffffffffffffff  ffffffffffffffff \r\n00007f88417f9960:  ffffffffffffffff  ffffffffffffffff \r\n00007f88417f9970:  ffffffffffffffff  ffffffffffffffff \r\nruntime: unknown pc 0x7f88599b1860\r\nstack: frame={sp:0x7f88417f9880, fp:0x0} stack=[0x7f8840ffa1d0,0x7f88417f9dd0)\r\n00007f88417f9780:  0000000000000000  0000006e0000005b \r\n00007f88417f9790:  0000000000000000  000000770000007c \r\n00007f88417f97a0:  000000000000001b  00007f8838000020 \r\n00007f88417f97b0:  0000000000000014  fffffffffffffef8 \r\n00007f88417f97c0:  00007f8838009d4d  0000000000000003 \r\n00007f88417f97d0:  00007f8838008460  00007f88599ff47a \r\n00007f88417f97e0:  00007f8838006dd0  00007f8838006de1 \r\n00007f88417f97f0:  000000000000000d  00007f8859a30dc2 \r\n00007f88417f9800:  00007f8859d2f350  0000000000000001 \r\n00007f88417f9810:  0000000000000000  00000000000000ac \r\n00007f88417f9820:  00007f8859d2f350  00007f8859a31e29 \r\n00007f88417f9830:  0000000000000001  ffffffff00000008 \r\n00007f88417f9840:  01000000004d2166  0000000000000011 \r\n00007f88417f9850:  0000000000000008  0000000000000008 \r\n00007f88417f9860:  00000000000006b8  00000000000006b8 \r\n00007f88417f9870:  00007f88417f9900  0000000000000000 \r\n00007f88417f9880: <0000000000000000  0000000000000000 \r\n00007f88417f9890:  0800000000000000  0000000008000000 \r\n00007f88417f98a0:  08000000ae000000  0000000011000000 \r\n00007f88417f98b0:  0000000000000802  000000000076074b \r\n00007f88417f98c0:  0000000000000003  6b320cc32e502500 \r\n00007f88417f98d0:  0000000000000000  00007f88417f9ae0 \r\n00007f88417f98e0:  00007f88417f9a50  00007f88417f9a70 \r\n00007f88417f98f0:  00000000000cec7d  00007f88417f9a20 \r\n00007f88417f9900:  fffffffe7fffffff  ffffffffffffffff \r\n00007f88417f9910:  ffffffffffffffff  ffffffffffffffff \r\n00007f88417f9920:  ffffffffffffffff  ffffffffffffffff \r\n00007f88417f9930:  ffffffffffffffff  ffffffffffffffff \r\n00007f88417f9940:  ffffffffffffffff  ffffffffffffffff \r\n00007f88417f9950:  ffffffffffffffff  ffffffffffffffff \r\n00007f88417f9960:  ffffffffffffffff  ffffffffffffffff \r\n00007f88417f9970:  ffffffffffffffff  ffffffffffffffff \r\n\r\ngoroutine 24 [syscall]:\r\nruntime.cgocall(0x653f10, 0xc42005b898, 0xc42005b8a0)\r\n\t/usr/lib/go/src/runtime/cgocall.go:128 +0x64 fp=0xc42005b868 sp=0xc42005b830 pc=0x405824\r\ngithub.com/tensorflow/tensorflow/tensorflow/go._Cfunc_TF_SetAttrTensor(0x7f8838005ed0, 0x7f8838006cb0, 0x7f8838006da0, 0x7f8838008170)\r\n\t_cgo_gotypes.go:1024 +0x45 fp=0xc42005b898 sp=0xc42005b868 pc=0x523695\r\ngithub.com/tensorflow/tensorflow/tensorflow/go.setAttr.func18(0x7f8838005ed0, 0x7f8838006cb0, 0x7f8838006da0, 0x7f8838008170)\r\n\t/home/pgaleone/projects/go/src/github.com/tensorflow/tensorflow/tensorflow/go/graph.go:313 +0xce fp=0xc42005b8d0 sp=0xc42005b898 pc=0x52f98e\r\ngithub.com/tensorflow/tensorflow/tensorflow/go.setAttr(0x7f8838005ed0, 0xc42000e0c0, 0x6ef1cc, 0x5, 0x6b3f40, 0xc420104500, 0x0, 0x0)\r\n\t/home/pgaleone/projects/go/src/github.com/tensorflow/tensorflow/tensorflow/go/graph.go:313 +0x1006 fp=0xc42005baa0 sp=0xc42005b8d0 pc=0x526226\r\ngithub.com/tensorflow/tensorflow/tensorflow/go.(*Graph).AddOperation(0xc42000e080, 0x6ef023, 0x5, 0xc42001a808, 0x6, 0x0, 0x0, 0x0, 0xc42005bc98, 0x0, ...)\r\n\t/home/pgaleone/projects/go/src/github.com/tensorflow/tensorflow/tensorflow/go/graph.go:216 +0x4fb fp=0xc42005bc00 sp=0xc42005baa0 pc=0x52506b\r\ngithub.com/tensorflow/tensorflow/tensorflow/go.Const(0xc42000e080, 0xc42001a808, 0x6, 0x67ee40, 0xc420104340, 0xc42001a808, 0x6, 0x7af1f0, 0x7af230)\r\n\t/home/pgaleone/projects/go/src/github.com/tensorflow/tensorflow/tensorflow/go/util_test.go:38 +0x271 fp=0xc42005be40 sp=0xc42005bc00 pc=0x5201e1\r\ngithub.com/tensorflow/tensorflow/tensorflow/go.TestOutputDataTypeAndShape.func1(0xc42011a780)\r\n\t/home/pgaleone/projects/go/src/github.com/tensorflow/tensorflow/tensorflow/go/operation_test.go:137 +0x111 fp=0xc42005bfa8 sp=0xc42005be40 pc=0x52cff1\r\ntesting.tRunner(0xc42011a780, 0xc4201044c0)\r\n\t/usr/lib/go/src/testing/testing.go:777 +0xd0 fp=0xc42005bfd0 sp=0xc42005bfa8 pc=0x4ce610\r\nruntime.goexit()\r\n\t/usr/lib/go/src/runtime/asm_amd64.s:2361 +0x1 fp=0xc42005bfd8 sp=0xc42005bfd0 pc=0x45d311\r\ncreated by testing.(*T).Run\r\n\t/usr/lib/go/src/testing/testing.go:824 +0x2e0\r\n\r\ngoroutine 1 [chan receive]:\r\ntesting.(*T).Run(0xc42011a3c0, 0x6f54ea, 0x1a, 0x703348, 0x477f01)\r\n\t/usr/lib/go/src/testing/testing.go:825 +0x301\r\ntesting.runTests.func1(0xc42011a000)\r\n\t/usr/lib/go/src/testing/testing.go:1063 +0x64\r\ntesting.tRunner(0xc42011a000, 0xc42006bdf8)\r\n\t/usr/lib/go/src/testing/testing.go:777 +0xd0\r\ntesting.runTests(0xc420104260, 0xa4c4c0, 0x12, 0x12, 0x413ef9)\r\n\t/usr/lib/go/src/testing/testing.go:1061 +0x2c4\r\ntesting.(*M).Run(0xc420118000, 0x0)\r\n\t/usr/lib/go/src/testing/testing.go:978 +0x171\r\nmain.main()\r\n\t_testmain.go:84 +0x151\r\n\r\ngoroutine 20 [chan receive]:\r\ntesting.(*T).Run(0xc42011a780, 0xc420018420, 0x13, 0xc4201044c0, 0x2)\r\n\t/usr/lib/go/src/testing/testing.go:825 +0x301\r\ngithub.com/tensorflow/tensorflow/tensorflow/go.TestOutputDataTypeAndShape(0xc42011a3c0)\r\n\t/home/pgaleone/projects/go/src/github.com/tensorflow/tensorflow/tensorflow/go/operation_test.go:136 +0x552\r\ntesting.tRunner(0xc42011a3c0, 0x703348)\r\n\t/usr/lib/go/src/testing/testing.go:777 +0xd0\r\ncreated by testing.(*T).Run\r\n\t/usr/lib/go/src/testing/testing.go:824 +0x2e0\r\n\r\nrax    0x0\r\nrbx    0x6\r\nrcx    0x7f88599b1860\r\nrdx    0x0\r\nrdi    0x2\r\nrsi    0x7f88417f9880\r\nrbp    0x7f88417f9ad0\r\nrsp    0x7f88417f9880\r\nr8     0x0\r\nr9     0x7f88417f9880\r\nr10    0x8\r\nr11    0x246\r\nr12    0x7f88417f9d10\r\nr13    0x5\r\nr14    0x7f8838006cb0\r\nr15    0x7f88417f9d10\r\nrip    0x7f88599b1860\r\nrflags 0x246\r\ncs     0x33\r\nfs     0x0\r\ngs     0x0\r\nexit status 2\r\nFAIL\tgithub.com/tensorflow/tensorflow/tensorflow/go\t0.073s\r\n```", "That sounds like the underlying C library is an older version. Are you using the corresponding version of the C library as per Step 2 in https://www.tensorflow.org/install/install_go#installation ?"]}, {"number": 14545, "title": "Nan in summary histogram error for training images if faster_rcnn_resnet101_coco_11_06_2017 model is used.", "body": "Please go to Stack Overflow for help and support:\r\n\r\nhttps://stackoverflow.com/questions/tagged/tensorflow\r\n\r\nIf you open a GitHub issue, here is our policy:\r\n\r\n1. It must be a bug or a feature request.\r\n2. The form below must be filled out.\r\n3. It shouldn't be a TensorBoard issue. Those go [here](https://github.com/tensorflow/tensorboard/issues).\r\n\r\n**Here's why we have that policy**: TensorFlow developers respond to issues. We want to focus on work that benefits the whole community, e.g., fixing bugs and adding features. Support only helps individuals. GitHub also notifies thousands of people when issues are filed. We want them to see you communicating an interesting problem, rather than being redirected to Stack Overflow.\r\n\r\n------------------------\r\n\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Ubuntu 16.04\r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version (use command below)**: 1.3.0\r\n- **Python version**: 3.7\r\n- **Bazel version (if compiling from source)**:\r\n- **GCC/Compiler version (if compiling from source)**:\r\n- **CUDA/cuDNN version**: cudnn-8.0\r\n- **GPU model and memory**:  GeForce GTX 1060 6GB \r\n- **Exact command to reproduce**: python train.py --logtostderr --train_dir=training/ (path to training directory) --pipeline_config_path=training/faster_rcnn_resnet101.config (path to .config file)\r\n\r\nYou can collect some of this information using our environment capture script:\r\n\r\nhttps://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh\r\n\r\nYou can obtain the TensorFlow version with\r\n\r\npython -c \"import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)\"\r\n\r\n### Describe the problem\r\nDescribe the problem clearly here. Be sure to convey here why it's a bug in TensorFlow or a feature request.\r\n\r\nInvalidArgumentError (see above for traceback): Nan in summary histogram for: FirstStageFeatureExtractor/resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/weights_1\r\n\t [[Node: FirstStageFeatureExtractor/resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/weights_1 = HistogramSummary[T=DT_FLOAT, _device=\"/job:localhost/replica:0/task:0/cpu:0\"](FirstStageFeatureExtractor/resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/weights_1/tag, FirstStageFeatureExtractor/resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/weights/read)]]\r\n\t [[Node: FirstStageFeatureExtractor/resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/BatchNorm/gamma/read/_777 = _Recv client_terminated=false, recv_device=\"/job:localhost/replica:0/task:0/gpu:0\", send_device=\"/job:localhost/replica:0/task:0/cpu:0\", send_device_incarnation=1, tensor_name=\"edge_2768_FirstStageFeatureExtractor/resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/BatchNorm/gamma/read\", tensor_type=DT_FLOAT, _device=\"/job:localhost/replica:0/task:0/gpu:0\" ()]]\r\n\r\n\r\n\r\n### Source code / logs\r\nInclude any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached. Try to provide a reproducible test case that is the bare minimum necessary to generate the problem.\r\n", "comments": ["@rashikcs is this not a TensorBoard issue, which should be filed in a different comment, per the link in the form? \r\n\r\nI'll close for now; please feel free to reopen if it's not actually a TensorBoard issue.", "I am a newbie in this sector, so thank you for the heads up @cy89. \r\nHere is the openend issue link on tensorboard : \r\n\r\nhttps://github.com/tensorflow/tensorboard/issues/744\r\n"]}]