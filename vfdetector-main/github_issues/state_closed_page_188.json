[{"number": 49097, "title": "[CherryPick 2.5] Fix crash with tf.transpose when a is complex and conjugate is True", "body": null, "comments": []}, {"number": 49096, "title": "Fix FPE issue with `tf.raw_ops.DenseCountSparseOutput`.", "body": "PiperOrigin-RevId: 370946862\nChange-Id: I3752584ad04aaecb327ff6793a9640ac56acfe7a", "comments": []}, {"number": 49095, "title": "Fix `tf.io.decode_raw` bugs and update documentation.", "body": "Fixes cases where specifying `fixed_length` resulted in data loss and even segfault and corruption of the Python interpreter. The fix is subtle but needed due to pointer arithmetic rules.\n\nMakes sure that `fixed_length` does not change the output when present but not needed.\n\nEliminates needless copy and cast in the main codepath.\n\nPiperOrigin-RevId: 371322725\nChange-Id: I514ef67a2961c86422f69d05122d31615e87896c", "comments": []}, {"number": 49094, "title": "Remove TOSA identityn operator usage in legalizations", "body": "@rsuderman and @stellaraccident : \r\nRemoves all usage of the TOSA identityn operator from TF/TFLite legalizations. Will subsequently remove op from MLIR dialect. \r\n\r\n", "comments": []}, {"number": 49093, "title": "Prevent memory overflow in ParseAttrValue from nested tensors.", "body": "PiperOrigin-RevId: 370108442\nChange-Id: I84d64a5e8895a6aeffbf4749841b4c54d51b5889", "comments": []}, {"number": 49092, "title": "Prevent array OOB read/write", "body": "PiperOrigin-RevId: 371026165\nChange-Id: I26ac6372c87246e03c7eb8c94e84c84d86054b36", "comments": []}, {"number": 49091, "title": "Prevent array write out-of-bounds.", "body": "If user passes an invalid axis, then we copy one too many dimensions to the output in the loop below these checks. Even if we didn't do that, there will be further issues with an invalid axis, so we check for that right now.\n\nPiperOrigin-RevId: 371023299\nChange-Id: I9eca37ffc2b29e8e48710f500701270ef0790224", "comments": []}, {"number": 49090, "title": "Fix a dangerous integer overflow and a malloc of negative size.", "body": "PiperOrigin-RevId: 371254154\nChange-Id: I250a98a3df26328770167025670235a963a72da0", "comments": []}, {"number": 49089, "title": "Fix integer overflow in TFLite concat", "body": "PiperOrigin-RevId: 371013841\nChange-Id: I6a4782ce7ca753e23ff31e7fb6aeb7f9d412cd29", "comments": []}, {"number": 49088, "title": "Prevent a division by 0", "body": "PiperOrigin-RevId: 371007407\r\nChange-Id: Iecf2718de48d6bf5a69b02a9df9deda8ec1b19d3", "comments": []}, {"number": 49087, "title": "Prevent divisions by 0", "body": "PiperOrigin-RevId: 371003153\nChange-Id: Idef56c95b9fcaeb97f87e18c7a674dbeb5173204", "comments": []}, {"number": 49086, "title": "Prevent division by 0 in OneHot implementation", "body": "If input indices is degenerate, the implementation would do a divide by zero. See https://github.com/tensorflow/tensorflow/blob/745d57df6d5e9bc568666a2a48ed8dd629c27241/tensorflow/lite/kernels/one_hot.cc#L68-L72\n\nPiperOrigin-RevId: 370966870\nChange-Id: Ie018337811c8016b5a1d3a277d00d5f2e19a2058", "comments": []}, {"number": 49085, "title": "Prevent division by 0", "body": "PiperOrigin-RevId: 370998952\nChange-Id: I6b1d49079624ee1447d2d9b53a8976fb356cc8f5", "comments": []}, {"number": 49084, "title": "Prevent division by 0", "body": "PiperOrigin-RevId: 370995582\nChange-Id: I670ffaf52d1ff8823ec31ea5f438f9125b402223", "comments": []}, {"number": 49083, "title": "Prevent division by 0", "body": "PiperOrigin-RevId: 370984990\nChange-Id: Ib324955bbeb1cbd97c82fd5d61a00a2697c9a2de", "comments": []}, {"number": 49082, "title": "Prevent division by 0", "body": "PiperOrigin-RevId: 370979352\nChange-Id: Ic79191c316d986fc6072ecaebfec9d5f2b924d00", "comments": []}, {"number": 49081, "title": "Prevent division by 0", "body": "PiperOrigin-RevId: 370966645\nChange-Id: I831bfd96c7eb77b02d7ebb744335f59f6e5728cb", "comments": []}, {"number": 49080, "title": "Prevent division by 0.", "body": "PiperOrigin-RevId: 370962554\nChange-Id: I0b9b62f4d8e1046dd88f9433f8dfeaf61a901680", "comments": []}, {"number": 49079, "title": "[Cherrypick:2.5]Prevent division by 0 in TFLite", "body": null, "comments": ["All (the pull request submitter and all commit authors) CLAs are signed, **but** one or more commits were authored or co-authored by someone other than the pull request submitter.\n\nWe need to confirm that all authors are ok with their commits being contributed to this project.  Please have them confirm that by leaving a comment that contains only `@googlebot I consent.` in this pull request.\n\n*Note to project maintainer:* There may be cases where the author cannot leave a comment, or the comment is not properly detected as consent.  In those cases, you can manually confirm consent of the commit author(s), and set the `cla` label to `yes` (if enabled on your project).\n\n\u2139\ufe0f **Googlers: [Go here](https://goto.google.com/prinfo/https%3A%2F%2Fgithub.com%2Ftensorflow%2Ftensorflow%2Fpull%2F49079) for more info**.\n\n<!-- need_author_consent -->"]}, {"number": 49078, "title": "[CherryPick2.5]TFLite infinite loop and segfault", "body": null, "comments": []}, {"number": 49077, "title": "Prevent a null pointer dereference in TFLite.", "body": "PiperOrigin-RevId: 370800353\nChange-Id: Ic9c9712ce5c6e384c954dcd640a5bd9ff05c9a05", "comments": []}, {"number": 49076, "title": "Prevent a null pointer exception in TFLite", "body": "PiperOrigin-RevId: 370800206\nChange-Id: Idd437ebce4ff224120d8eefc1c14c062173b71d6", "comments": []}, {"number": 49075, "title": "Fix another division by 0 in TFLite", "body": "PiperOrigin-RevId: 370800181\nChange-Id: I924809166a6131f5075e6d45c455106538d755f9", "comments": []}, {"number": 49074, "title": "Handle one more division by 0 in TFLite.", "body": "PiperOrigin-RevId: 370800140\nChange-Id: I9ab42e5aaccf02f226d1282611490a54cf7d273e", "comments": []}, {"number": 49073, "title": "Prevent one more div by 0 in TFLite", "body": "PiperOrigin-RevId: 370800114\nChange-Id: I6b956aeb8c458cc6f514408d2e89ffacfe249e57", "comments": []}, {"number": 49072, "title": "Prevent another div by 0 in optimized pooling implementations TFLite", "body": "PiperOrigin-RevId: 370800091\nChange-Id: I2119352f57fb5ca4f2051e0e2d749403304a979b", "comments": []}, {"number": 49071, "title": "Fix division by zero in TFLite padding.", "body": "PiperOrigin-RevId: 370777494\nChange-Id: Ic1331e4a1603b9e4c8aa183012a6c8237410aa0f", "comments": []}, {"number": 49070, "title": "Add missing valuidation to FusedBatchNorm.", "body": "PiperOrigin-RevId: 372460336\nChange-Id: Ic8c4e4de67c58a741bd87f2e182bed07247d1126", "comments": []}, {"number": 49069, "title": "Prevent overflow in sparse op", "body": "PiperOrigin-RevId: 372442006\nChange-Id: I60fe31cd7e56fb3501e97c63500caf902ddeee96", "comments": []}, {"number": 49068, "title": "Fix heap OOB read in dequantize op.", "body": "Also fixes SEGV in same op\n\nPiperOrigin-RevId: 372437896\nChange-Id: I135e94d360c2a1ce374c10f7e0fed1af603dbc02", "comments": []}]