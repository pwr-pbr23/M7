[{"number": 52746, "title": " Address QuantizeAndDequantizeV* heap oob. Added additional checks fo\u2026", "body": "\u2026r the 'axis' attribute.\r\n\r\nPiperOrigin-RevId: 402446942\r\nChange-Id: Id2f6b82e4e740d0550329be02621c46466b5a5b9", "comments": []}, {"number": 52745, "title": " Address QuantizeAndDequantizeV* heap oob. Added additional checks fo\u2026", "body": "\u2026r the 'axis' attribute.\r\n\r\nPiperOrigin-RevId: 402446942\r\nChange-Id: Id2f6b82e4e740d0550329be02621c46466b5a5b9", "comments": []}, {"number": 52744, "title": " Address QuantizeAndDequantizeV* heap oob. Added additional checks fo\u2026", "body": "\u2026r the 'axis' attribute.\r\n\r\nPiperOrigin-RevId: 402446942\r\nChange-Id: Id2f6b82e4e740d0550329be02621c46466b5a5b9", "comments": []}, {"number": 52743, "title": " Address QuantizeAndDequantizeV* heap oob. Added additional checks fo\u2026", "body": "\u2026r the 'axis' attribute.\r\n\r\nPiperOrigin-RevId: 402446942\r\nChange-Id: Id2f6b82e4e740d0550329be02621c46466b5a5b9", "comments": []}, {"number": 52742, "title": "Fix undefined behavior in CollectiveReduceV2 and others", "body": "We should not call done after it's moved.\r\n\r\nPiperOrigin-RevId: 400838185\r\nChange-Id: Ifc979740054b8f8c6f4d50acc89472fe60c4fdb1", "comments": []}, {"number": 52741, "title": "Prevent OOB access in QuantizeV2 shape inference", "body": "PiperOrigin-RevId: 400309614\r\nChange-Id: I31412c71b05b4f21b677f7fa715a61499cbee39d", "comments": []}, {"number": 52740, "title": "Prevent OOB access in QuantizeV2 shape inference", "body": "PiperOrigin-RevId: 400309614\r\nChange-Id: I31412c71b05b4f21b677f7fa715a61499cbee39d", "comments": []}, {"number": 52739, "title": "Fix null pointer exception in shape inference function when tf.ragged\u2026", "body": "\u2026.cross() is called with invalid inputs.\r\n\r\nPiperOrigin-RevId: 400045848\r\nChange-Id: Ia65501583b85cf1ec14a252d83fbdd716817a516", "comments": []}, {"number": 52738, "title": "Fix null pointer exception in shape inference function when tf.ragged\u2026", "body": "\u2026.cross() is called with invalid inputs.\r\n\r\nPiperOrigin-RevId: 400045848\r\nChange-Id: Ia65501583b85cf1ec14a252d83fbdd716817a516", "comments": []}, {"number": 52737, "title": "tensorflowtest", "body": "tensorflow practice", "comments": ["\nThanks for your pull request. It looks like this may be your first contribution to a Google open source project (if not, look below for help). Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).\n\n:memo: **Please visit <https://cla.developers.google.com/> to sign.**\n\nOnce you've signed (or fixed any issues), please reply here with `@googlebot I signed it!` and we'll verify it.\n\n----\n\n#### What to do if you already signed the CLA\n\n##### Individual signers\n\n*   It's possible we don't have your GitHub username or you're using a different email address on your commit. Check [your existing CLA data](https://cla.developers.google.com/clas) and verify that your [email is set on your git commits](https://help.github.com/articles/setting-your-email-in-git/).\n\n##### Corporate signers\n\n*   Your company has a Point of Contact who decides which employees are authorized to participate. Ask your POC to be added to the group of authorized contributors. If you don't know who your Point of Contact is, direct the Google project maintainer to [go/cla#troubleshoot](http://go/cla#troubleshoot) ([Public version](https://opensource.google/docs/cla/#troubleshoot)).\n*   The email used to register you as an authorized contributor must be the email used for the Git commit. Check [your existing CLA data](https://cla.developers.google.com/clas) and verify that your [email is set on your git commits](https://help.github.com/articles/setting-your-email-in-git/).\n*   The email used to register you as an authorized contributor must also be [attached to your GitHub account](https://github.com/settings/emails).\n\t\t\n\n\u2139\ufe0f **Googlers: [Go here](https://goto.google.com/prinfo/https%3A%2F%2Fgithub.com%2Ftensorflow%2Ftensorflow%2Fpull%2F52737) for more info**.\n\n<!-- need_sender_cla -->", "Please don't spam"]}, {"number": 52736, "title": "Ensuring that the input to DeserializeSparse is not a scalar.", "body": "PiperOrigin-RevId: 400554784\r\nChange-Id: Ib658701040d4f707f20b8706e251d5fff46b2671", "comments": []}, {"number": 52735, "title": "Ensuring that the input to DeserializeSparse is not a scalar.", "body": "PiperOrigin-RevId: 400554784\r\nChange-Id: Ib658701040d4f707f20b8706e251d5fff46b2671", "comments": []}, {"number": 52734, "title": "Ensuring that the input to DeserializeSparse is not a scalar.", "body": "PiperOrigin-RevId: 400554784\r\nChange-Id: Ib658701040d4f707f20b8706e251d5fff46b2671", "comments": []}, {"number": 52733, "title": "Ensuring that the input to DeserializeSparse is not a scalar.", "body": "PiperOrigin-RevId: 400554784\r\nChange-Id: Ib658701040d4f707f20b8706e251d5fff46b2671", "comments": []}, {"number": 52732, "title": "Fix the deadlock issue of recursive tf.function.", "body": "Replace threading.Lock with threading.RLock to allow recursive tf.function.\r\n\r\nPiperOrigin-RevId: 401282729\r\nChange-Id: I3d10416f2eb2c15e2055bb4f4afee3d62bd6c428", "comments": []}, {"number": 52731, "title": "Fix the deadlock issue of recursive tf.function.", "body": "Replace threading.Lock with threading.RLock to allow recursive tf.function.\r\n\r\nPiperOrigin-RevId: 401282729\r\nChange-Id: I3d10416f2eb2c15e2055bb4f4afee3d62bd6c428", "comments": []}, {"number": 52730, "title": "Fix the deadlock issue of recursive tf.function.", "body": "Replace threading.Lock with threading.RLock to allow recursive tf.function.\r\n\r\nPiperOrigin-RevId: 401282729\r\nChange-Id: I3d10416f2eb2c15e2055bb4f4afee3d62bd6c428", "comments": []}, {"number": 52729, "title": "Fix the deadlock issue of recursive tf.function.", "body": "Replace threading.Lock with threading.RLock to allow recursive tf.function.\r\n\r\nPiperOrigin-RevId: 401282729\r\nChange-Id: I3d10416f2eb2c15e2055bb4f4afee3d62bd6c428", "comments": []}, {"number": 52728, "title": "Make Transpose's shape inference function validate that negative `per\u2026", "body": "\u2026m` values are within the tensor's rank.\r\n\r\nPiperOrigin-RevId: 403252853\r\nChange-Id: Ia6b31b45b237312668bb31c2c3b3c7bbce2d2610", "comments": ["#52830"]}, {"number": 52727, "title": "Make Transpose's shape inference function validate that negative `per\u2026", "body": "\u2026m` values are within the tensor's rank.\r\n\r\nPiperOrigin-RevId: 403252853\r\nChange-Id: Ia6b31b45b237312668bb31c2c3b3c7bbce2d2610", "comments": ["#52829"]}, {"number": 52726, "title": "Tensorflow C api is no longer supported on mac OSX High Sierra (Sierra too)", "body": "**System information**\r\n- OS Platform and Distribution (e.g., Linux Ubuntu 16.04): mac OSX High Sierra\r\n- TensorFlow installed from (source or binary): Binary\r\n- TensorFlow version: 2.6 -> 2.8\r\n- Python version: None\r\n- Installed using virtualenv? pip? conda?: None \r\n- Bazel version (if compiling from source): None\r\n- GCC/Compiler version (if compiling from source): None\r\n- CUDA/cuDNN version: None\r\n- GPU model and memory:\r\n\r\n![Capture d\u2019e\u0301cran 2021-10-27 a\u0300 19 50 12](https://user-images.githubusercontent.com/8608052/139119271-a594bd58-8cd7-4c2d-b214-2e04acf433e2.png)\r\n\r\n**Describe the problem**\r\nUsing the tensorflow C api, a compatibility issue appeared on High Sierra (Maybe Sierra too)\r\n\r\n**Provide the exact sequence of commands / steps that you executed before running into the problem**\r\nCompiling a program works well but at runtime : dyld: Symbol not found: ____chkstk_darwin (which was built for Mac OS X 10.15)\r\n\r\n**Any other info / logs**\r\nTo fix the problem, just recompile tensorflow api with the option in bazel : --macos_minimum_os=10.13 (high sierra)\r\n", "comments": ["Did you try and follow the steps mentioned in the link here https://www.tensorflow.org/install/lang_c#macos", "> Did you try and follow the steps mentioned in the link here https://www.tensorflow.org/install/lang_c#macos\r\n\r\nHello ! \r\nYes of course, same problem.", "Could you please raise this issue in the dedicated Apple developer forum https://developer.apple.com/forums/", "Are you satisfied with the resolution of your issue?\n<a href=\"https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&entry.2137816233=https://github.com/tensorflow/tensorflow/issues/52726\">Yes</a>\n<a href=\"https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&entry.2137816233=https://github.com/tensorflow/tensorflow/issues/52726\">No</a>\n"]}, {"number": 52725, "title": "Make Transpose's shape inference function validate that negative `per\u2026", "body": "\u2026m` values are within the tensor's rank.\r\n\r\nPiperOrigin-RevId: 403252853\r\nChange-Id: Ia6b31b45b237312668bb31c2c3b3c7bbce2d2610", "comments": ["#52828"]}, {"number": 52724, "title": "Make Transpose's shape inference function validate that negative `per\u2026", "body": "\u2026m` values are within the tensor's rank.\r\n\r\nPiperOrigin-RevId: 403252853\r\nChange-Id: Ia6b31b45b237312668bb31c2c3b3c7bbce2d2610", "comments": []}, {"number": 52723, "title": "Fix heap out of bounds error in tf.raw_ops.SparseCountSparseOutput sh\u2026", "body": "\u2026ape inference when it is called with invalid inputs, and add a test for it.\r\n\r\nPiperOrigin-RevId: 405766415\r\nChange-Id: I77d244ef35f351ef7b6f821efd959cac2c66db24", "comments": []}, {"number": 52722, "title": "Fix heap out of bounds error in tf.raw_ops.SparseCountSparseOutput sh\u2026", "body": "\u2026ape inference when it is called with invalid inputs, and add a test for it.\r\n\r\nPiperOrigin-RevId: 405766415\r\nChange-Id: I77d244ef35f351ef7b6f821efd959cac2c66db24", "comments": []}, {"number": 52721, "title": "Fix heap out of bounds error in tf.raw_ops.SparseCountSparseOutput sh\u2026", "body": "\u2026ape inference when it is called with invalid inputs, and add a test for it.\r\n\r\nPiperOrigin-RevId: 405766415\r\nChange-Id: I77d244ef35f351ef7b6f821efd959cac2c66db24", "comments": []}, {"number": 52720, "title": "Fix heap out of bounds error in tf.raw_ops.SparseCountSparseOutput sh\u2026", "body": "\u2026ape inference when it is called with invalid inputs, and add a test for it.\r\n\r\nPiperOrigin-RevId: 405766415\r\nChange-Id: I77d244ef35f351ef7b6f821efd959cac2c66db24", "comments": []}, {"number": 52719, "title": "Validate that matrix dimension sizes in SparseMatMul are positive.", "body": "PiperOrigin-RevId: 401149683\r\nChange-Id: Ib33eafc561a39c8741ece80b2edce6d4aae9a57d", "comments": []}, {"number": 52718, "title": "Validate that matrix dimension sizes in SparseMatMul are positive.", "body": "PiperOrigin-RevId: 401149683\r\nChange-Id: Ib33eafc561a39c8741ece80b2edce6d4aae9a57d", "comments": []}, {"number": 52717, "title": "Validate that matrix dimension sizes in SparseMatMul are positive.", "body": "PiperOrigin-RevId: 401149683\r\nChange-Id: Ib33eafc561a39c8741ece80b2edce6d4aae9a57d", "comments": []}]