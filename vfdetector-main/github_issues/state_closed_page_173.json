[{"number": 49583, "title": "Fix a check fail", "body": "PiperOrigin-RevId: 372011072\nChange-Id: I1062cfaed0aa16884e9a16312483794d188db76f", "comments": []}, {"number": 49582, "title": "Fix a check fail", "body": "PiperOrigin-RevId: 372011072\nChange-Id: I1062cfaed0aa16884e9a16312483794d188db76f", "comments": []}, {"number": 49581, "title": "Fix a check fail", "body": "PiperOrigin-RevId: 372011072\nChange-Id: I1062cfaed0aa16884e9a16312483794d188db76f", "comments": []}, {"number": 49580, "title": "Fix a check fail", "body": "PiperOrigin-RevId: 372011072\nChange-Id: I1062cfaed0aa16884e9a16312483794d188db76f", "comments": []}, {"number": 49579, "title": "unable to install", "body": "<em>Please make sure that this is a build/installation issue. As per our [GitHub Policy](https://github.com/tensorflow/tensorflow/blob/master/ISSUES.md), we only address code/doc bugs, performance issues, feature requests and build/installation issues on GitHub. tag:build_template</em>\r\n\r\n**System information**\r\n- OS Platform and Distribution (e.g., Linux Ubuntu 16.04):\r\n- Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device:\r\n- TensorFlow installed from (source or binary):\r\n- TensorFlow version:\r\n- Python version:\r\n- Installed using virtualenv? pip? conda?:\r\n- Bazel version (if compiling from source):\r\n- GCC/Compiler version (if compiling from source):\r\n- CUDA/cuDNN version:\r\n- GPU model and memory:\r\n\r\n\r\n\r\n**Describe the problem**\r\n\r\n**Provide the exact sequence of commands / steps that you executed before running into the problem**\r\n\r\n\r\n**Any other info / logs**\r\nInclude any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached.\r\n", "comments": []}, {"number": 49578, "title": "Fix another Eigen missing validation", "body": "PiperOrigin-RevId: 371833155\nChange-Id: I5a23d451132cb1624ad916ef46ea01d0e88ec82c", "comments": []}, {"number": 49577, "title": "Fix another Eigen missing validation", "body": "PiperOrigin-RevId: 371833155\nChange-Id: I5a23d451132cb1624ad916ef46ea01d0e88ec82c", "comments": []}, {"number": 49576, "title": "Fix heap-buffer-overflow issue with `tf.raw_ops.RaggedTensorToTensor`.", "body": "PiperOrigin-RevId: 371986929\nChange-Id: I79ab962a22c5867f36f7f45b780a1ac881b1dbdd", "comments": []}, {"number": 49575, "title": "Fix heap-buffer-overflow issue with `tf.raw_ops.RaggedTensorToTensor`.", "body": "PiperOrigin-RevId: 371986929\nChange-Id: I79ab962a22c5867f36f7f45b780a1ac881b1dbdd", "comments": []}, {"number": 49574, "title": "Fix heap-buffer-overflow issue with `tf.raw_ops.RaggedTensorToTensor`.", "body": "PiperOrigin-RevId: 371986929\nChange-Id: I79ab962a22c5867f36f7f45b780a1ac881b1dbdd", "comments": []}, {"number": 49573, "title": "Fix heap-buffer-overflow issue with `tf.raw_ops.RaggedTensorToTensor`.", "body": "PiperOrigin-RevId: 371986929\nChange-Id: I79ab962a22c5867f36f7f45b780a1ac881b1dbdd", "comments": []}, {"number": 49572, "title": "Fix heap-buffer-overflow issue with `tf.raw_ops.SparseSplit`.", "body": "PiperOrigin-RevId: 371242872\nChange-Id: I482bb3d12602c7c3cc9446f97fb9f584bb98e9a4", "comments": []}, {"number": 49571, "title": "Fix heap-buffer-overflow issue with `tf.raw_ops.SparseSplit`.", "body": "PiperOrigin-RevId: 371242872\nChange-Id: I482bb3d12602c7c3cc9446f97fb9f584bb98e9a4", "comments": []}, {"number": 49570, "title": "Fix heap-buffer-overflow issue with `tf.raw_ops.SparseSplit`.", "body": "PiperOrigin-RevId: 371242872\nChange-Id: I482bb3d12602c7c3cc9446f97fb9f584bb98e9a4", "comments": []}, {"number": 49569, "title": "Fix heap-buffer-overflow issue with `tf.raw_ops.SparseSplit`.", "body": "PiperOrigin-RevId: 371242872\nChange-Id: I482bb3d12602c7c3cc9446f97fb9f584bb98e9a4", "comments": []}, {"number": 49568, "title": "Fix heap buffer overflow in tf.raw_ops.UnicodeEncode.", "body": "PiperOrigin-RevId: 371717714\nChange-Id: If33443b28f158e58078f1268f6b92f2728d219e0", "comments": []}, {"number": 49567, "title": "Fix heap buffer overflow in tf.raw_ops.UnicodeEncode.", "body": "PiperOrigin-RevId: 371717714\nChange-Id: If33443b28f158e58078f1268f6b92f2728d219e0", "comments": []}, {"number": 49566, "title": "Fix heap buffer overflow in tf.raw_ops.UnicodeEncode.", "body": "PiperOrigin-RevId: 371717714\nChange-Id: If33443b28f158e58078f1268f6b92f2728d219e0", "comments": []}, {"number": 49565, "title": "Fix heap buffer overflow in tf.raw_ops.UnicodeEncode.", "body": "PiperOrigin-RevId: 371717714\nChange-Id: If33443b28f158e58078f1268f6b92f2728d219e0", "comments": []}, {"number": 49564, "title": "Fix the CHECK failure in tf.raw_ops.QuantizeAndDequantizeV2.", "body": null, "comments": []}, {"number": 49563, "title": "Fix the CHECK failure in tf.raw_ops.QuantizeAndDequantizeV2.", "body": null, "comments": []}, {"number": 49562, "title": "added Returns and Raises for Reshape class", "body": "Updated `Reshape` class with `Returns` and `Raises` \r\n[Here](https://colab.research.google.com/gist/jvishnuvardhan/c6d059fd1b0a26c83d809d2bef500f52/untitled989.ipynb) is a gist to show the `Value_error`.", "comments": ["@jvishnuvardhan  Can you please check @mihaimaruseac's comments and keep us posted ? Thanks!", "@jvishnuvardhan  Any update on this PR? Please. Thanks!"]}, {"number": 49561, "title": "Fix the CHECK failure in tf.raw_ops.QuantizeAndDequantizeV2.", "body": null, "comments": []}, {"number": 49560, "title": "Fix the CHECK failure in tf.raw_ops.QuantizeAndDequantizeV2.", "body": "PiperOrigin-RevId: 371361603\nChange-Id: Ia70e34d41adaadddf928e95e5e5c5c97d5bc60d0", "comments": []}, {"number": 49559, "title": "Fix heap-buffer-overflow issue with `tf.raw_ops.SparseSplit`.", "body": "PiperOrigin-RevId: 371242872\nChange-Id: I482bb3d12602c7c3cc9446f97fb9f584bb98e9a4", "comments": []}, {"number": 49558, "title": "Fix heap-buffer-overflow issue with `tf.raw_ops.SparseSplit`.", "body": "PiperOrigin-RevId: 371242872\nChange-Id: I482bb3d12602c7c3cc9446f97fb9f584bb98e9a4", "comments": []}, {"number": 49557, "title": "Fix heap-buffer-overflow issue with `tf.raw_ops.SparseSplit`.", "body": "PiperOrigin-RevId: 371242872\nChange-Id: I482bb3d12602c7c3cc9446f97fb9f584bb98e9a4", "comments": []}, {"number": 49556, "title": "Fix heap-buffer-overflow issue with `tf.raw_ops.SparseSplit`.", "body": "PiperOrigin-RevId: 371242872\nChange-Id: I482bb3d12602c7c3cc9446f97fb9f584bb98e9a4", "comments": []}, {"number": 49555, "title": "Make a TensorFlow official conda channel", "body": "<em>Please make sure that this is a feature request. As per our [GitHub Policy](https://github.com/tensorflow/tensorflow/blob/master/ISSUES.md), we only address code/doc bugs, performance issues, feature requests and build/installation issues on GitHub. tag:feature_template</em>\r\n\r\n\r\n**System information**\r\n- TensorFlow version (you are using): 2.3\r\n- Are you willing to contribute it (Yes/No): Yes\r\n\r\n\r\n\r\n**Describe the feature and the current behavior/state.**\r\nThe feature will be to release TensorFlow and related packages like TensorFlow-Hub, TensorFlow-Datasets, Tensorflow-Extended, etc. through an official conda channel, in a similar way to Pytorch does currently.\r\n\r\n**Will this change the current api? How?**\r\nI don't believe there will be any significant changes to the API in regards to this\r\n\r\n**Who will benefit with this feature?**\r\nAll Anaconda, Miniconda and similar users will benefit from this, it does facilitate the installation process a lot and to have all TensorFlow related packages in a centralized environment (if I'm not mistaken, ass TensorFlow dependencies are on conda some way or another, including the CUDA Toolkit and cuDNN)\r\n\r\n**Any Other info.**\r\nas seen [here](https://github.com/tensorflow/tensorflow/issues/35754) a lot of people are currently interested in this and it would be beneficial to everyone.", "comments": ["We don't have enough developers for this internally, so it has to come from the community, just like it is.", "Are you satisfied with the resolution of your issue?\n<a href=\"https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&entry.2137816233=https://github.com/tensorflow/tensorflow/issues/49555\">Yes</a>\n<a href=\"https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&entry.2137816233=https://github.com/tensorflow/tensorflow/issues/49555\">No</a>\n", "Hey, I've been wanting to comment on this, but it's been languishing on my todo-list - sorry.\r\n\r\nI'm one of the people who helps package tensorflow for conda-forge, _the_ main channel these days for pretty much everything, particularly in the scientific computing / data science space. There are some trade-offs for having everything in one channel, but a lot of upsides too (homogeneous infra guarantees binary-compatible builds across whole channel, supports various architectures, GPUs, and even different runtimes like PyPy, etc. etc.).\r\n\r\nIn fact, there's a lot of interest in packaging tensorflow for conda-forge, but by far the biggest bottleneck is the fact that TF builds time out in the standard Azure CI that MSFT provides for GH (6h). This leads to extremely painful debugging, because - contrary to the ususal PR+CI model - someone has to retrigger builds locally for every change. Almost exclusively due to this, there's been long delays in packaging TF releases in conda-forge.\r\n\r\nSince I saw this issue, I've been mulling to propose a collaboration on this, in the sense that the conda-forge community would be able to provide high-quality packaging for this (and do all the conda packaging effort, essentially), but we'd really need support on the CI front, where building the various tensorflow releases & flavours could be done.\r\n\r\nWould that be interesting to the tensorflow developers and their sponsors? (CI isn't free, unfortunately...)\r\n\r\nCC @xhochy @beckermr @wolfv @isuruf @jakirkham ", "That would be nice. What would be the differences between your environment and the env TF releases use to build? Can you join SIG Build meetings (unfortunately the most recent one just finished) and we can discuss this there?", "Cool, awesome to hear! \ud83d\ude43 \r\n\r\nI don't know the repo-structure here - I looked here and in the TF org, but couldn't find where the conda packages are built?\r\n\r\nFor conda-forge, everything is done in the so-called \"feedstock\" repo on GH: https://github.com/conda-forge/tensorflow-feedstock/\r\n\r\nThe [recipe](https://github.com/conda-forge/tensorflow-feedstock/blob/master/recipe/meta.yaml) there is fully self-contained (although, by that I mean the recipe [folder](https://github.com/conda-forge/tensorflow-feedstock/tree/master/recipe) and all its content). Note that we'd love to keep the recipe as stupidly simple as possible (i.e. requirements + `pip install` or something**) - everything else there has unfortunately \"earned\" its place as a necessity (at least currently). CUDA builds are not supported yet, but that's just due to the above-mentioned CI problem - conda-forge has the capability to build GPU packages, and does so extensively.\r\n\r\nRegarding joining meetings, I'm willing to join (timezone-permitting), and I'm almost certain that there'd be other maintainers of the tensorflow-feedstock (or conda-forge/core itself) that would be interested in moving this forward.\r\n\r\n** In the case of TF, it makes sense to provide several outputs (e.g. with python-bindings, as well as just a C++ lib), so that rule would apply to each of those outputs, which are allowed to depend on each other in the form of a DAG.", "Another opportunity here is to use conda-forge to provide CPU versions with more SIMD optimization than you get in other spots.", "> Can you join SIG Build meetings (unfortunately the most recent one just finished) and we can discuss this there?\r\n\r\n@mihaimaruseac any plans for the next SIG Build meeting?", "Every first Tuesday of the month (with exception for June/July due to US holidays)\r\n\r\nbit.ly/tf-sig-build-notes\r\n\r\n\r\nThere is also a link in the title there to Add the event to your Google Calendar\r\n"]}, {"number": 49554, "title": "Fix OOB issue with `tf.raw_ops.SparseSparseMinimum`.", "body": "PiperOrigin-RevId: 371005787\nChange-Id: Ib686ccc077836e8b980b8b5a03936d36a8ecaf71", "comments": []}]