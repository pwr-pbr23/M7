[{"number": 16445, "title": "Unable to build image_retraining:label_image no such target ", "body": "SUCCESS: bazel build --config opt tensorflow/examples/image_retraining:retrain\r\nSUCCESS: bazel-bin/tensorflow/examples/image_retraining/retrain --image_dir ~/flower_photos\r\nFAILED : bazel build tensorflow/examples/image_retraining:label_image\r\nERROR: Skipping 'tensorflow/examples/image_retraining:label_image': no such target '//tensorflow/examples/image_retraining:label_image': target 'label_image' not declared in package 'tensorflow/examples/image_retraining' defined by /Users/jeff/tensorflow/tensorflow/examples/image_retraining/BUILD\r\nWARNING: Target pattern parsing failed.\r\nERROR: no such target '//tensorflow/examples/image_retraining:label_image': target 'label_image' not declared in package 'tensorflow/examples/image_retraining' defined by /Users/jeff/tensorflow/tensorflow/examples/image_retraining/BUILD\r\nINFO: Elapsed time: 0.320s\r\nFAILED: Build did NOT complete successfully (0 packages loaded)\r\n", "comments": ["had to do git checkout r1.4"]}, {"number": 16444, "title": "Documentation update", "body": "The mean squared error is described as following\r\n\r\nmean_squared_error(\r\n    labels,\r\n    predictions,\r\n    weights=1.0,\r\n    scope=None,\r\n    loss_collection=tf.GraphKeys.LOSSES,\r\n    reduction=Reduction.SUM_BY_NONZERO_WEIGHTS\r\n)\r\n\r\nThe default reduction method is MEAN in v1.4", "comments": ["Do you mean `Reduction.MEAN`?\r\n\r\nhttps://github.com/tensorflow/tensorflow/blob/c646af1957197a9be0feb5e928af46e29da688ea/tensorflow/python/ops/losses/losses_impl.py#L525-L528", "@facaiy Yes. In older versions, the default setting is SUM_BY_NONZERO_WEIGHTS. I don't when they update it to Reduction.Mean.", "Could you paste your system information?\r\n\r\n  > You can collect some of this information using our environment capture script:\r\n  > https://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh\r\n  > You can obtain the TensorFlow version with\r\n  > python -c \"import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)\"\r\n\r\nI have checked r1.4 branch and the latest master branch, the default reduction seems not changed to `Reduction.Mean`.\r\n", "The function behaviors like that on my PC. And it compute the sum only when I declare the reduction as SUM\r\n\r\n### System information\r\nOS Platform and Distribution:  (Ubuntu 14.04)\r\nTensorFlow installed from: binary\r\nTensorFlow version (use command below): 'v1.4.0-19-ga52c8d9', '1.4.1')\r\nPython version:  2.7.13\r\nBazel version (if compiling from source):\r\nGCC/Compiler version (if compiling from source)**:\r\nCUDA/cuDNN version: V8.0.44/V6.0\r\nGPU model and memory: Titan xp 12G", "If I understand you correctly, you mistake `Reduction.SUM_BY_NONZERO_WEIGHTS` as the sum of squared error, right? \r\n\r\nAlthough the name is a little confusing, in fact, this reduction method is actually an average over nonzero weights. When `weight=1.0` by default, `Reduction.SUM_BY_NONZERO_WEIGHTS` behaves like MSE (`Reduce.MEAN`) . Unfortunately, the document seems blank in tensorflow: https://www.tensorflow.org/versions/master/api_docs/python/tf/losses/Reduction\r\n\r\nPerhaps we'd better to improve the document, it's not the first time to confuse people, CF #15056", "Ya, I mistaken it as the summation of squared error. Thanks for your explanation."]}, {"number": 16443, "title": "Disable AWS S3 virtual addressing", "body": "The fix disables the virtual addressing of AWS S3, as was suggested in the comment https://github.com/tensorflow/tensorflow/issues/16397#issuecomment-360654674\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n", "comments": ["Could we add a comment about that in the interface of the open call?", "@drpngx looks OK to you?", "@yongtang Actually, I was thinking about something in `s3_file_system.h`. A comment reflecting what the rules are about the bucket (e.g. how they are extracted from here):\r\nhttps://www.github.com/tensorflow/tensorflow/blob/master/tensorflow/core/platform/s3/s3_file_system.cc#L96\r\n\r\nThanks!", "Thanks @drpngx. A section of comment has been added in `s3_file_system.h` to explain the behavior of S3 Client used. Please take a look and let me know if there are any issues."]}, {"number": 16442, "title": "why save model and deploy in android device, the outputs are not the same as in ubuntu?", "body": "OS Platform and Distribution :Ubuntu 14.04.5 LTS   && Android 8.0\r\nTensorFlow installed from source\r\nTensorFlow version :1..4.0\r\nPython version : 2.7.6\r\nBazel version :0.4.5\r\nGCC/Compiler version:4.8.4\r\nCUDA/cuDNN version:8.0\r\nGPU model and memory: GTX1080, 8G\r\nExact command to reproduce:\r\n\r\nstep 1. clone code from https://github.com/davidsandberg/facenet\r\nstep 2. in the file src/compare.py, add the follow code after line 90, after align.detect_face.create_mtcnn \r\n            output_node_names=['pnet/prob1','pnet/conv4-2/BiasAdd','pnet/conv1/BiasAdd','rnet/prob1','rnet/conv5-2/conv5-2','onet/prob1','onet/conv6-2/conv6-2','onet/conv6-3/conv6-3']\r\n            output_graph_def = tf.graph_util.convert_variables_to_constants(sess, sess.graph.as_graph_def(), output_node_names) #sess.graph_def,\r\n            with tf.gfile.FastGFile(\"mtcnn.pb\", mode = 'wb') as f:\r\n                f.write(output_graph_def.SerializeToString())\r\n\r\nstep 3. run the command:  python src/compare.py ./data/20170512-110547 ./data/images/Anthony_Hopkins_0001.jpg ./data/images/Anthony_Hopkins_0002.jpg\r\nwill create the model file mtcnn.pb\r\n\r\nstep 4 deploy the file mtcnn.pb to android app, validate with the file Anthony_Hopkins_0001.jpg, indeed it can fetch the results for the outputs such as 'pnet/prob1','pnet/conv4-2/BiasAdd',  but the values are difference with the results from the facenet project run on ubuntu,\r\n\r\nthe query is what is the cause to the difference? the  way to create the mtcnn.pb is wrong? still need to optimize it to adapt android device? or there is something wrong with Tensorflow for mobile device?\r\n\r\nthe follow is the log show the difference:\r\nwith the same input:00.28515625,-0.24609375,-0.59765625\r\nbut the output is difference\r\n\r\nAndroid output\r\n \tLine 5555: 01-26 11:34:20.793 I/lxr     (22967): img00.28515625,-0.24609375,-0.59765625\r\n\tLine 5795: 01-26 11:34:21.326 I/lxr     (22967): mapWidth 70 mapHeight 70\r\n\tLine 5796: 01-26 11:34:21.327 I/lxr     (22967): outValue:0.9998832,1.16751995E-4\r\n\tLine 5797: 01-26 11:34:21.327 I/lxr     (22967): outReg:-0.068167016,-0.2052449,0.06884944,0.1512082\r\n\r\nUbuntu output\r\nimg_y (1, 150, 150, 3)\r\nimg_y0 [ 0.28515625 -0.24609375 -0.59765625]\r\nout0 shape (1, 70, 70, 4)\r\nout1 shape (1, 70, 70, 2)\r\nout0 [-0.07926445 -0.20101449  0.06468102  0.16017048]\r\nout1 [  9.99792397e-01   2.07666759e-04]\r\n", "comments": ["It looks like there are some precision issues, but maybe not in the magnitude that would be unexpected.", "Nagging Assignee: It has been 14 days with no activity and this issue has an assignee. Please update the label and/or status accordingly.", "We have a trained quantized graph deployed on ubuntu/ios/android. And android results in COMPLETELY different (incorrect) output.", "I had found the root cause by myself: the input data need to be transposed,.\r\nand  there still a little difference for the precious between ubuntu and android device.", "Oh good to see you're unstuck.", "I have same problem ,did you transposed the input in python or android? the input in android is an one dimensional array, which in python is [1,160,160,3],i want to know how did you do it,thanks very much"]}, {"number": 16441, "title": "Make raw_rnn accept scalar or TensorArray values for state.", "body": "`tf.contrib.seq2seq.AttentionWrapper` rnn cell cannot be passed to `raw_rnn`, the problem is related\r\n#11988, and the same problem in `dynamic_rnn`  been solved. However, in `raw_rnn`, it still exists as \r\nhttps://github.com/tensorflow/tensorflow/issues/11988#issuecomment-326887212 pointed.\r\n\r\nWhen state is a tuple which contains a nested scalar state (i.e. `time` state in `tf.contrib.seq2seq.AttentionWrapperState`), the codes `tf.where` for scalars fail.\r\n\r\nCurrent code in `raw_rnn`:\r\n```python\r\n      def _copy_some_through(current, candidate):\r\n        \"\"\"Copy some tensors through via array_ops.where.\"\"\"\r\n          with ops.colocate_with(cand_i):\r\n            return array_ops.where(elements_finished, cur_i, cand_i)\r\n        return nest.map_structure(copy_fn, current, candidate)\r\n\r\n      emit_output = _copy_some_through(zero_emit, emit_output)\r\n      next_state = _copy_some_through(state, next_state)\r\n```\r\n\r\nSimilar codes in `dynamic_rnn` have been amended, as follows:\r\n```python\r\n  def _copy_one_through(output, new_output):\r\n    # TensorArray and scalar get passed through.\r\n    if isinstance(output, tensor_array_ops.TensorArray):\r\n      return new_output\r\n    if output.shape.ndims == 0:\r\n      return new_output\r\n    # Otherwise propagate the old or the new value.\r\n    copy_cond = (time >= sequence_length)\r\n    with ops.colocate_with(new_output):\r\n      return array_ops.where(copy_cond, output, new_output)\r\n```\r\n\r\nThis PR solves the problem, add judgement as with `dynamic_rnn`.", "comments": []}, {"number": 16440, "title": "raw_input() was removed in Python 3", "body": "__raw_input()__ was removed in Python 3 in favor of __input()__.  We __import six__ so that [__six.moves.input()__](https://pythonhosted.org/six/#module-six.moves) works identically in both Python 2 and Python 3.  We also add .strip() to gracefully deal with leading or trailing whitespace in the user input as well as lower() to gracefully deal with capital as well as lowercase letters.", "comments": ["Nagging Assignee: It has been 14 days with no activity and this issue has an assignee. Please update the label and/or status accordingly.", "@fchollet would you please review this? Thanks.", "Modified to be in sync with upstream:\r\n* https://github.com/keras-team/keras/blob/master/keras/utils/io_utils.py#L144-L148", "Nagging Assignee @rmlarsen: It has been 14 days with no activity and this issue has an assignee. Please update the label and/or status accordingly.", "@fchollet could you take another look and approve, if possible?"]}, {"number": 16439, "title": "long was removed in Python 3", "body": "__long__ was [removed](https://docs.python.org/3/whatsnew/3.0.html#integers) from Python 3 in favor of __int__.  Here we have replaced the tuple __(int, long)__ with [six.integer_types](https://pythonhosted.org/six/#six.integer_types) which does the right thing in both Python 2 and Python 3.", "comments": []}, {"number": 16438, "title": "xrange() was removed in Python 3", "body": "Each of these files contains at least one call to the Python 2-only builtin function __xrange()__ which was removed in Python 3 in favor of __range()__.  To each of these files we add the line [__from six.moves import xrange__](https://pythonhosted.org/six/#module-six.moves) for compatibility with both Python 2 and Python 3.", "comments": ["Ubuntu contrib \u2014 Internal CI infrastructure error. Please apply label '__kokoro:force-run__' to rerun..."]}, {"number": 16437, "title": "Update README.md", "body": "-png, --sample_index options are not available in google-perftools (2.4-0ubuntu5.16.04.1). \r\nAlso, since Ubuntu 16.04 wrongly recommends to install pprof from 'tau' package\r\n\r\n> The program 'pprof' is currently not installed. You can install it by typing:\r\n> sudo apt install tau\r\n\r\nthe typical user command should probably be \r\n\r\n`google-pprof --pdf --nodecount=100 <filename>`", "comments": []}, {"number": 16436, "title": "replace deprecated keep_dims with keepdims in keras.backend", "body": "This may not be important but it sometimes triggers warnings with conv nets built with keras.", "comments": ["Already resolved in master"]}, {"number": 16435, "title": "Increase tolerance on TFGAN losses test. fixes #16238", "body": "", "comments": []}, {"number": 16434, "title": " Imported lstm1d and lstm2d in ndlstm __init__.py.", "body": "Makes importing ndlstm modules easier.", "comments": ["Test again please. I \"reverted\" the previous commit that is not related to the pull request."]}, {"number": 16433, "title": "Fix an imperfect implementation of tf.losses.mean_pairwise_squared_error", "body": "Here is a fix for the issue [Imperfect implementation of tf.losses.mean_pairwise_squared_error (#15968)](https://github.com/tensorflow/tensorflow/issues/15968)\r\n\r\nRELNOTES: Fixed wrong normalization in tf.losses.mean_pairwise_squared_error to conform to the math and documentation. Numerical results will be different.", "comments": ["Thank you!", "@chofchof Can you please fix the broken unit tests?\r\n\r\nhttps://source.cloud.google.com/results/invocations/347190b4-ca0d-4a73-9e53-968668852429/targets/%2F%2Ftensorflow%2Fpython%2Fkernel_tests:losses_test/log", "@rmlarsen Do you want for me to open a new \"Pull request\"? To pass the test, `tensorflow/python/kernel_tests/losses_test.py` needs to be fixed as follows:\r\n\r\n    --- losses_test.py.orig 2018-02-01 18:10:54.865671816 +0900\r\n    +++ losses_test.py      2018-02-01 18:05:41.668652970 +0900\r\n    @@ -953,14 +953,14 @@\r\n         # Compute the expected loss 'manually'.\r\n         total = np.zeros((batch_size,))\r\n         for b in range(batch_size):\r\n    -      for i in range(dims):\r\n    -        for j in range(dims):\r\n    +      for i in range(dims-1):\r\n    +        for j in range(i+1, dims):\r\n               x = self._predictions[b, i].item() - self._predictions[b, j].item()\r\n               y = self._labels[b, i].item() - self._labels[b, j].item()\r\n               diff = (x - y)\r\n               total[b] += (diff * diff)\r\n\r\n    -    self._expected_losses = np.divide(total, 9.0)\r\n    +    self._expected_losses = np.divide(total, 3.0)\r\n\r\n       def testValueErrorThrownWhenWeightIsNone(self):\r\n         with self.test_session():\r\n    @@ -1060,7 +1060,7 @@\r\n             [[8, 1, 3], [7, 8, 9], [10, 11, 12]],\r\n         ])\r\n         self._test_valid_weights(\r\n    -        labels, predictions, expected_loss=122.22222)\r\n    +        labels, predictions, expected_loss=137.5)\r\n\r\n       def test3dWeightedScalar(self):\r\n         labels = np.array([\r\n    @@ -1073,7 +1073,7 @@\r\n         ])\r\n         weight = 3.0\r\n         self._test_valid_weights(\r\n    -        labels, predictions, expected_loss=weight * 122.22222,\r\n    +        labels, predictions, expected_loss=weight * 137.5,\r\n             weights=weight)\r\n\r\n       def _test_invalid_weights(\r\n    @@ -1124,7 +1124,7 @@\r\n         ])\r\n         self._test_valid_weights(\r\n             # TODO(ptucker): This doesn't look right.\r\n    -        labels, predictions, expected_loss=9 * 122.22222,\r\n    +        labels, predictions, expected_loss=9 * 137.5,\r\n             weights=np.ones((2, 3, 3)))\r\n\r\n       def testLossWithAllZeroBatchSpecificWeights(self):", "@chofchof please update the broken unit tests in this PR. We cannot merge code until the tests pass.", "@chofchof Thanks for the contribution!"]}, {"number": 16432, "title": "Fix docstrings in `scan`", "body": "", "comments": []}, {"number": 16431, "title": "Lite: Supporting Raspberry Pi.", "body": "Now we can cross compiling or native compiling libtensorflow-lite.a for rpi.\r\n1. Fix 'string' does not name a type error by adding its namespace.\r\n2. Remove unnecessary space between $(CC_PREFIX) and gcc.\r\n3. Adding -O3 -DNDEBUG CFLAGS same as CXXFLAGS.\r\n4. Remove redundant -lpthread link flag.\r\n5. Add Makefile for RPi.", "comments": ["changes to `label_image.h` (s/string/std::string/) should not be needed after https://github.com/tensorflow/tensorflow/commit/119b993e00a2a138d1ef2f4886e39ca528bad1c3. And it seems to me that the `label_image.h` is not used in the Makefile :-)", "Thanks, I'll fix it.", "@freedomtan Is it good enough?", "FYI, I guess for native build on RPI (which as far as I know is running ARMv7 debain variant) `bazel build ....` should work out of box. I was able to build and run [label_image for tflite](https://github.com/tensorflow/tensorflow/tree/master/tensorflow/contrib/lite/examples/label_image) on an ARMv8 board running ARM64 debian with some tweaks (see, https://github.com/tensorflow/tensorflow/pull/16175)", "@freedomtan Could you please share your `bazel build ...` options?", "no options, just vanilla `bazel build YOUR_TARGET`, e.g., `bazel build //tensorflow/contrib/lite/examples/label_image:label_image`", "Thank you. I have try hard to cross compile `//tensorflow/contrib/lite/examples/label_image:label_image` using bazel. For you know,  running bazel in that ARM things is painful.", "Nagging Assignee: It has been 14 days with no activity and this issue has an assignee. Please update the label and/or status accordingly.", "Sorry for the long delay on this one! @aselle is looking at Pi changes for TF Lite, he should be able to look into this.", "@aselle Thanks.", "Nagging Assignee @rmlarsen: It has been 14 days with no activity and this issue has an assignee. Please update the label and/or status accordingly.", "@tensorflow-jenkins  please test this please.", "Trying to build or RPi 3 with the instructions given in `rpi.md` is giving \r\n\r\n> fatal error: tensorflow/core/lib/core/error_codes.pb.h: No such file or directory\r\n>  #include \"tensorflow/core/lib/core/error_codes.pb.h\"", "I'm running into the same error as @GPhilo. Are there any news about that?", "@sschuhmann I opened an issue here: #17822"]}, {"number": 16430, "title": "Lite: Supporting Raspberry Pi.", "body": "Now we can cross compiling or native compiling libtensorflow-lite.a for rpi.", "comments": ["We found a Contributor License Agreement for you (the sender of this pull request), but were unable to find agreements for the commit author(s).  If you authored these, maybe you used a different email address in the git commits than was used to sign the CLA ([login here](https://cla.developers.google.com/) to double check)?  If these were authored by someone else, then they will need to sign a CLA as well, and confirm that they're okay with these being contributed to Google.\nIn order to pass this check, please resolve this problem and have the pull request author add another comment and the bot will run again. If the bot doesn't comment, it means it doesn't think anything has changed.\n\n<!-- need_author_cla -->"]}, {"number": 16429, "title": "Fix an imperfect implementation of tf.losses.mean_pairwise_squared_error", "body": "Suggest a fix for an [imperfect implementation of tf.losses.mean_pairwise_squared_error (#15968)](https://github.com/tensorflow/tensorflow/issues/15968)", "comments": ["We found a Contributor License Agreement for you (the sender of this pull request), but were unable to find agreements for the commit author(s).  If you authored these, maybe you used a different email address in the git commits than was used to sign the CLA ([login here](https://cla.developers.google.com/) to double check)?  If these were authored by someone else, then they will need to sign a CLA as well, and confirm that they're okay with these being contributed to Google.\nIn order to pass this check, please resolve this problem and have the pull request author add another comment and the bot will run again. If the bot doesn't comment, it means it doesn't think anything has changed.\n\n<!-- need_author_cla -->"]}, {"number": 16428, "title": "want keras to work on GPU, but actually on CPU", "body": "System information:\r\nOS Platform and Distribution: Linux Ubuntu 16.04:\r\nTensorFlow installed from anaconda:\r\nKeras installed from pip\r\nTensorFlow version 1.4.1\r\nBazel version : None:\r\nCUDA/cuDNN version : CUDA V7.5.17, CuDNN v6.0:\r\nGPU: GeForce GeForce GTX 1050 Ti(3.94GB):\r\nCode: [mnist_mlp.py](https://github.com/antoniosehk/keras-tensorflow-windows-installation/blob/master/examples/mnist_mlp.py)\r\n\r\nWhen run the code, it shows the following log:\r\n\r\n> Using TensorFlow backend.\r\n2018-01-25 17:31:16.572013: I tensorflow/core/platform/cpu_feature_guard.cc:137] Your CPU supports instructions that this TensorFlow binary was not compiled to use: SSE4.1 SSE4.2 AVX AVX2 FMA\r\n2018-01-25 17:31:16.679268: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:892] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\r\n2018-01-25 17:31:16.679499: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1030] Found device 0 with properties:\r\nname: GeForce GTX 1050 Ti major: 6 minor: 1 memoryClockRate(GHz): 1.468\r\npciBusID: 0000:01:00.0\r\ntotalMemory: 3.94GiB freeMemory: 3.46GiB\r\n2018-01-25 17:31:16.679513: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1120] Creating TensorFlow device (/device:GPU:0) -> (device: 0, name: GeForce GTX 1050 Ti, pci bus id: 0000:01:00.0, compute capability: 6.1)\r\n\r\nHave no idea why it shows: \r\n\r\n> 2018-01-25 17:31:16.679268: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:892] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\r\n\r\nAnd the code is actually running on the CPU, although the log shows the info of GPU\r\n\r\nWhat have tried: stackoverflow :)", "comments": ["I apologize, but I do not understand your question. Do you see an error when executing your program?\r\n\r\n", "Nagging Awaiting Response: It has been 14 days with no activityand the `awaiting response` label was assigned. Is this still an issue?", "Nagging Awaiting Response: It has been 14 days with no activityand the `awaiting response` label was assigned. Is this still an issue?", "Automatically closing due to lack of recent activity. Please update the issue when new information becomes available, and we will reopen the issue. Thanks!"]}, {"number": 16427, "title": "Fix build errors in contrib/mpi introduced by commit 6042b5d267f", "body": "The commit https://github.com/tensorflow/tensorflow/commit/6042b5d267f42d004087b44c29525951700579f9#diff-7c00d4a3caee74eedf5bb638bce23e5a \r\n* Introduced code to `tensorflow/contrib/mpi/mpi_rendezvous_mgr.h` to use the type `RecentRequestIds` without including the header `tensorflow/core/distributed_runtime/recent_request_ids.h`.\r\n```\r\nERROR: /opt/tensorflow/tensorflow/contrib/mpi/BUILD:60:1: C++ compilation of rule '//tensorflow/contrib/mpi:mpi_rendezvous_mgr' failed (Exit 1)\r\nIn file included from tensorflow/contrib/mpi/mpi_rendezvous_mgr.cc:18:0:\r\n./tensorflow/contrib/mpi/mpi_rendezvous_mgr.h:182:3: error: 'RecentRequestIds' does not name a type\r\n   RecentRequestIds recv_tensor_recent_request_ids_;\r\n   ^\r\n```\r\n* Probably a typo in `tensorflow/contrib/mpi/mpi_rendezvous_mgr.cc : MPIRendezvousMgr::AddRequest()`. The variable `req` was probably meant to be `request` as per the commit message.\r\n```\r\nERROR: /opt/tensorflow/tensorflow/contrib/mpi/BUILD:60:1: C++ compilation of rule '//tensorflow/contrib/mpi:mpi_rendezvous_mgr' failed (Exit 1)\r\nIn file included from ./tensorflow/core/framework/variant.h:29:0,\r\n                 from ./tensorflow/core/framework/allocator.h:26,\r\n                 from ./tensorflow/core/framework/tensor.h:20,\r\n                 from ./tensorflow/core/framework/device_base.h:23,\r\n                 from ./tensorflow/core/framework/rendezvous.h:22,\r\n                 from ./tensorflow/core/distributed_runtime/rendezvous_mgr_interface.h:22,\r\n                 from ./tensorflow/core/distributed_runtime/base_rendezvous_mgr.h:22,\r\n                 from ./tensorflow/contrib/mpi/mpi_rendezvous_mgr.h:35,\r\n                 from tensorflow/contrib/mpi/mpi_rendezvous_mgr.cc:18:\r\ntensorflow/contrib/mpi/mpi_rendezvous_mgr.cc: In member function 'void tensorflow::MPIRendezvousMgr::AddRequest(tensorflow::RecvTensorRequest, int)':\r\ntensorflow/contrib/mpi/mpi_rendezvous_mgr.cc:155:7: error: 'req' was not declared in this scope\r\n       req.request_id(), \"RecvTensor (MPIRendezvousMgr)\", req));\r\n       ^\r\n```\r\n\r\nI compiled with following commands:\r\n```\r\necho \"deb [arch=amd64] http://storage.googleapis.com/bazel-apt stable jdk1.8\" > /etc/apt/sources.list.d/bazel.list\r\ncurl https://bazel.build/bazel-release.pub.gpg | apt-key add -\r\ngit clone https://github.com/tensorflow/tensorflow .\r\nexport PYTHON_BIN_PATH=/path/to/python ## python 2.7.14\r\nexport USE_DEFAULT_PYTHON_LIB_PATH=1\r\nexport TF_NEED_JEMALLOC=1\r\nexport TF_NEED_GCP=0\r\nexport TF_NEED_HDFS=1\r\nexport TF_ENABLE_XLA=1\r\nexport TF_NEED_OPENCL=0\r\nexport TF_NEED_S3=0\r\nexport TF_NEED_GDR=0\r\nexport TF_NEED_VERBS=0\r\nexport TF_NEED_OPENCL_SYCL=0\r\nexport TF_NEED_CUDA=1\r\nexport TF_CUDA_VERSION=8.0\r\nexport CUDA_TOOLKIT_PATH=/path/to/cuda\r\nexport TF_CUDNN_VERSION=7\r\nexport CUDNN_INSTALL_PATH=/path/to/cudnn\r\nexport TF_CUDA_COMPUTE_CAPABILITIES=\"3.5,5.2,6.0,6.1\"\r\nexport TF_CUDA_CLANG=0\r\nexport GCC_HOST_COMPILER_PATH=/path/to/gcc\r\nexport TF_NEED_MPI=1\r\nexport MPI_HOME=/path/to/openmpi\r\nexport CC_OPT_FLAGS=\"-march=native\"\r\nexport TF_SET_ANDROID_WORKSPACE=0\r\n./configure\r\nbazel build --config=mkl --config=opt --config=cuda \\\r\n          //tensorflow/tools/pip_package:build_pip_package && \\\r\nbazel-bin/tensorflow/tools/pip_package/build_pip_package ./tensorflow_pkg\r\npip install -v ./tensorflow_pkg/tensorflow-*.whl\r\n```", "comments": ["Thanks for your pull request.  It looks like this may be your first contribution to a Google open source project. Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).\n\n:memo: **Please visit <https://cla.developers.google.com/> to sign.**\n\nOnce you've signed, please reply here (e.g. `I signed it!`) and we'll verify.  Thanks.\n\n---\n\n- If you've already signed a CLA, it's possible we don't have your GitHub username or you're using a different email address on your commit.  Check [your existing CLA data](https://cla.developers.google.com/clas) and verify that your [email is set on your git commits](https://help.github.com/articles/setting-your-email-in-git/).\n- If your company signed a CLA, they designated a Point of Contact who decides which employees are authorized to participate. You may need to contact the Point of Contact for your company and ask to be added to the group of authorized contributors. If you don't know who your Point of Contact is, direct the project maintainer to go/cla#troubleshoot. The email used to register you as an authorized contributor must be the email used for the Git commit.\n- In order to pass this check, please resolve this problem and have the pull request author add another comment and the bot will run again. If the bot doesn't comment, it means it doesn't think anything has changed.\n\n<!-- need_sender_cla -->", "Please address the CLA. Thanks!", "Thanks. I did CLA. Hopefully it updates.", "CLAs look good, thanks!\n\n<!-- ok -->", "Hello! There is a CI failure. Please let me know how to get to the error. Thanks.\r\nIf it is not related to this fix, great !!", "@klshrinidhi let me try to rerun the tests."]}, {"number": 16426, "title": "import contextmanager in side_effect_guards.py", "body": "Resolve the undefined name '__contextmanager__' in __side_effect_guards.py__ via __from contextlib import contextmanager__ and remove the associated pylint directive.\r\n\r\n$ __flake8 . --count --select=E901,E999,F821,F822,F823 --show-source --statistics__\r\n```\r\ntensorflow/contrib/py2tf/converters/side_effect_guards.py:126:17: F821 undefined name 'contextmanager'\r\n          ctx = contextmanager(lambda: (yield))()  # pylint:disable=undefined-variable\r\n                ^\r\n```", "comments": []}, {"number": 16425, "title": "Fix typo", "body": "fix typos", "comments": []}, {"number": 16424, "title": "Dependency on old version of bleach (1.5)", "body": "Bleach 1.5 came out Nov 4th 2016 and this is old enough to cause dependency issues for projects that stayed up to date with Bleach.\r\n\r\nIn particular, this causes issues for Jupyter users.", "comments": ["Here is the relevant line: https://github.com/tensorflow/tensorflow/blob/master/tensorflow/tools/ci_build/install/install_pip_packages.sh#L45", "the problem comes when you install jupyter from conda-forge which has version 2.0 of bleach.\r\nplain conda has version 1.5.", "@jmsdnns Did @scottdraves suggestion solve your problem?", "no. tensorflow needs to update the versions of bleach that it depends on.\n\nOn Jan 27, 2018 1:03 AM, \"Tatiana Shpeisman\" <notifications@github.com>\nwrote:\n\n> @jmsdnns <https://github.com/jmsdnns> Did @scottdraves\n> <https://github.com/scottdraves> suggestion solve your problem?\n>\n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/tensorflow/tensorflow/issues/16424#issuecomment-360963037>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AHlRFl0bsWbFoNhzsEzqQwlUNlTjQ3iqks5tOrwigaJpZM4RtpCI>\n> .\n>\n", "Not only bleach is outdated, also is html5lib . The newest version of html5lib on conda is 1.0.1, while tf is still using html5lib==0.9999999", "@zhiruiwang `bleach` depends on `html5lib`. \r\n\r\nSo it would be enough to update `bleach`.\r\n\r\nExtract from `pipdeptree` command:\r\n```\r\ntensorflow==1.5.0\r\n  - absl-py [required: >=0.1.6, installed: 0.1.9]\r\n    - six [required: Any, installed: 1.11.0]\r\n  - numpy [required: >=1.12.1, installed: 1.14.0]\r\n  - protobuf [required: >=3.4.0, installed: 3.5.1]\r\n    - setuptools [required: Any, installed: 38.4.0]\r\n    - six [required: >=1.9, installed: 1.11.0]\r\n  - six [required: >=1.10.0, installed: 1.11.0]\r\n  - tensorflow-tensorboard [required: <1.6.0,>=1.5.0, installed: 1.5.0]\r\n    - bleach [required: ==1.5.0, installed: 1.5.0]\r\n      - html5lib [required: >=0.999,!=0.9999,!=0.99999,<0.99999999, installed: 0.9999999]\r\n        - six [required: Any, installed: 1.11.0]\r\n      - six [required: Any, installed: 1.11.0]\r\n    - futures [required: >=3.1.1, installed: 3.1.1]\r\n    - html5lib [required: ==0.9999999, installed: 0.9999999]\r\n      - six [required: Any, installed: 1.11.0]\r\n    - markdown [required: >=2.6.8, installed: 2.6.11]\r\n    - numpy [required: >=1.12.0, installed: 1.14.0]\r\n    - protobuf [required: >=3.4.0, installed: 3.5.1]\r\n      - setuptools [required: Any, installed: 38.4.0]\r\n      - six [required: >=1.9, installed: 1.11.0]\r\n    - six [required: >=1.10.0, installed: 1.11.0]\r\n    - werkzeug [required: >=0.11.10, installed: 0.14.1]\r\n    - wheel [required: >=0.26, installed: 0.30.0]\r\n    - wheel [required: Any, installed: 0.30.0]\r\n  - wheel [required: >=0.26, installed: 0.30.0]\r\n```", "@jart FYI, you may want to bump bleach version in tensorboard dependencies.", "I updated bleach dependency in the internal version. It should propagate to github in a day or two. ", "Yes we'd love to update bleach and html5lib if they're bumped internally, which is easier said than done. Big breaking changes. We ideally need a way to vendor dependencies like these with histories of breakages inside our pip package, cf. `import pip._vendor.\u2026`", "See also https://github.com/tensorflow/tensorboard/issues/588", "+cc @nfelt  @chihuahua ", "The TF 1.6 version on PyPI still has the bleach ==1.5.0 and html5lib ==0.9999999 dependency.", "... so does TF 1.7 ...", "pip3 \r\npython 3.5\r\ntensorboard 1.7.0 has requirement bleach==1.5.0, but you'll have bleach 2.1.3 which is incompatible.\r\ntensorboard 1.7.0 has requirement html5lib==0.9999999, but you'll have html5lib 1.0.1 which is incompatible.", "@tatianashp It seems like the dependency updates still have not be propagated to the github or PyPi version? Hope this can be resovled when tensorflow/tensorboard 1.8 is released.", "I fixed dependency at https://github.com/tensorflow/tensorflow/blob/master/tensorflow/tools/ci_build/install/install_pip_packages.sh#L45. But,  bleach 1.5.0 is still required by TensorBoard.\r\n\r\n@jart - can you comment?\r\n\r\n", "The workaround should be to install within a virtualenv. This workaround shouldn't be necessary. It might not work in all situations. I'd like to fix this. TensorBoard can't upgrade to the more recent versions of these libraries. However I vendor (or shade) them inside our pip package. Let me take a look into seeing what's possible.", "stupid question\r\n\r\nWhat is the command to do it?\r\n", "So whats the solution for the issue?", "Yeah, could we have some resolution to this? It's getting pretty annoying", "This issue is resolved.  TensorBoard stopped depending on Bleach nearly a year ago, and TensorFlow's only dependency on it was indirectly via TensorBoard.  Relatively recent versions of TensorFlow and TensorBoard don't have any dependency on Bleach at all."]}, {"number": 16423, "title": "Windows 10 Cmake GPU nvcc.exe error", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:\r\nNo\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:\r\nWindows 10\r\n- **TensorFlow installed from (source or binary)**:\r\nsource\r\n- **TensorFlow version (use command below)**:\r\nr1.5\r\n- **Python version**: \r\n3.6\r\n- **GCC/Compiler version (if compiling from source)**:\r\nVisual Studio 2017\r\n- **CUDA/cuDNN version**:\r\n9.1\r\n- **GPU model and memory**:\r\n1080Ti\r\n- **Exact command to reproduce**:\r\n\r\n**Cmake Command:**\r\n```\r\ncmake -G \"Visual Studio 15 2017 Win64\" -T host=x64 -DCMAKE_BUILD_TYPE=\"\r\nRelease\" -DSWIG_EXECUTABLE='C:\\ProgramData\\Chocolatey\\bin\\swig.exe' -Dtensorflow_ENABLE_GPU=ON -Dtensorflow_CUDA_VERSION\r\n=9.1 -Dtensorflow_CUDNN_VERSION=7 -Dtensorflow_WIN_CPU_SIMD_OPTIONS=\"/arch:AVX2\" -DCUDA_CUDART_LIBRARY=D:\\NVIDIA\\CUDA\\v9\r\n.1 -DCUDNN_HOME='D:\\NVIDIA\\CUDA\\v9.1' ..\r\n```\r\n\r\n**Build command**\r\n```\r\n\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\MSBuild\\15.0\\Bin\\amd64\\MSBuild.exe\" /m:4 /p:Configuration=Release .\\tf_core_gpu_kernels.vcxproj\r\n```\r\n### Describe the problem\r\nCmake creates a bad command to send to nvcc.exe\r\n\r\nIn tf_core_gpu_kernels_generated_adjust_contrast_op_gpu.cu.cc.obj.Release.cmake:202L\r\nthere is an error with the resulting command.\r\n\r\nThere is issues with spacing, \";\" in between arguments and others.\r\n\r\n**Command Ran**\r\n`C:/NVIDIA/CUDA/v9.1/bin/nvcc.exe -M -D__CUDACC__ D:/tensorflow/tensorflow/core/kernels/adjust_contrast_op_gpu.cu.cc -o D:/tensorflow/tensorflow/contrib/cmake/build/CMakeFiles/tf_core_gpu_kernels.dir/__/__/core/kernels/tf_core_gpu_kernels_generated_adjust_contrast_op_gpu.cu.cc.obj.NVCC-depend -ccbin;C:/Program Files (x86)/Microsoft Visual Studio/2017/Community/VC/bin -m64;-DSQLITE_OMIT_LOAD_EXTENSION;-DEIGEN_AVOID_STL_ARRAY;-DNOMINMAX;-D_WIN32_WINNT=0x0A00;-DLANG_CXX11;-DCOMPILER_MSVC;-DWIN32;-DOS_WIN;-D_MBCS;-DWIN64;-DWIN32_LEAN_AND_MEAN;-DNOGDI;-DPLATFORM_WINDOWS;-DTENSORFLOW_USE_EIGEN_THREADPOOL;-DEIGEN_HAS_C99_MATH;-DTF_COMPILE_LIBRARY;-DGRPC_ARES=0;-DTF_USE_SNAPPY;-DGOOGLE_CUDA=1;-DTF_EXTRA_CUDA_CAPABILITIES=6.1 -Xcompiler;,\"/DWIN32\",\"/D_WINDOWS\",\"/W3\",\"/GR\",\"/EHsc\",\"/MP\",\"/arch:AVX2\",\"/MD\",\"/O2\",\"/Ob2\",\"/DNDEBUG\",\"/D_ITERATOR_DEBUG_LEVEL=0\"  -gencode;arch=compute_61,code=\"sm_61,compute_61\";--include-path;D:/tensorflow/tensorflow/contrib/cmake/build/Release;--expt-relaxed-constexpr;-ftz=true;  -DNVCC -IC:/NVIDIA/CUDA/v9.1/include ;-ID:/tensorflow ;-ID:/tensorflow/tensorflow/contrib/cmake/build ;-ID:/tensorflow/tensorflow/contrib/cmake/build/external/zlib_archive ;-ID:/tensorflow/tensorflow/contrib/cmake/build/external/gif_archive/giflib-5.1.4 ;-ID:/tensorflow/tensorflow/contrib/cmake/build/external/png_archive ;-ID:/tensorflow/tensorflow/contrib/cmake/build/external/jpeg_archive ;-ID:/tensorflow/tensorflow/contrib/cmake/build/external/lmdb ;-ID:/tensorflow/tensorflow/contrib/cmake/build/external/eigen_archive ;-ID:/tensorflow/third_party/eigen3 ;-ID:/tensorflow/tensorflow/contrib/cmake/build/gemmlowp/src/gemmlowp ;-ID:/tensorflow/tensorflow/contrib/cmake/build/jsoncpp/src/jsoncpp ;-ID:/tensorflow/tensorflow/contrib/cmake/build/external/farmhash_archive ;-ID:/tensorflow/tensorflow/contrib/cmake/build/external/farmhash_archive/util ;-ID:/tensorflow/tensorflow/contrib/cmake/build/external/highwayhash ;-ID:/tensorflow/tensorflow/contrib/cmake/build/cub/src/cub ;-ID:/tensorflow/tensorflow/contrib/cmake/build/external/nsync/public ;-ID:/tensorflow/tensorflow/contrib/cmake/build/protobuf/src/protobuf/src ;-ID:/tensorflow/tensorflow/contrib/cmake/build/re2/install/include ;-ID:/tensorflow/tensorflow/contrib/cmake/build/external/sqlite ;-ID:/tensorflow/tensorflow/contrib/cmake/build/grpc/src/grpc/include ;-ID:/tensorflow/tensorflow/contrib/cmake/build/snappy/src/snappy ;-IC:/NVIDIA/CUDA/v9.1 ;-IC:/NVIDIA/CUDA/v9.1/extras/CUPTI/include ;-ID:/tensorflow/third_party/gpus`\r\n\r\nMultable invalid cmake varables\r\n\r\n```\r\n${CCBIN} = -ccbin;C:/Program Files (x86)/Microsoft Visual Studio/2017/Community/VC/bin \r\n${nvcc_flags} = -m64;-DSQLITE_OMIT_LOAD_EXTENSION;-DEIGEN_AVOID_STL_ARRAY;-DNOMINMAX;-D_WIN32_WINNT=0x0A00;-DLANG_CXX11;-DCOMPILER_MSVC;-DWIN32;-DOS_WIN;-D_MBCS;-DWIN64;-DWIN32_LEAN_AND_MEAN;-DNOGDI;-DPLATFORM_WINDOWS;-DTENSORFLOW_USE_EIGEN_THREADPOOL;-DEIGEN_HAS_C99_MATH;-DTF_COMPILE_LIBRARY;-DGRPC_ARES=0;-DTF_USE_SNAPPY;-DGOOGLE_CUDA=1;-DTF_EXTRA_CUDA_CAPABILITIES=6.1\r\n${nvcc_host_compiler_flags} = -Xcompiler;,\"/DWIN32\",\"/D_WINDOWS\",\"/W3\",\"/GR\",\"/EHsc\",\"/MP\",\"/arch:AVX2\",\"/MD\",\"/O2\",\"/Ob2\",\"/DNDEBUG\",\"/D_ITERATOR_DEBUG_LEVEL=0\"  \r\n${depends_CUDA_NVCC_FLAGS} = -gencode;arch=compute_61,code=\"sm_61,compute_61\";--include-path;D:/tensorflow/tensorflow/contrib/cmake/build/Release;--expt-relaxed-constexpr;-ftz=true\r\n${CUDA_NVCC_INCLUDE_ARGS} = -IC:/NVIDIA/CUDA/v9.1/include ;-ID:/tensorflow ;-ID:/tensorflow/tensorflow/contrib/cmake/build ;-ID:/tensorflow/tensorflow/contrib/cmake/build/external/zlib_archive ;-ID:/tensorflow/tensorflow/contrib/cmake/build/external/gif_archive/giflib-5.1.4 ;-ID:/tensorflow/tensorflow/contrib/cmake/build/external/png_archive ;-ID:/tensorflow/tensorflow/contrib/cmake/build/external/jpeg_archive ;-ID:/tensorflow/tensorflow/contrib/cmake/build/external/lmdb ;-ID:/tensorflow/tensorflow/contrib/cmake/build/external/eigen_archive ;-ID:/tensorflow/third_party/eigen3 ;-ID:/tensorflow/tensorflow/contrib/cmake/build/gemmlowp/src/gemmlowp ;-ID:/tensorflow/tensorflow/contrib/cmake/build/jsoncpp/src/jsoncpp ;-ID:/tensorflow/tensorflow/contrib/cmake/build/external/farmhash_archive ;-ID:/tensorflow/tensorflow/contrib/cmake/build/external/farmhash_archive/util ;-ID:/tensorflow/tensorflow/contrib/cmake/build/external/highwayhash ;-ID:/tensorflow/tensorflow/contrib/cmake/build/cub/src/cub ;-ID:/tensorflow/tensorflow/contrib/cmake/build/external/nsync/public ;-ID:/tensorflow/tensorflow/contrib/cmake/build/protobuf/src/protobuf/src ;-ID:/tensorflow/tensorflow/contrib/cmake/build/re2/install/include ;-ID:/tensorflow/tensorflow/contrib/cmake/build/external/sqlite ;-ID:/tensorflow/tensorflow/contrib/cmake/build/grpc/src/grpc/include ;-ID:/tensorflow/tensorflow/contrib/cmake/build/snappy/src/snappy ;-IC:/NVIDIA/CUDA/v9.1 ;-IC:/NVIDIA/CUDA/v9.1/extras/CUPTI/include ;-ID:/tensorflow/third_party/gpus\r\n```\r\n\r\n\r\nShould be\r\n```\r\n${CCBIN} = -ccbin \"C:/Program Files (x86)/Microsoft Visual Studio/2017/Community/VC/bin\"\r\n${nvcc_flags} = -m64 -DSQLITE_OMIT_LOAD_EXTENSION -DEIGEN_AVOID_STL_ARRAY -DNOMINMAX -D_WIN32_WINNT=0x0A00 -DLANG_CXX11 -DCOMPILER_MSVC -DWIN32 -DOS_WIN -D_MBCS -DWIN64 -DWIN32_LEAN_AND_MEAN -DNOGDI -DPLATFORM_WINDOWS -DTENSORFLOW_USE_EIGEN_THREADPOOL -DEIGEN_HAS_C99_MATH -DTF_COMPILE_LIBRARY -DGRPC_ARES=0 -DTF_USE_SNAPPY -DGOOGLE_CUDA=1 -DTF_EXTRA_CUDA_CAPABILITIES=6.1 \r\n${nvcc_host_compiler_flags} = -Xcompiler \"/DWIN32,/D_WINDOWS,/W3,/GR,/EHsc,/MP,/arch:AVX2,/MD,/O2,/Ob2,/DNDEBUG,/D_ITERATOR_DEBUG_LEVEL=0\" \r\n${depends_CUDA_NVCC_FLAGS} = -gencode arch=compute_61,code=\\\"sm_61,compute_61\\\" --include-path D:/tensorflow/tensorflow/contrib/cmake/build/Release --expt-relaxed-constexpr -ftz=true\r\n${CUDA_NVCC_INCLUDE_ARGS} = -IC:/NVIDIA/CUDA/v9.1/include -ID:/tensorflow -ID:/tensorflow/tensorflow/contrib/cmake/build -ID:/tensorflow/tensorflow/contrib/cmake/build/external/zlib_archive -ID:/tensorflow/tensorflow/contrib/cmake/build/external/gif_archive/giflib-5.1.4 -ID:/tensorflow/tensorflow/contrib/cmake/build/external/png_archive -ID:/tensorflow/tensorflow/contrib/cmake/build/external/jpeg_archive -ID:/tensorflow/tensorflow/contrib/cmake/build/external/lmdb -ID:/tensorflow/tensorflow/contrib/cmake/build/external/eigen_archive -ID:/tensorflow/third_party/eigen3 -ID:/tensorflow/tensorflow/contrib/cmake/build/gemmlowp/src/gemmlowp -ID:/tensorflow/tensorflow/contrib/cmake/build/jsoncpp/src/jsoncpp -ID:/tensorflow/tensorflow/contrib/cmake/build/external/farmhash_archive -ID:/tensorflow/tensorflow/contrib/cmake/build/external/farmhash_archive/util -ID:/tensorflow/tensorflow/contrib/cmake/build/external/highwayhash -ID:/tensorflow/tensorflow/contrib/cmake/build/cub/src/cub -ID:/tensorflow/tensorflow/contrib/cmake/build/external/nsync/public -ID:/tensorflow/tensorflow/contrib/cmake/build/protobuf/src/protobuf/src -ID:/tensorflow/tensorflow/contrib/cmake/build/re2/install/include -ID:/tensorflow/tensorflow/contrib/cmake/build/external/sqlite -ID:/tensorflow/tensorflow/contrib/cmake/build/grpc/src/grpc/include -ID:/tensorflow/tensorflow/contrib/cmake/build/snappy/src/snappy -IC:/NVIDIA/CUDA/v9.1 -IC:/NVIDIA/CUDA/v9.1/extras/CUPTI/include -ID:/tensorflow/third_party/gpus\r\n\r\n```", "comments": ["This looks like a duplicate of #16138, please follow-up there."]}, {"number": 16422, "title": "Windows: Add missing dependencies in lib_proto_parsing", "body": "", "comments": []}, {"number": 16421, "title": "Update tensorboard dep to >= 1.5.0, < 1.6.0", "body": "This change fixes the `tensorflow-tensorboard` dep now that TensorBoard 1.5.0 has been pushed to PyPI, and ensures that TensorBoard releases installed as dependencies of TF stay in sync with their corresponding TF releases even once newer (potentially backwards-incompatible) versions of TensorBoard are released by adding `< 1.6.0` as an upper bound.\r\n\r\ncc @jart ", "comments": []}, {"number": 16420, "title": "Windows: Add missing dependencies in lib_proto_parsing", "body": "", "comments": ["We found a Contributor License Agreement for you (the sender of this pull request), but were unable to find agreements for the commit author(s).  If you authored these, maybe you used a different email address in the git commits than was used to sign the CLA ([login here](https://cla.developers.google.com/) to double check)?  If these were authored by someone else, then they will need to sign a CLA as well, and confirm that they're okay with these being contributed to Google.\nIn order to pass this check, please resolve this problem and have the pull request author add another comment and the bot will run again. If the bot doesn't comment, it means it doesn't think anything has changed.\n\n<!-- need_author_cla -->", "CLAs look good, thanks!\n\n<!-- ok -->", "give me a sec. I updated the commit with new author. But a lot of new files show up"]}, {"number": 16419, "title": "R1.4", "body": "want to test ", "comments": ["Thanks for your pull request.  It looks like this may be your first contribution to a Google open source project. Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).\n\n:memo: **Please visit <https://cla.developers.google.com/> to sign.**\n\nOnce you've signed, please reply here (e.g. `I signed it!`) and we'll verify.  Thanks.\n\n---\n\n- If you've already signed a CLA, it's possible we don't have your GitHub username or you're using a different email address on your commit.  Check [your existing CLA data](https://cla.developers.google.com/clas) and verify that your [email is set on your git commits](https://help.github.com/articles/setting-your-email-in-git/).\n- If your company signed a CLA, they designated a Point of Contact who decides which employees are authorized to participate. You may need to contact the Point of Contact for your company and ask to be added to the group of authorized contributors. If you don't know who your Point of Contact is, direct the project maintainer to go/cla#troubleshoot. The email used to register you as an authorized contributor must be the email used for the Git commit.\n- In order to pass this check, please resolve this problem and have the pull request author add another comment and the bot will run again. If the bot doesn't comment, it means it doesn't think anything has changed.\n\n<!-- need_sender_cla -->", "1.4 has already been merged back into master."]}, {"number": 16418, "title": "common global variable with constant.py", "body": "Made a common `constant.py` for global commonly used variables.", "comments": ["So there's good news and bad news.\n\n:thumbsup: The good news is that everyone that needs to sign a CLA (the pull request submitter and all commit authors) have done so.  Everything is all good there.\n\n:confused: The bad news is that it appears that one or more commits were authored by someone other than the pull request submitter.  We need to confirm that all authors are ok with their commits being contributed to this project.  Please have them confirm that here in the pull request.\n\n*Note to project maintainer: This is a terminal state, meaning the `cla/google` commit status will not change from this State. It's up to you to confirm consent of the commit author(s) and merge this pull request when appropriate.*\n\n<!-- need_author_consent -->", "@rmlarsen Have deleted forked repo before creating fresh PR and again facing CLA issues. Help needed!", "@martinwicke @vrv can you help with the CLA issue here? The change itself looks fine.", "@gunan do you have any experience resolving these CLA issues? I'm not sure what's going on.", "I think the issue is github cannot detect the original repository:\r\n`tensorflow:master from unknown repository`\r\nThus CLA check is getting confused?", "@gunan oh, I see. @rajendraarora16 what repository are you pusing from?", "@rajendraarora16 mind remaking this pull request from a public repo? Closing for now."]}, {"number": 16417, "title": "Add missing library in Dockerfile", "body": "The local Dockerfile does not have all the dependencies for running the exercise notebooks in udacity assignments.", "comments": ["Thanks for your pull request.  It looks like this may be your first contribution to a Google open source project. Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).\n\n:memo: **Please visit <https://cla.developers.google.com/> to sign.**\n\nOnce you've signed, please reply here (e.g. `I signed it!`) and we'll verify.  Thanks.\n\n---\n\n- If you've already signed a CLA, it's possible we don't have your GitHub username or you're using a different email address on your commit.  Check [your existing CLA data](https://cla.developers.google.com/clas) and verify that your [email is set on your git commits](https://help.github.com/articles/setting-your-email-in-git/).\n- If your company signed a CLA, they designated a Point of Contact who decides which employees are authorized to participate. You may need to contact the Point of Contact for your company and ask to be added to the group of authorized contributors. If you don't know who your Point of Contact is, direct the project maintainer to go/cla#troubleshoot. The email used to register you as an authorized contributor must be the email used for the Git commit.\n- In order to pass this check, please resolve this problem and have the pull request author add another comment and the bot will run again. If the bot doesn't comment, it means it doesn't think anything has changed.\n\n<!-- need_sender_cla -->", "I signed it!", "CLAs look good, thanks!\n\n<!-- ok -->", "@ashish-ram Thanks for the contribution!", "same PR, you go first!!!"]}, {"number": 16416, "title": "Making global constant.py file for ops", "body": "Created a separate common `constants.py` which can be used globally.", "comments": ["So there's good news and bad news.\n\n:thumbsup: The good news is that everyone that needs to sign a CLA (the pull request submitter and all commit authors) have done so.  Everything is all good there.\n\n:confused: The bad news is that it appears that one or more commits were authored by someone other than the pull request submitter.  We need to confirm that all authors are ok with their commits being contributed to this project.  Please have them confirm that here in the pull request.\n\n*Note to project maintainer: This is a terminal state, meaning the `cla/google` commit status will not change from this State. It's up to you to confirm consent of the commit author(s) and merge this pull request when appropriate.*\n\n<!-- need_author_consent -->", "Again CLA issues"]}]