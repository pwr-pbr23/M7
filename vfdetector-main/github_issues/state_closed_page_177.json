[{"number": 49449, "title": "Add missing validation in `QuantizedBatchNormWithGlobalNormalization`", "body": "PiperOrigin-RevId: 370123451\nChange-Id: Id234d6dab1ec21230bb8e503dba30f899af87f33", "comments": []}, {"number": 49448, "title": "Prevent division by 0 in `QuantizedBiasAdd`.", "body": "PiperOrigin-RevId: 370117454\nChange-Id: I3804e2ac8dcc6d3afcc92e27853e2325a017ca4d", "comments": []}, {"number": 49447, "title": "Prevent division by 0 in `QuantizedBiasAdd`.", "body": "PiperOrigin-RevId: 370117454\nChange-Id: I3804e2ac8dcc6d3afcc92e27853e2325a017ca4d", "comments": []}, {"number": 49446, "title": "Prevent division by 0 in `QuantizedBiasAdd`.", "body": "PiperOrigin-RevId: 370117454\nChange-Id: I3804e2ac8dcc6d3afcc92e27853e2325a017ca4d", "comments": []}, {"number": 49445, "title": "Prevent division by 0 in `QuantizedBiasAdd`.", "body": "PiperOrigin-RevId: 370117454\nChange-Id: I3804e2ac8dcc6d3afcc92e27853e2325a017ca4d", "comments": []}, {"number": 49444, "title": "Fix crash in `SparseTensorToCSRSparseMatrixCPUFunctor`", "body": "PiperOrigin-RevId: 370110290\nChange-Id: I4451e92661a55c2180f80d38b67a9b50bf5edec5", "comments": []}, {"number": 49443, "title": "Fix crash in `SparseTensorToCSRSparseMatrixCPUFunctor`", "body": "PiperOrigin-RevId: 370110290\nChange-Id: I4451e92661a55c2180f80d38b67a9b50bf5edec5", "comments": []}, {"number": 49442, "title": "Fix crash in `SparseTensorToCSRSparseMatrixCPUFunctor`", "body": "PiperOrigin-RevId: 370110290\nChange-Id: I4451e92661a55c2180f80d38b67a9b50bf5edec5", "comments": []}, {"number": 49441, "title": "Fix crash in `SparseTensorToCSRSparseMatrixCPUFunctor`", "body": "PiperOrigin-RevId: 370110290\nChange-Id: I4451e92661a55c2180f80d38b67a9b50bf5edec5", "comments": []}, {"number": 49440, "title": "Fix `tf.raw_ops.CTCGreedyDecoder` CHECK failure.", "body": "PiperOrigin-RevId: 369960465\nChange-Id: If0b8b3264d5a47a24ac0970ed7b81ce6b4921fae", "comments": []}, {"number": 49439, "title": "Fix `tf.raw_ops.CTCGreedyDecoder` CHECK failure.", "body": "PiperOrigin-RevId: 369960465\nChange-Id: If0b8b3264d5a47a24ac0970ed7b81ce6b4921fae", "comments": []}, {"number": 49438, "title": "Fix `tf.raw_ops.CTCGreedyDecoder` CHECK failure.", "body": "PiperOrigin-RevId: 369960465\nChange-Id: If0b8b3264d5a47a24ac0970ed7b81ce6b4921fae", "comments": []}, {"number": 49437, "title": "Fix `tf.raw_ops.CTCGreedyDecoder` CHECK failure.", "body": "PiperOrigin-RevId: 369960465\nChange-Id: If0b8b3264d5a47a24ac0970ed7b81ce6b4921fae", "comments": []}, {"number": 49436, "title": "Fix `tf.raw_ops.QuantizeAndDequantizeV4Grad` CHECK failure.", "body": "PiperOrigin-RevId: 370532425\nChange-Id: I767721be266851b63d8fe55e7ac6be0af6017f6c", "comments": []}, {"number": 49435, "title": "Enhance validation of ngram op and handle case of 0 tokens.", "body": "PiperOrigin-RevId: 369940178\nChange-Id: Ia82f42c09d14efe76e7dc013505b832a42282f0b", "comments": []}, {"number": 49434, "title": "Enhance validation of ngram op and handle case of 0 tokens.", "body": "PiperOrigin-RevId: 369940178\nChange-Id: Ia82f42c09d14efe76e7dc013505b832a42282f0b", "comments": []}, {"number": 49433, "title": "Enhance validation of ngram op and handle case of 0 tokens.", "body": "PiperOrigin-RevId: 369940178\nChange-Id: Ia82f42c09d14efe76e7dc013505b832a42282f0b", "comments": []}, {"number": 49432, "title": "Enhance validation of ngram op and handle case of 0 tokens.", "body": "PiperOrigin-RevId: 369940178\nChange-Id: Ia82f42c09d14efe76e7dc013505b832a42282f0b", "comments": []}, {"number": 49431, "title": "Fix issues in Conv2DBackpropFilter.", "body": "PiperOrigin-RevId: 369772454\nChange-Id: I49b465f2ae2ce91def61b56cea8000197d5177d8", "comments": []}, {"number": 49430, "title": "Fix issues in Conv2DBackpropFilter.", "body": "PiperOrigin-RevId: 369772454\nChange-Id: I49b465f2ae2ce91def61b56cea8000197d5177d8", "comments": []}, {"number": 49429, "title": "Fix issues in Conv2DBackpropFilter.", "body": "PiperOrigin-RevId: 369772454\nChange-Id: I49b465f2ae2ce91def61b56cea8000197d5177d8", "comments": []}, {"number": 49428, "title": "Fix issues in Conv2DBackpropFilter.", "body": "PiperOrigin-RevId: 369772454\nChange-Id: I49b465f2ae2ce91def61b56cea8000197d5177d8", "comments": []}, {"number": 49427, "title": "Validate arguments to `QuantizedReshape`.", "body": "Ensure that validations from `Reshape` also terminate `QuantizedReshape` on failure.\n\nPiperOrigin-RevId: 369775421\nChange-Id: If8c5342267aceea65b7cb83a4b183304886f1ce8", "comments": []}, {"number": 49426, "title": "Validate arguments to `QuantizedReshape`.", "body": "Ensure that validations from `Reshape` also terminate `QuantizedReshape` on failure.\n\nPiperOrigin-RevId: 369775421\nChange-Id: If8c5342267aceea65b7cb83a4b183304886f1ce8", "comments": []}, {"number": 49425, "title": "Validate arguments to `QuantizedReshape`.", "body": "Ensure that validations from `Reshape` also terminate `QuantizedReshape` on failure.\n\nPiperOrigin-RevId: 369775421\nChange-Id: If8c5342267aceea65b7cb83a4b183304886f1ce8", "comments": []}, {"number": 49424, "title": "Validate arguments to `QuantizedReshape`.", "body": "Ensure that validations from `Reshape` also terminate `QuantizedReshape` on failure.\n\nPiperOrigin-RevId: 369775421\nChange-Id: If8c5342267aceea65b7cb83a4b183304886f1ce8", "comments": []}, {"number": 49423, "title": "Cherrypick:Validate min and max arguments to .", "body": null, "comments": ["All (the pull request submitter and all commit authors) CLAs are signed, **but** one or more commits were authored or co-authored by someone other than the pull request submitter.\n\nWe need to confirm that all authors are ok with their commits being contributed to this project.  Please have them confirm that by leaving a comment that contains only `@googlebot I consent.` in this pull request.\n\n*Note to project maintainer:* There may be cases where the author cannot leave a comment, or the comment is not properly detected as consent.  In those cases, you can manually confirm consent of the commit author(s), and set the `cla` label to `yes` (if enabled on your project).\n\n\u2139\ufe0f **Googlers: [Go here](https://goto.google.com/prinfo/https%3A%2F%2Fgithub.com%2Ftensorflow%2Ftensorflow%2Fpull%2F49423) for more info**.\n\n<!-- need_author_consent -->"]}, {"number": 49422, "title": "Cherrypick:Validate min and max arguments to .", "body": null, "comments": ["All (the pull request submitter and all commit authors) CLAs are signed, **but** one or more commits were authored or co-authored by someone other than the pull request submitter.\n\nWe need to confirm that all authors are ok with their commits being contributed to this project.  Please have them confirm that by leaving a comment that contains only `@googlebot I consent.` in this pull request.\n\n*Note to project maintainer:* There may be cases where the author cannot leave a comment, or the comment is not properly detected as consent.  In those cases, you can manually confirm consent of the commit author(s), and set the `cla` label to `yes` (if enabled on your project).\n\n\u2139\ufe0f **Googlers: [Go here](https://goto.google.com/prinfo/https%3A%2F%2Fgithub.com%2Ftensorflow%2Ftensorflow%2Fpull%2F49422) for more info**.\n\n<!-- need_author_consent -->"]}, {"number": 49421, "title": "Cherrypick:Validate min and max arguments to .", "body": null, "comments": ["All (the pull request submitter and all commit authors) CLAs are signed, **but** one or more commits were authored or co-authored by someone other than the pull request submitter.\n\nWe need to confirm that all authors are ok with their commits being contributed to this project.  Please have them confirm that by leaving a comment that contains only `@googlebot I consent.` in this pull request.\n\n*Note to project maintainer:* There may be cases where the author cannot leave a comment, or the comment is not properly detected as consent.  In those cases, you can manually confirm consent of the commit author(s), and set the `cla` label to `yes` (if enabled on your project).\n\n\u2139\ufe0f **Googlers: [Go here](https://goto.google.com/prinfo/https%3A%2F%2Fgithub.com%2Ftensorflow%2Ftensorflow%2Fpull%2F49421) for more info**.\n\n<!-- need_author_consent -->"]}, {"number": 49420, "title": "Cherrypick:Validate min and max arguments to .", "body": null, "comments": ["All (the pull request submitter and all commit authors) CLAs are signed, **but** one or more commits were authored or co-authored by someone other than the pull request submitter.\n\nWe need to confirm that all authors are ok with their commits being contributed to this project.  Please have them confirm that by leaving a comment that contains only `@googlebot I consent.` in this pull request.\n\n*Note to project maintainer:* There may be cases where the author cannot leave a comment, or the comment is not properly detected as consent.  In those cases, you can manually confirm consent of the commit author(s), and set the `cla` label to `yes` (if enabled on your project).\n\n\u2139\ufe0f **Googlers: [Go here](https://goto.google.com/prinfo/https%3A%2F%2Fgithub.com%2Ftensorflow%2Ftensorflow%2Fpull%2F49420) for more info**.\n\n<!-- need_author_consent -->"]}]