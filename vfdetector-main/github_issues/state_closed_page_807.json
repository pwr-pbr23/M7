[{"number": 29328, "title": "[TF 2.0 API Docs] tf.image.adjust_hue", "body": "Updated adjust_hue by adding a usage example in the docstring in image_ops_impl.py. The issue has been raised and is provided in this link https://github.com/tensorflow/tensorflow/issues/29327", "comments": []}, {"number": 29327, "title": "[TF 2.0 API Docs] tf.image.adjust_hue", "body": "## URL(s) with the issue:\r\n\r\nhttps://www.tensorflow.org/versions/master/api_docs/python/tf/image/adjust_hue\r\nhttps://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/ops/image_ops_impl.py\r\n\r\n## Description of issue (what needs changing):\r\n\r\n### Raises listed and defined\r\n\r\nRaises are not listed and defined\r\n\r\n### Usage example\r\n\r\nNo usage example has been provided\r\n\r\n### Submit a pull request?\r\n\r\nYes\r\nhttps://github.com/tensorflow/tensorflow/pull/29328", "comments": ["Closing this issue since the associated PR has been merged. Thanks!"]}, {"number": 29326, "title": "[TF 2.0 API Docs] tf.image.adjust_gamma", "body": "Updated adjust_gamma by adding a usage example in the docstring in image_ops_impl.py. The issue has been raised and is provided in this link https://github.com/tensorflow/tensorflow/issues/29325", "comments": []}, {"number": 29325, "title": "[TF 2.0 API Docs] tf.image.adjust_gamma", "body": "## URL(s) with the issue:\r\n\r\nhttps://www.tensorflow.org/versions/master/api_docs/python/tf/image/adjust_gamma\r\nhttps://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/ops/image_ops_impl.py\r\n\r\n## Description of issue (what needs changing):\r\n\r\n### Usage example\r\n\r\nNo usage example provided\r\n\r\n### Submit a pull request?\r\n\r\nYes\r\nhttps://github.com/tensorflow/tensorflow/pull/29326", "comments": ["Closing the issue since PR is merged to master. Thanks!"]}, {"number": 29324, "title": "[TF 2.0 API Docs] tf.data ", "body": "## URL(s) with the issue:\r\n\r\nhttps://www.tensorflow.org/versions/master/api_docs/python/tf/data\r\nhttps://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/data/__init__.py\r\n\r\n## Description of issue (what needs changing):\r\n\r\n### Added reference to three tutorials on using tf.data\r\n\r\nSince there are a mix of r2.0 and r1.x tutorials on datasets, these three are relevant for 2.0\r\n\r\n### Correct links\r\n\r\nYes\r\n### Parameters defined\r\n\r\nYes/NA\r\n\r\n### Returns defined\r\n\r\nYes/NA\r\n\r\n### Raises listed and defined\r\n\r\nNo/Perhaps NA\r\n\r\n### Usage example\r\n\r\nNo, this is to add a pointer to usage.\r\n\r\n### Request visuals, if applicable\r\n\r\nNo. It would be good to have some simple visuals relative to the different classes.\r\n\r\n### Submit a pull request?\r\n\r\n[#29323](https://github.com/tensorflow/tensorflow/pull/29323)\r\n", "comments": ["Closing this issue since PR #29323 is closed"]}, {"number": 29323, "title": "[TF 2.0 API Docs] tf.data Add pointer to tutorials which work with r2.0", "body": "", "comments": ["Links added automatically now. Thanks"]}, {"number": 29322, "title": "[TF 2.0 API Docs] tf.image.adjust_contrast", "body": "Added a usage example in image.adjust_contrast in image_ops_impl.py\r\nIssue is given in the link https://github.com/tensorflow/tensorflow/issues/29321", "comments": ["So there's good news and bad news.\n\n:thumbsup: The good news is that everyone that needs to sign a CLA (the pull request submitter and all commit authors) have done so.  Everything is all good there.\n\n:confused: The bad news is that it appears that one or more commits were authored or co-authored by someone other than the pull request submitter.  We need to confirm that all authors are ok with their commits being contributed to this project.  Please have them confirm that here in the pull request.\n\n*Note to project maintainer: This is a terminal state, meaning the `cla/google` commit status will not change from this state. It's up to you to confirm consent of all the commit author(s), set the `cla` label to `yes` (if enabled on your project), and then merge this pull request when appropriate.*\n\n\u2139\ufe0f **Googlers: [Go here](https://goto.google.com/prinfo/https%3A%2F%2Fgithub.com%2Ftensorflow%2Ftensorflow%2Fpull%2F29322) for more info**.\n\n<!-- need_author_consent -->", "A Googler has manually verified that the CLAs look good.\n\n(Googler, please make sure the reason for overriding the CLA status is clearly documented in these comments.)\n\n\u2139\ufe0f **Googlers: [Go here](https://goto.google.com/prinfo/https%3A%2F%2Fgithub.com%2Ftensorflow%2Ftensorflow%2Fpull%2F29322) for more info**.\n\n<!-- cla_yes -->"]}, {"number": 29321, "title": "[TF 2.0 API Docs] tf.image.adjust_contrast", "body": "## URL(s) with the issue:\r\n\r\nhttps://www.tensorflow.org/versions/master/api_docs/python/tf/image/adjust_contrast\r\nhttps://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/ops/image_ops_impl.py\r\n\r\n## Description of issue (what needs changing):\r\n\r\n### Raises listed and defined\r\n\r\nRaises are not listed and defined\r\n\r\n### Usage example\r\n\r\nNo usage example has been provided\r\n\r\n### Submit a pull request?\r\n\r\nYes\r\nhttps://github.com/tensorflow/tensorflow/pull/29322", "comments": ["Closing this issue since the associated PR has been merged. Feel free to reopen if the problem still persists. Thanks!"]}, {"number": 29320, "title": "[TF 2.0 API Docs] tf.image.adjust_brightness", "body": "Added a usage example in image.adjust_brightness in image_ops_impl.py\r\nIssue is given in the link https://github.com/tensorflow/tensorflow/issues/29319", "comments": ["All (the pull request submitter and all commit authors) CLAs are signed, **but** one or more commits were authored or co-authored by someone other than the pull request submitter.\n\nWe need to confirm that all authors are ok with their commits being contributed to this project.  Please have them confirm that by leaving a comment that contains only `@googlebot I consent.` in this pull request.\n\n*Note to project maintainer:* There may be cases where the author cannot leave a comment, or the comment is not properly detected as consent.  In those cases, you can manually confirm consent of the commit author(s), and set the `cla` label to `yes` (if enabled on your project).\n\n\u2139\ufe0f **Googlers: [Go here](https://goto.google.com/prinfo/https%3A%2F%2Fgithub.com%2Ftensorflow%2Ftensorflow%2Fpull%2F29320) for more info**.\n\n<!-- need_author_consent -->", "@googlebot I consent", "CLAs look good, thanks!\n\n\u2139\ufe0f **Googlers: [Go here](https://goto.google.com/prinfo/https%3A%2F%2Fgithub.com%2Ftensorflow%2Ftensorflow%2Fpull%2F29320) for more info**.\n\n<!-- ok -->"]}, {"number": 29319, "title": "[TF 2.0 API Docs] tf.image.adjust_brightness", "body": "## URL(s) with the issue:\r\n\r\nhttps://www.tensorflow.org/versions/master/api_docs/python/tf/image/adjust_brightness\r\nhttps://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/ops/image_ops_impl.py\r\n\r\n## Description of issue (what needs changing):\r\n\r\n### Raises listed and defined\r\n\r\nRaises are not listed and defined\r\n\r\n### Usage example\r\n\r\nNo usage example has been provided\r\n\r\n### Submit a pull request?\r\n\r\nYes\r\nhttps://github.com/tensorflow/tensorflow/pull/29320", "comments": ["Closing since associated PR is merged. Thanks!"]}, {"number": 29318, "title": "Conv1D example", "body": "Add Conv1D example with simple Sequential Model and input_shape", "comments": ["Closing this PR as this not against `master`, please open a new PR against `master` \r\nCC @mihaimaruseac"]}, {"number": 29317, "title": "[TF 2.0 API Docs] tf.identity_n", "body": "## URL(s) with the issue:\r\n\r\nhttps://www.tensorflow.org/versions/master/api_docs/python/tf/identity_n\r\n\r\n## Description of issue (what needs changing):\r\n\r\n### Correct links\r\n\r\nThe path should be href, also the file it refers to does not exists\r\n\r\n### Raises listed and defined\r\n\r\nRaises are not listed and defined\r\n\r\n### Submit a pull request?\r\n\r\nNo", "comments": ["@imransalam,\r\nThe link you've provided doesn't exist anymore.\r\n\r\nCould you please take a look at the latest version of the documentation for [tf.identity_n](https://www.tensorflow.org/api_docs/python/tf/identity_n) and let us know if this is still an issue. Thanks!", "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you.\n", "Closing as stale. Please reopen if you'd like to work on this further.\n"]}, {"number": 29316, "title": "[TF 2.0 API Docs] tf.identity", "body": "Added usage example in the identity function and and added a value error raise for None input provided in the doc string and also in the code.\r\nThe related issue is \r\nhttps://github.com/tensorflow/tensorflow/issues/29315", "comments": ["Can one of the admins verify this patch?", "@imransalam Can you please resolve conflicts? Thanks!", "@imransalam thank you, it is failing doctest can you please check here for [logs](https://source.cloud.google.com/results/invocations/a50cfffd-1e55-4b87-a2ad-9079d680c470/targets/%2F%2Ftensorflow%2Ftools%2Fdocs:tf_doctest/tests).\r\n\r\nPlease run the doctest locally as mentioned here in the [contributor guidelines](https://www.tensorflow.org/community/contribute/docs_ref).", "It has been 15 days with no activity and the `awaiting response` label was assigned. Is this PR still valid? Assigning the `stalled` label. Please comment to reassure me that this is still being worked on.", "I'm going to go ahead and close this PR, because it seems to have stalled. If you're still interested in pursing this (and responding to my comments), please feel free to reopen!"]}, {"number": 29315, "title": "[TF 2.0 API Docs] tf.identity", "body": "## URL(s) with the issue:\r\n\r\nhttps://www.tensorflow.org/versions/master/api_docs/python/tf/identity\r\nhttps://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/ops/array_ops.py\r\n\r\n## Description of issue (what needs changing):\r\n\r\n### Raises listed and defined\r\n\r\nRaises are not listed and defined\r\n\r\n### Usage example\r\n\r\nNo usage example provided\r\n\r\n### Submit a pull request?\r\n\r\nYes\r\nhttps://github.com/tensorflow/tensorflow/pull/29316", "comments": ["Closing this issue since its resolved. Thanks!\r\nhttps://www.tensorflow.org/api_docs/python/tf/identity?version=stable"]}, {"number": 29314, "title": "Fixed bug in Variable assign method", "body": "@alextp , reference to #29178.\r\n\r\nPlease review changes. I think the best approach is to convert it to a TensorShape rather than giving an error. Also made a simple test to catch this error in the future.\r\n\r\nTest results for testAssignMethod:\r\n\r\nRan 1 test in 0.099s\r\nOK", "comments": ["@PiyushDatta I think the best solution would actually be to convert `self._shape` to a `tf.TensorShape` in the constructor and not during `assign`. `shape` is part of the public API of `tf.Variable`, and so having it be \"type-stable\" would be a plus for downstream libraries.\r\n\r\nSpecifically, I think changing:\r\nhttps://github.com/tensorflow/tensorflow/blob/db88fe602f290ebd98127774b375d32f5eb44f19/tensorflow/python/ops/resource_variable_ops.py#L612\r\n\r\nto something like:\r\n\r\n```python\r\nif shape is None:\r\n  self._shape = shape if isinstance(shape, tf.TensorShape) else tf.TensorShape(shape)\r\nelse:\r\n  self._shape = initial_value.shape\r\n```\r\n\r\nwould work better (I can't comment if this is the right base class to be changing though).", "@alanhdu Ahh yes, that's a much better way. It would be a plus for the downstream libraries and other methods within the class.\r\n\r\nI'll fix and test it later today after work. Thanks!", "@alextp Just fixing pylint errors, please see latest commit.\r\n\r\nPrevious errors:\r\nFAIL: Found 2 non-whitelited pylint errors:\r\ntensorflow/python/ops/resource_variable_ops.py:1146: [W0311(bad-indentation), ] Bad indentation. Found 10 spaces, expected 8\r\ntensorflow/python/kernel_tests/resource_variable_ops_test.py:582: [C0301(line-too-long), ] Line too long (91/80)", "Pretty sure these errors are not related to my changes, but if so, just let me know.", "@PiyushDatta please find the build errors here https://source.cloud.google.com/results/invocations/69263a9e-17e4-435d-865c-fb572c71cec8/log", "@rthadur can you please review the builds again. It was an internal error, which got fixed. Builds should be okay now, only the internal CI ones are failing, which are not because of these changes.\r\n\r\nLet me know if you need anything else!", "sure , let try to merge it internally , thank you", "Hi @yifeif, \r\nI think there are still some internal build errors, can you please have a look? Thank you!\r\nMainly: \"import/copybara \u2014 An error happened while migrating the change (Required)\"", "@PiyushDatta I see errors in the non-internal build as well. forwardprop_test seems to be failing on the GPU with this error\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.6/unittest/case.py\", line 59, in testPartExecutor\r\n    yield\r\n  File \"/usr/lib/python3.6/unittest/case.py\", line 605, in run\r\n    testMethod()\r\n  File \"/b/f/w/bazel-out/k8-opt/bin/tensorflow/python/eager/forwardprop_test_gpu.runfiles/absl_py/absl/testing/parameterized.py\", line 265, in bound_param_test\r\n    test_method(self, *testcase_params)\r\n  File \"/b/f/w/bazel-out/k8-opt/bin/tensorflow/python/eager/forwardprop_test_gpu.runfiles/org_tensorflow/tensorflow/python/eager/forwardprop_test.py\", line 326, in testKerasLayers\r\n    order=2)\r\n  File \"/b/f/w/bazel-out/k8-opt/bin/tensorflow/python/eager/forwardprop_test_gpu.runfiles/org_tensorflow/tensorflow/python/eager/forwardprop_test.py\", line 140, in _test_gradients\r\n    testcase.assertAllClose(num_jac, sym_jac_back, rtol=rtol, atol=atol)\r\n  File \"/b/f/w/bazel-out/k8-opt/bin/tensorflow/python/eager/forwardprop_test_gpu.runfiles/org_tensorflow/tensorflow/python/framework/test_util.py\", line 1125, in decorated\r\n    return f(*args, **kwds)\r\n  File \"/b/f/w/bazel-out/k8-opt/bin/tensorflow/python/eager/forwardprop_test_gpu.runfiles/org_tensorflow/tensorflow/python/framework/test_util.py\", line 2466, in assertAllClose\r\n    self._assertAllCloseRecursive(a, b, rtol=rtol, atol=atol, msg=msg)\r\n  File \"/b/f/w/bazel-out/k8-opt/bin/tensorflow/python/eager/forwardprop_test_gpu.runfiles/org_tensorflow/tensorflow/python/framework/test_util.py\", line 2413, in _assertAllCloseRecursive\r\n    (path_str, path_str, msg))\r\n  File \"/b/f/w/bazel-out/k8-opt/bin/tensorflow/python/eager/forwardprop_test_gpu.runfiles/org_tensorflow/tensorflow/python/framework/test_util.py\", line 2368, in _assertArrayLikeAllClose\r\n    a, b, rtol=rtol, atol=atol, err_msg=\"\\n\".join(msgs), equal_nan=True)\r\n  File \"/usr/local/lib/python3.6/dist-packages/numpy/testing/nose_tools/utils.py\", line 1396, in assert_allclose\r\n    verbose=verbose, header=header, equal_nan=equal_nan)\r\n  File \"/usr/local/lib/python3.6/dist-packages/numpy/testing/nose_tools/utils.py\", line 779, in assert_array_compare\r\n    raise AssertionError(msg)\r\nAssertionError:\r\nNot equal to tolerance rtol=0.01, atol=0.0001\r\nMismatched value: a is different from b.\r\nnot close where = (array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), array([ 0,  0,  1,  3,  3,  4,  6,  7, 11, 12, 12, 13, 14, 16, 17, 17, 18,\r\n       19, 19, 20, 21, 23, 24, 25, 25, 26, 27, 27, 28, 28, 29, 31, 31]), array([3, 4, 4, 2, 5, 5, 5, 5, 0, 0, 1, 1, 0, 5, 3, 5, 4, 3, 5, 4, 5, 5,\r\n       0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 3]))\r\nnot close lhs = [-0.00023842 -0.00023842  0.00023842 -0.00023842  0.00023842  0.00023842\r\n -0.00023842 -0.00023842  0.00023842 -0.00023842 -0.00023842  0.00023842\r\n  0.00023842 -0.00023842 -0.00023842 -0.00047684  0.00023842 -0.00023842\r\n  0.00023842 -0.00023842 -0.00023842  0.00023842 -0.00023842  0.00023842\r\n  0.00023842  0.00023842  0.00023842 -0.00023842 -0.00023842  0.00023842\r\n  0.00023842 -0.00047684  0.00023842]\r\nnot close rhs = [ 3.7252903e-09  7.5364621e-09 -2.8786111e-09 -0.0000000e+00\r\n -6.5703709e-10  4.9943186e-08 -8.9793595e-09  1.1850787e-08\r\n  2.2516321e-08 -1.8626451e-08 -1.1175871e-08  3.7252903e-09\r\n  1.8626451e-08 -4.0597794e-08  3.7252903e-09 -4.1271591e-09\r\n -7.4720514e-09 -7.4505806e-09 -4.6350308e-08 -9.8335642e-09\r\n -2.6019722e-09 -2.3952033e-08  4.4531854e-09  1.6381053e-08\r\n  4.4777888e-09  3.0752762e-08  3.2235008e-08  1.0935484e-09\r\n  3.4924597e-10 -5.5879354e-09  1.4901161e-08  1.1175871e-08\r\n  0.0000000e+00]\r\nnot close dif = [0.00023842 0.00023843 0.00023842 0.00023842 0.00023842 0.00023837\r\n 0.00023841 0.00023843 0.0002384  0.0002384  0.00023841 0.00023841\r\n 0.0002384  0.00023838 0.00023842 0.00047683 0.00023843 0.00023841\r\n 0.00023846 0.00023841 0.00023842 0.00023844 0.00023842 0.0002384\r\n 0.00023841 0.00023839 0.00023839 0.00023842 0.00023842 0.00023842\r\n 0.0002384  0.00047685 0.00023842]\r\nnot close tol = [1.00000034e-04 1.00000070e-04 1.00000027e-04 9.99999975e-05\r\n 1.00000005e-04 1.00000500e-04 1.00000085e-04 1.00000114e-04\r\n 1.00000223e-04 1.00000187e-04 1.00000107e-04 1.00000034e-04\r\n 1.00000187e-04 1.00000405e-04 1.00000034e-04 1.00000041e-04\r\n 1.00000070e-04 1.00000070e-04 1.00000463e-04 1.00000099e-04\r\n 1.00000027e-04 1.00000238e-04 1.00000041e-04 1.00000165e-04\r\n 1.00000041e-04 1.00000303e-04 1.00000318e-04 1.00000012e-04\r\n 9.99999975e-05 1.00000056e-04 1.00000143e-04 1.00000107e-04\r\n 9.99999975e-05]\r\ndtype = float32, shape = (1, 32, 6)\r\n(mismatch 17.1875%)\r\n x: array([[[-9.996890e-01, -9.377002e-01,  0.000000e+00, -2.384186e-04,\r\n         -2.384186e-04,  0.000000e+00],\r\n        [-8.749961e-01, -8.125305e-01,  0.000000e+00,  0.000000e+00,...\r\n y: array([[[-1.000000e+00, -9.374999e-01, -1.117587e-08,  3.725290e-09,\r\n          7.536462e-09,  1.286564e-08],\r\n        [-8.750000e-01, -8.124999e-01, -2.607703e-08,  3.725290e-09,...\r\n```", "@PiyushDatta can you please check latest comments ?", "It has been 14 days with no activity and the `awaiting response` label was assigned. Is this PR still valid? Assigning the `stalled` label. Please comment to reassure me that this is still being worked on.", "I'm going to go ahead and close this PR, because it seems to have stalled. If you're still interested in pursing this (and responding to my comments), please feel free to reopen!", "@rthadur \r\nHi, \r\nSorry, currently busy with work and interviews. Will re-open and look at this again in early November. Thanks."]}, {"number": 29313, "title": " Correct pylint issues", "body": "", "comments": []}, {"number": 29312, "title": "android build", "body": "Thank you for submitting a TensorFlow documentation issue. Per our GitHub\r\npolicy, we only address code/doc bugs, performance issues, feature requests, and\r\nbuild/installation issues on GitHub.\r\n\r\nThe TensorFlow docs are open source! To get involved, read the documentation\r\ncontributor guide: https://www.tensorflow.org/community/contribute/docs\r\n\r\n## URL(s) with the issue:\r\n\r\nPlease provide a link to the documentation entry, for example:\r\nhttps://www.tensorflow.org/versions/r2.0/api_docs/python/tf/MyMethod\r\n\r\n## Description of issue (what needs changing):\r\n\r\n### Clear description\r\n\r\nFor example, why should someone use this method? How is it useful?\r\n\r\n### Correct links\r\n\r\nIs the link to the source code correct?\r\n\r\n### Parameters defined\r\n\r\nAre all parameters defined and formatted correctly?\r\n\r\n### Returns defined\r\n\r\nAre return values defined?\r\n\r\n### Raises listed and defined\r\n\r\nAre the errors defined? For example,\r\nhttps://www.tensorflow.org/versions/r2.0/api_docs/python/tf/feature_column/categorical_column_with_vocabulary_file#raises\r\n\r\n### Usage example\r\n\r\nIs there a usage example?\r\n\r\n### Request visuals, if applicable\r\n\r\nAre there currently visuals? If not, will it clarify the content?\r\n\r\n### Submit a pull request?\r\n\r\nAre you planning to also submit a pull request to fix the issue? See the docs\r\ncontributor guide: https://www.tensorflow.org/community/contribute/docs and the\r\ndocs style guide: https://www.tensorflow.org/community/contribute/docs_style\r\n", "comments": []}, {"number": 29311, "title": "[TF 2.0 API Docs] tf.RegisterGradient", "body": "Related with https://github.com/tensorflow/tensorflow/issues/29309\r\n\r\n`tf.RegisterGradient`'s `__init__` can raise TypeError. \r\n\r\nSo Added it.", "comments": ["\nThanks for your pull request. It looks like this may be your first contribution to a Google open source project (if not, look below for help). Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).\n\n:memo: **Please visit <https://cla.developers.google.com/> to sign.**\n\nOnce you've signed (or fixed any issues), please reply here (e.g. `I signed it!`) and we'll verify it.\n\n----\n\n#### What to do if you already signed the CLA\n\n##### Individual signers\n\n*   It's possible we don't have your GitHub username or you're using a different email address on your commit. Check [your existing CLA data](https://cla.developers.google.com/clas) and verify that your [email is set on your git commits](https://help.github.com/articles/setting-your-email-in-git/).\n\n##### Corporate signers\n\n*   Your company has a Point of Contact who decides which employees are authorized to participate. Ask your POC to be added to the group of authorized contributors. If you don't know who your Point of Contact is, direct the Google project maintainer to [go/cla#troubleshoot](http://go/cla#troubleshoot) ([Public version](https://opensource.google.com/docs/cla/#troubleshoot)).\n*   The email used to register you as an authorized contributor must be the email used for the Git commit. Check [your existing CLA data](https://cla.developers.google.com/clas) and verify that your [email is set on your git commits](https://help.github.com/articles/setting-your-email-in-git/).\n*   The email used to register you as an authorized contributor must also be [attached to your GitHub account](https://github.com/settings/emails).\n\t\t\n\n\u2139\ufe0f **Googlers: [Go here](https://goto.google.com/prinfo/https%3A%2F%2Fgithub.com%2Ftensorflow%2Ftensorflow%2Fpull%2F29311) for more info**.\n\n<!-- need_sender_cla -->", "I signed it!", "CLAs look good, thanks!\n\n\u2139\ufe0f **Googlers: [Go here](https://goto.google.com/prinfo/https%3A%2F%2Fgithub.com%2Ftensorflow%2Ftensorflow%2Fpull%2F29311) for more info**.\n\n<!-- ok -->"]}, {"number": 29310, "title": "keras.model.load_weights does not consider custom model(layer) ", "body": "**System information**\r\n- Have I written custom code (as opposed to using a stock example script provided in TensorFlow):Yes\r\n- OS Platform and Distribution (e.g., Linux Ubuntu 16.04):Ubuntu 18.04\r\n- TensorFlow installed from (source or binary): conda/Anaconda\r\n- TensorFlow version (use command below):1.13 (Issue still existed in the latest source code)\r\n\r\n\r\n\r\nI failed to load the official **Resnet** h5 weights with self implemented **Resnet** using the **tf.keras.model**.\r\n\r\nI found the behaviour of **load_weights** in **network.py** does not considered the sub **tf.keras.model**.\r\n\r\nFor example, the **Resnet** has a **ConvBlock** and a **IdentityBlock**. Instead of use a **function** to define them, I used **tf.keras.model** to define them, so it followed the latest standard.\r\n\r\nInstead of simply pass the **self.layers** to **load_weights_from_hdf5_group_by_name**.  The **load_weights** function is **network.py** should collect all layers inside the sub model, then pass to **load_weights_from_hdf5_group_by_name**.\r\n\r\n[network.py](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/keras/engine/network.py) line 1415\r\n\r\n\r\n\r\nSuggested naive fix:\r\n\r\n\r\n    def get_all_layers (model : tf.keras.Model):\r\n\r\n        layers = []\r\n\r\n        for layer in model.layers:\r\n            if isinstance(layer, tf.keras.Model):\r\n                layers.extend(get_all_layers(layer))\r\n            else:\r\n                layers.append(layer)\r\n\r\n        return layers\r\n\r\n\r\n\r\n", "comments": ["Confirmed again, this issue is existed", "Will it be possible to provide a minimal code snippet that can reproduce the issue. It will really help us to understand the issue more clearly. Thanks!", "For example \r\n\r\n```\r\nimport tensorflow as tf\r\n\r\nclass ConvBlock(tf.keras.Model):\r\n\r\n    def __init__(self, kernel_size, filters, stage, block, strides=(2, 2), weight_decay = 0., momentum = 0.9):\r\n\r\n        super(ConvBlock, self).__init__()\r\n\r\n        filters1, filters2, filters3 = filters\r\n\r\n        conv_name_base = 'res' + str(stage) + block + '_branch'\r\n        bn_name_base = 'bn' + str(stage) + block + '_branch'\r\n\r\n        self.conv2a = tf.keras.layers.Conv2D(filters1, (1, 1), strides=strides, kernel_initializer='he_normal', name=conv_name_base + '2a', kernel_regularizer=tf.keras.regularizers.l2(weight_decay))\r\n        self.bn2a   = tf.keras.layers.BatchNormalization(name=bn_name_base + '2a', momentum=momentum)\r\n\r\n        # ...........................................\r\n\r\n    def call(self, input):\r\n\r\n        #............................................\r\n\r\n\r\nclass Resnet (tf.keras.Model):\r\n\r\n    def __init__ (self, weight_decay = 0., momentum = 0.9):\r\n\r\n        super(Resnet, self).__init__()\r\n\r\n        self.conv1_pad  = tf.keras.layers.ZeroPadding2D(padding=(3, 3), name='conv1_pad')\r\n        self.conv1      = tf.keras.layers.Conv2D(64, (7, 7), strides=(2, 2), padding='valid', kernel_initializer='he_normal', name='conv1', kernel_regularizer=tf.keras.regularizers.l2(weight_decay))\r\n        self.bn_conv1   = tf.keras.layers.BatchNormalization(name='bn_conv1', momentum=momentum)\r\n\r\n        self.pool1_pad  = tf.keras.layers.ZeroPadding2D(padding=(1, 1), name='pool1_pad')\r\n        self.pool1      = tf.keras.layers.MaxPooling2D((3, 3), strides=(2, 2))\r\n        \r\n        # SubModel Weights not loaded\r\n        self.conv_block2a = ConvBlock(3, [64, 64, 256], stage=2, block='a', strides=(1, 1))   \r\n        \r\n        #...............................................\r\n\r\n\r\n# Test code \r\n\r\nresnet = Resnet()\r\nresnet(tf.zeros([1, 512, 512, 3]))\r\nresnet.load_weights(\"resnet50_weights_tf_dim_ordering_tf_kernels_notop.h5\", by_name=True)\r\n\r\n```", "The **tf.keras.Model.load_weights** will not load the weights for the ConvBlock in above code. Because the **Load_weights** only passed the **self.layers** to **load_weights_from_hdf5_group_by_name**\r\n\r\n[network.py](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/keras/engine/network.py) 1415", "@edwardyehuang Can you provide a standalone code to reproduce the issue? The current code shows `NotImplementedError: When subclassing the `Model` class, you should implement a `call` method.`. Thanks!", "> \r\n> \r\n> @edwardyehuang Can you provide a standalone code to reproduce the issue? The current code shows `NotImplementedError: When subclassing the `Model`class, you should implement a`call` method.`. Thanks!\r\n\r\nThe example above is not a full code", "\r\n[resnet.zip](https://github.com/tensorflow/tensorflow/files/3429272/resnet.zip)\r\n", "Cannot believe you guys still cannot understand my issue...\r\nFor example, \r\nConv2d is the subclass of tf.keras.layer \r\nResnet and ConvBlock are the subclass of tf.keras.Model\r\nA Resnet class contains Conv2d and ConvBlock instances\r\nA ConvBlock contains Conv2d instances\r\nWhen doing the load h5 weight by name for Resnet. It will only load the weights for the tf.keras.layer instances in Resnet. The tf.keras.layer instances in ConvBlock are ignored", "Hmm...AFAIK .layers has issues for functional and subclassed models. But if with the solution you proposed it works fine, then we'd appreciate if you want to contribute.", "#31049 ", "Closing this. Let's move discussion to the PR.", "Are you satisfied with the resolution of your issue?\n<a href=\"https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&entry.2137816233=29310\">Yes</a>\n<a href=\"https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&entry.2137816233=29310\">No</a>\n", "@edwardyehuang\r\nit seems that  load_weights(.h5, by_name=True) not work when changing the one layer of  subclassed model name(in faster rcnn) ,it still raise erro about shape dismatch:\r\n```\r\nValueError: Layer #4 (named \"b_box_head\"), weight <tf.Variable 'faster_rcnn/b_box_head/new_rcnn_class_logits/kernel:0' shape=(1024, 3) dtype=float32, numpy=\r\narray([[ 0.01749247,  0.02859198, -0.05616229],\r\n       [-0.02462629, -0.00092562,  0.01323454],\r\n       [-0.00727267,  0.06154063, -0.04503936],\r\n       ...,\r\n       [-0.00280149,  0.07457583,  0.00443103],\r\n       [-0.01985164,  0.05016208,  0.01354645],\r\n       [-0.05778077, -0.00505048,  0.04575966]], dtype=float32)> has shape (1024, 3), but the saved weight has shape (1024, 81).\r\n\r\n```\r\nLayer #4 (named \"b_box_head\") including some layers, and i change the one layer name from 'rcnn_class_logits' to 'new_rcnn_class_logits' according to the KERAS site, but when loading, it still load the weigths of 'rcnn_class_logits', any helps? thanks\r\n\r\nand i can get the weights .h5 name\r\n```\r\nprint(f.get(\"b_box_head/rcnn_class_logits/kernel:0\"))\r\n<HDF5 dataset \"kernel:0\": shape (1024, 81), type \"<f4\">\r\n```\r\nubuntu 16 +python 3 + tf2"]}, {"number": 29309, "title": "[TF 2.0 API Docs] tf.RegisterGradient", "body": "## URL(s) with the issue:\r\n\r\nhttps://www.tensorflow.org/versions/r2.0/api_docs/python/tf/RegisterGradient\r\n\r\n## Description of issue (what needs changing):\r\n\r\n### Raises listed and defined\r\n\r\n__init__ method can return __TypeError__ but not listed\r\n", "comments": ["Close."]}, {"number": 29308, "title": "[TF1.13] gate order in tf.keras.layers.cudnnlstm", "body": "There is a kernel [input_dim, hid_dim * 4] matrix and recurrent kernel [hid_dim, hid_dim * 4] matrix in cudnnlstm.\r\n\r\n**My question is what is the order of gate input, forget, new, output in the kernel and recurrent kernel?\r\n[input, forget, new, output]**\r\n\r\nI would really appreciate it since I am transfering weights from BasicLSTMCell kernel matrix.\r\nI would also like to confirm the gate order in BasicLSTMCell kernel [input_dim + hid_dim, hid_dim * 4] is \r\n[input, new, forget, output]\r\n\r\nThank you!\r\n", "comments": ["@edchengg Could you provide more details about the issue and context? Thanks!", "@gadagashwini \r\n\r\nI am referring to \r\nhttps://github.com/tensorflow/tensorflow/blob/r1.13/tensorflow/python/keras/layers/cudnn_recurrent.py\r\n\r\nL473:\r\n\r\n`params = recurrent._canonical_to_params(    # pylint: disable=protected-access\r\n        weights=[\r\n            self.kernel[:, :self.units],\r\n            self.kernel[:, self.units:self.units * 2],\r\n            self.kernel[:, self.units * 2:self.units * 3],\r\n            self.kernel[:, self.units * 3:],\r\n            self.recurrent_kernel[:, :self.units],\r\n            self.recurrent_kernel[:, self.units:self.units * 2],\r\n            self.recurrent_kernel[:, self.units * 2:self.units * 3],\r\n            self.recurrent_kernel[:, self.units * 3:],\r\n        ],\r\n        biases=[\r\n            self.bias[:self.units],\r\n            self.bias[self.units:self.units * 2],\r\n            self.bias[self.units * 2:self.units * 3],\r\n            self.bias[self.units * 3:self.units * 4],\r\n            self.bias[self.units * 4:self.units * 5],\r\n            self.bias[self.units * 5:self.units * 6],\r\n            self.bias[self.units * 6:self.units * 7],\r\n            self.bias[self.units * 7:],\r\n        ],\r\n        shape=self._vector_shape)`\r\n\r\nIt is not clear which gate(input, forget, new, output) params is self.kernel[:, :] referring to in the cudnnLSTM.\r\n\r\nThank you.", "There are 3 fused weights in keras LSTM layer, kernel, recurrent_kernel, and bias. Each of the fused weights are in IFCO order (input, forget, carry, output). \r\n\r\nBasicLSTMCell is existing TF code have two fused weights: kernel and bias. The kernel here is the combination of kernel and recurrent kernel as keras layer, which is concat on dim 0. More importantly, the order of the fused kernel is ICFO (input, carry, forget, output).\r\n\r\nIf you want to converting your BasicLSTMCell weights to keras format, you need to first split the kernel into 2 parts, and also switch the carry and forget gate.", "I have solved this issue by myself.\r\nThe gate order in basiclstmcell is [input, carry, forget, output]\r\nthe gate order in tf.keras.layers.cudnnlstm is [input, forget, carry, output]\r\n\r\nWe need to further convert the weight matrix for each gate when transferring from basiclstmcell to tf.keras.layers.cudnnlstmcell.\r\n\r\nWith square matrix: we can use transpose.\r\nWith matrix with size [row, col] (for example, input kernel)\r\nwe need to do the following:\r\n[[0, 1, 2, 3],        -->        [[0, 4, 1, 5],\r\n  [4, 5, 6, 7]] .     -->  [2, 6, 3, 7]]\r\n\r\n", "@edchengg Thank you so much!"]}, {"number": 29307, "title": "[TF 2.0 API Docs] tf.estimator.VocabInfo", "body": "## URL(s) with the issue:\r\n\r\nhttps://www.tensorflow.org/versions/r2.0/api_docs/python/tf/estimator/VocabInfo\r\n\r\n## Description of issue (what needs changing):\r\n\r\n### Clear description\r\n\r\nThis API Documentation does not state when or when not to use this symbol. The description lacks details specific to the desired use case. \r\n\r\n### Correct links\r\n\r\nThe link to the source code is correct.\r\n\r\n### Parameters defined\r\n\r\nAll of the parameters are defined and formatted correctly.\r\n\r\n### Returns defined\r\n\r\nReturn values are not defined.\r\n\r\n### Raises listed and defined\r\n\r\nErrors are not defined.\r\n\r\n### Usage example\r\n\r\nThe API Symbol also doesn't contain well-documented code sample(s). The current code samples provided are missing concise explanations. For example, why would you use the different backup initializers or invocations?\r\n\r\n### Request visuals, if applicable\r\n\r\nNo visuals specified.\r\n\r\n### Submit a pull request?\r\n\r\nYes, I've created a pull request.\r\nhttps://github.com/tensorflow/tensorflow/pull/29520\r\n", "comments": ["Can you please help us to reference corresponding PR raised on master branch. Thanks!", "@achandraa I've updated the pull request to https://github.com/tensorflow/tensorflow/pull/29520", "@eashtianjr : Thanks for the update.", "Closing the issue since PR is merged to master. Thanks!"]}, {"number": 29306, "title": "Fix MutableHashTable and DenseHashTable missing name parameter", "body": "When do save and restore with only the hash table, it will cause following problem.\r\nThis PR is going to fix the issue and add two related test cases.\r\n\r\n```\r\n    save = saver.Saver([table])\r\n  File \"/usr/local/lib/python3.6/site-packages/tensorflow/python/training/saver.py\", line 832, in __init__\r\n    self.build()\r\n  File \"/usr/local/lib/python3.6/site-packages/tensorflow/python/training/saver.py\", line 844, in build\r\n    self._build(self._filename, build_save=True, build_restore=True)\r\n  File \"/usr/local/lib/python3.6/site-packages/tensorflow/python/training/saver.py\", line 881, in _build\r\n    build_save=build_save, build_restore=build_restore)\r\n  File \"/usr/local/lib/python3.6/site-packages/tensorflow/python/training/saver.py\", line 487, in _build_internal\r\n    names_to_saveables)\r\n  File \"/usr/local/lib/python3.6/site-packages/tensorflow/python/training/saving/saveable_object_util.py\", line 331, in validate_and_slice_inputs\r\n    names_to_saveables = op_list_to_dict(names_to_saveables)\r\n  File \"/usr/local/lib/python3.6/site-packages/tensorflow/python/training/saving/saveable_object_util.py\", line 257, in op_list_to_dict\r\n    for factory in var._gather_saveables_for_checkpoint().values()]\r\n  File \"/usr/local/lib/python3.6/site-packages/tensorflow/python/training/saving/saveable_object_util.py\", line 257, in <listcomp>\r\n    for factory in var._gather_saveables_for_checkpoint().values()]\r\nTypeError: __init__() missing 1 required positional argument: 'name'\r\n```", "comments": ["\nThanks for your pull request. It looks like this may be your first contribution to a Google open source project (if not, look below for help). Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).\n\n:memo: **Please visit <https://cla.developers.google.com/> to sign.**\n\nOnce you've signed (or fixed any issues), please reply here (e.g. `I signed it!`) and we'll verify it.\n\n----\n\n#### What to do if you already signed the CLA\n\n##### Individual signers\n\n*   It's possible we don't have your GitHub username or you're using a different email address on your commit. Check [your existing CLA data](https://cla.developers.google.com/clas) and verify that your [email is set on your git commits](https://help.github.com/articles/setting-your-email-in-git/).\n\n##### Corporate signers\n\n*   Your company has a Point of Contact who decides which employees are authorized to participate. Ask your POC to be added to the group of authorized contributors. If you don't know who your Point of Contact is, direct the Google project maintainer to [go/cla#troubleshoot](http://go/cla#troubleshoot) ([Public version](https://opensource.google.com/docs/cla/#troubleshoot)).\n*   The email used to register you as an authorized contributor must be the email used for the Git commit. Check [your existing CLA data](https://cla.developers.google.com/clas) and verify that your [email is set on your git commits](https://help.github.com/articles/setting-your-email-in-git/).\n*   The email used to register you as an authorized contributor must also be [attached to your GitHub account](https://github.com/settings/emails).\n\t\t\n\n\u2139\ufe0f **Googlers: [Go here](https://goto.google.com/prinfo/https%3A%2F%2Fgithub.com%2Ftensorflow%2Ftensorflow%2Fpull%2F29306) for more info**.\n\n<!-- need_sender_cla -->", "CLAs look good, thanks!\n\n\u2139\ufe0f **Googlers: [Go here](https://goto.google.com/prinfo/https%3A%2F%2Fgithub.com%2Ftensorflow%2Ftensorflow%2Fpull%2F29306) for more info**.\n\n<!-- ok -->"]}, {"number": 29305, "title": "Add python syntax formatting for code samples, returns value and errors raised", "body": "", "comments": ["\nThanks for your pull request. It looks like this may be your first contribution to a Google open source project (if not, look below for help). Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).\n\n:memo: **Please visit <https://cla.developers.google.com/> to sign.**\n\nOnce you've signed (or fixed any issues), please reply here (e.g. `I signed it!`) and we'll verify it.\n\n----\n\n#### What to do if you already signed the CLA\n\n##### Individual signers\n\n*   It's possible we don't have your GitHub username or you're using a different email address on your commit. Check [your existing CLA data](https://cla.developers.google.com/clas) and verify that your [email is set on your git commits](https://help.github.com/articles/setting-your-email-in-git/).\n\n##### Corporate signers\n\n*   Your company has a Point of Contact who decides which employees are authorized to participate. Ask your POC to be added to the group of authorized contributors. If you don't know who your Point of Contact is, direct the Google project maintainer to [go/cla#troubleshoot](http://go/cla#troubleshoot) ([Public version](https://opensource.google.com/docs/cla/#troubleshoot)).\n*   The email used to register you as an authorized contributor must be the email used for the Git commit. Check [your existing CLA data](https://cla.developers.google.com/clas) and verify that your [email is set on your git commits](https://help.github.com/articles/setting-your-email-in-git/).\n*   The email used to register you as an authorized contributor must also be [attached to your GitHub account](https://github.com/settings/emails).\n\t\t\n\n\u2139\ufe0f **Googlers: [Go here](https://goto.google.com/prinfo/https%3A%2F%2Fgithub.com%2Ftensorflow%2Ftensorflow%2Fpull%2F29305) for more info**.\n\n<!-- need_sender_cla -->", "I signed it!", "CLAs look good, thanks!\n\n\u2139\ufe0f **Googlers: [Go here](https://goto.google.com/prinfo/https%3A%2F%2Fgithub.com%2Ftensorflow%2Ftensorflow%2Fpull%2F29305) for more info**.\n\n<!-- ok -->", "Closing this PR as this not against `master`, please open a new PR against `master` \r\nCC @mihaimaruseac", "@rthadur I created a new PR against `master` - https://github.com/tensorflow/tensorflow/pull/29520\r\nCC @mihaimaruseac "]}, {"number": 29304, "title": "GFile gcs_file_system crashes with bad header", "body": "**System information**\r\n- OS Platform and Distribution: MacOS Mojave 10.14.3\r\n- TensorFlow installed from (source or binary): binary\r\n- TensorFlow version: `0.12.0-rc1-7-ga13284f-dirty 0.12.0`\r\n- Python version: Python 3.7.0\r\n\r\n\r\n```\r\nimport tensorflow as tf\r\nwith tf.gfile.Open('gs://bucket_name/file_name') as f:\r\n    f.write('foo\\n')\r\n```\r\ncrashes with error \r\n```\r\nTraceback (most recent call last):\r\n  File \"/tmp/foo.py\", line 4, in <module>\r\n    f.write('foo\\n')\r\n  File \"/usr/local/lib/python3.7/site-packages/tensorflow/python/lib/io/file_io.py\", line 150, in __exit__\r\n    self.close()\r\n  File \"/usr/local/lib/python3.7/site-packages/tensorflow/python/lib/io/file_io.py\", line 182, in close\r\n    pywrap_tensorflow.Set_TF_Status_from_Status(status, ret_status)\r\n  File \"/usr/local/Cellar/python/3.7.0/Frameworks/Python.framework/Versions/3.7/lib/python3.7/contextlib.py\", line 119, in __exit__\r\n    next(self.gen)\r\n  File \"/usr/local/lib/python3.7/site-packages/tensorflow/python/framework/errors_impl.py\", line 469, in raise_exception_on_not_ok_status\r\n    pywrap_tensorflow.TF_GetCode(status))\r\ntensorflow.python.framework.errors_impl.InternalError: Unexpected response from GCS when writing to gs://bucket_name/file_name: 'Location' header not returned.\r\n```\r\n\r\nThis seems to be due to \r\nhttps://github.com/tensorflow/tensorflow/blob/efdc88cf13827a22fbb7f4d58a14a3cfe57fd21c/tensorflow/core/platform/cloud/gcs_file_system.cc#L509\r\nwhich checks for the \"Location\" header (with specifically a capital 'L').\r\n\r\nHowever on my system:\r\n`curl 'https://www.googleapis.com/upload/storage/v1/b/bucket_name/o?uploadType=resumable&name=file_name' -XPOST -H 'X-Upload-Content-Length: 10' -H'Authorization: Bearer TOKEN' --verbose`\r\nreturns the header \"location\" with a lowercase 'l', which causes the above error.\r\n\r\nChanging that byte from \"L\" to \"l\" in the tensorflow `so` file fixes this for me (although that code is currently running successfully on other machines, so I'm not sure what makes mine special).", "comments": ["@rinugun Can you please take a look? Thanks!", "@alexrenda Hi, I've encountered a similar issue, but it happens only when using TPUs where SummaryWriter throws the same exception. Have you managed to sort it out in your case?", "tf.gfile has been moved under [tf.io.gfile,](https://www.tensorflow.org/api_docs/python/tf/io/gfile), could you please try in the latest version and check if the error still persists. Thanks!", "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you.\n", "Closing as stale. Please reopen if you'd like to work on this further.\n", "Are you satisfied with the resolution of your issue?\n<a href=\"https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&entry.2137816233=https://github.com/tensorflow/tensorflow/issues/29304\">Yes</a>\n<a href=\"https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&entry.2137816233=https://github.com/tensorflow/tensorflow/issues/29304\">No</a>\n"]}, {"number": 29303, "title": "Update comments for functional_ops.py", "body": "", "comments": ["\nThanks for your pull request. It looks like this may be your first contribution to a Google open source project (if not, look below for help). Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).\n\n:memo: **Please visit <https://cla.developers.google.com/> to sign.**\n\nOnce you've signed (or fixed any issues), please reply here (e.g. `I signed it!`) and we'll verify it.\n\n----\n\n#### What to do if you already signed the CLA\n\n##### Individual signers\n\n*   It's possible we don't have your GitHub username or you're using a different email address on your commit. Check [your existing CLA data](https://cla.developers.google.com/clas) and verify that your [email is set on your git commits](https://help.github.com/articles/setting-your-email-in-git/).\n\n##### Corporate signers\n\n*   Your company has a Point of Contact who decides which employees are authorized to participate. Ask your POC to be added to the group of authorized contributors. If you don't know who your Point of Contact is, direct the Google project maintainer to [go/cla#troubleshoot](http://go/cla#troubleshoot) ([Public version](https://opensource.google.com/docs/cla/#troubleshoot)).\n*   The email used to register you as an authorized contributor must be the email used for the Git commit. Check [your existing CLA data](https://cla.developers.google.com/clas) and verify that your [email is set on your git commits](https://help.github.com/articles/setting-your-email-in-git/).\n*   The email used to register you as an authorized contributor must also be [attached to your GitHub account](https://github.com/settings/emails).\n\t\t\n\n\u2139\ufe0f **Googlers: [Go here](https://goto.google.com/prinfo/https%3A%2F%2Fgithub.com%2Ftensorflow%2Ftensorflow%2Fpull%2F29303) for more info**.\n\n<!-- need_sender_cla -->", "I signed it!", "CLAs look good, thanks!\n\n\u2139\ufe0f **Googlers: [Go here](https://goto.google.com/prinfo/https%3A%2F%2Fgithub.com%2Ftensorflow%2Ftensorflow%2Fpull%2F29303) for more info**.\n\n<!-- ok -->", "Closing this PR as this not against `master`, please open a new PR against `master` \r\nCC @mihaimaruseac"]}, {"number": 29302, "title": "Fixed python comments", "body": "", "comments": ["\nThanks for your pull request. It looks like this may be your first contribution to a Google open source project (if not, look below for help). Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).\n\n:memo: **Please visit <https://cla.developers.google.com/> to sign.**\n\nOnce you've signed (or fixed any issues), please reply here (e.g. `I signed it!`) and we'll verify it.\n\n----\n\n#### What to do if you already signed the CLA\n\n##### Individual signers\n\n*   It's possible we don't have your GitHub username or you're using a different email address on your commit. Check [your existing CLA data](https://cla.developers.google.com/clas) and verify that your [email is set on your git commits](https://help.github.com/articles/setting-your-email-in-git/).\n\n##### Corporate signers\n\n*   Your company has a Point of Contact who decides which employees are authorized to participate. Ask your POC to be added to the group of authorized contributors. If you don't know who your Point of Contact is, direct the Google project maintainer to [go/cla#troubleshoot](http://go/cla#troubleshoot) ([Public version](https://opensource.google.com/docs/cla/#troubleshoot)).\n*   The email used to register you as an authorized contributor must be the email used for the Git commit. Check [your existing CLA data](https://cla.developers.google.com/clas) and verify that your [email is set on your git commits](https://help.github.com/articles/setting-your-email-in-git/).\n*   The email used to register you as an authorized contributor must also be [attached to your GitHub account](https://github.com/settings/emails).\n\t\t\n\n\u2139\ufe0f **Googlers: [Go here](https://goto.google.com/prinfo/https%3A%2F%2Fgithub.com%2Ftensorflow%2Ftensorflow%2Fpull%2F29302) for more info**.\n\n<!-- need_sender_cla -->", "I signed it!", "CLAs look good, thanks!\n\n\u2139\ufe0f **Googlers: [Go here](https://goto.google.com/prinfo/https%3A%2F%2Fgithub.com%2Ftensorflow%2Ftensorflow%2Fpull%2F29302) for more info**.\n\n<!-- ok -->", "Closing this PR as this not against `master`, please open a new PR against `master` \r\nCC @mihaimaruseac"]}, {"number": 29301, "title": "[TF 2.0 API Docs] tf.keras.metrics.AUC", "body": "Highlight codes in the description", "comments": ["\nThanks for your pull request. It looks like this may be your first contribution to a Google open source project (if not, look below for help). Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).\n\n:memo: **Please visit <https://cla.developers.google.com/> to sign.**\n\nOnce you've signed (or fixed any issues), please reply here (e.g. `I signed it!`) and we'll verify it.\n\n----\n\n#### What to do if you already signed the CLA\n\n##### Individual signers\n\n*   It's possible we don't have your GitHub username or you're using a different email address on your commit. Check [your existing CLA data](https://cla.developers.google.com/clas) and verify that your [email is set on your git commits](https://help.github.com/articles/setting-your-email-in-git/).\n\n##### Corporate signers\n\n*   Your company has a Point of Contact who decides which employees are authorized to participate. Ask your POC to be added to the group of authorized contributors. If you don't know who your Point of Contact is, direct the Google project maintainer to [go/cla#troubleshoot](http://go/cla#troubleshoot) ([Public version](https://opensource.google.com/docs/cla/#troubleshoot)).\n*   The email used to register you as an authorized contributor must be the email used for the Git commit. Check [your existing CLA data](https://cla.developers.google.com/clas) and verify that your [email is set on your git commits](https://help.github.com/articles/setting-your-email-in-git/).\n*   The email used to register you as an authorized contributor must also be [attached to your GitHub account](https://github.com/settings/emails).\n\t\t\n\n\u2139\ufe0f **Googlers: [Go here](https://goto.google.com/prinfo/https%3A%2F%2Fgithub.com%2Ftensorflow%2Ftensorflow%2Fpull%2F29301) for more info**.\n\n<!-- need_sender_cla -->", "I signed it!", "CLAs look good, thanks!\n\n\u2139\ufe0f **Googlers: [Go here](https://goto.google.com/prinfo/https%3A%2F%2Fgithub.com%2Ftensorflow%2Ftensorflow%2Fpull%2F29301) for more info**.\n\n<!-- ok -->", "Closing this PR as this not against `master`, please open a new PR against `master` \r\nCC @mihaimaruseac"]}, {"number": 29300, "title": "Added an example to tf.keras.backend.categorical_crossentropy", "body": "", "comments": ["Closing this PR as this not against `master`, please open a new PR against `master` \r\nCC @mihaimaruseac", "@rthadur Is it ok to merge to master even though it's written for the 2.0 docs? \r\nSorry, new to contributing and not sure what to do.", "please submit docs changes to [here](https://github.com/tensorflow/docs) ", "@eito-fis Yes, anything that touches code should go on master. The 2.0 branch is going to be forwarded several times until the first RC. Before the first RC, due to forwarding, any commits on the branch will get lost at every forward. After the RC, all the commits to the branch are cherry-picks from master.", "Thanks! Remade the PR [here](https://github.com/tensorflow/tensorflow/pull/29563)."]}, {"number": 29299, "title": "Better description", "body": "Better description of type of error raised", "comments": ["Closing this PR as this not against `master`, please open a new PR against `master` \r\nCC @mihaimaruseac"]}]