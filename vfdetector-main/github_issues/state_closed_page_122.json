[{"number": 51304, "title": "Fix a null pointer exception in SVDF", "body": "This is due to not checking that `GetVariableInput` returns non-null tensor.\r\n\r\nAlso fix a potential null pointer exception in `GetVariableInput`.\r\n\r\nPiperOrigin-RevId: 385160147\r\nChange-Id: Iadf3f0705b036a9014d27caa5a8bbd91f4c4c401", "comments": []}, {"number": 51303, "title": "Fix a null pointer exception in SVDF", "body": "This is due to not checking that `GetVariableInput` returns non-null tensor.\r\n\r\nAlso fix a potential null pointer exception in `GetVariableInput`.\r\n\r\nPiperOrigin-RevId: 385160147\r\nChange-Id: Iadf3f0705b036a9014d27caa5a8bbd91f4c4c401", "comments": []}, {"number": 51302, "title": "Prevent division by 0 in `fully_connected.cc`", "body": "PiperOrigin-RevId: 385137282\r\nChange-Id: If201e69b6e0048f0be001330b4b977e2b46db2cb", "comments": []}, {"number": 51301, "title": "Prevent division by 0 in `fully_connected.cc`", "body": "PiperOrigin-RevId: 385137282\r\nChange-Id: If201e69b6e0048f0be001330b4b977e2b46db2cb", "comments": []}, {"number": 51300, "title": "Prevent division by 0 in `fully_connected.cc`", "body": "PiperOrigin-RevId: 385137282\r\nChange-Id: If201e69b6e0048f0be001330b4b977e2b46db2cb", "comments": []}, {"number": 51299, "title": "Fix bug that could cause map_fn to produce incorrect results (rather \u2026", "body": "\u2026than an error)\r\n\r\nwhen mapping over a ragged tensor with an inappropriate fn_output_signature.  (Note: there are cases where the default value for fn_output_signature is not appropriate, so the user needs to explicitly specify the correct output signature.)\r\n\r\nPiperOrigin-RevId: 387606546\r\nChange-Id: Ib4ea27b9634e6ab413f211cfe809a69a90f0e2cd", "comments": []}, {"number": 51298, "title": "Fix bug that could cause map_fn to produce incorrect results (rather \u2026", "body": "\u2026than an error)\r\n\r\nwhen mapping over a ragged tensor with an inappropriate fn_output_signature.  (Note: there are cases where the default value for fn_output_signature is not appropriate, so the user needs to explicitly specify the correct output signature.)\r\n\r\nPiperOrigin-RevId: 387606546\r\nChange-Id: Ib4ea27b9634e6ab413f211cfe809a69a90f0e2cd", "comments": []}, {"number": 51297, "title": "Fix bug that could cause map_fn to produce incorrect results (rather \u2026", "body": "\u2026than an error)\r\n\r\nwhen mapping over a ragged tensor with an inappropriate fn_output_signature.  (Note: there are cases where the default value for fn_output_signature is not appropriate, so the user needs to explicitly specify the correct output signature.)\r\n\r\nPiperOrigin-RevId: 387606546\r\nChange-Id: Ib4ea27b9634e6ab413f211cfe809a69a90f0e2cd", "comments": []}, {"number": 51296, "title": "Use the safer `safe_load` function instead of `unsafe_load` when poss\u2026", "body": "\u2026ible\r\n\r\nThere is no need to open ourselves up to arbitrary code execution, especially since this is not in a performance critical loop, so we can take the slowdown due to safety.\r\n\r\nPiperOrigin-RevId: 388501098\r\nChange-Id: I3434318a5e07a798490533b554f46752397837e5", "comments": []}, {"number": 51295, "title": "Use the safer `safe_load` function instead of `unsafe_load` when poss\u2026", "body": "\u2026ible\r\n\r\nThere is no need to open ourselves up to arbitrary code execution, especially since this is not in a performance critical loop, so we can take the slowdown due to safety.\r\n\r\nPiperOrigin-RevId: 388501098\r\nChange-Id: I3434318a5e07a798490533b554f46752397837e5", "comments": []}, {"number": 51294, "title": "Use the safer `safe_load` function instead of `unsafe_load` when poss\u2026", "body": "\u2026ible\r\n\r\nThere is no need to open ourselves up to arbitrary code execution, especially since this is not in a performance critical loop, so we can take the slowdown due to safety.\r\n\r\nPiperOrigin-RevId: 388501098\r\nChange-Id: I3434318a5e07a798490533b554f46752397837e5", "comments": []}, {"number": 51293, "title": "Use the safer `safe_load` function instead of `unsafe_load` when poss\u2026", "body": "\u2026ible\r\n\r\nThere is no need to open ourselves up to arbitrary code execution, especially since this is not in a performance critical loop, so we can take the slowdown due to safety.\r\n\r\nPiperOrigin-RevId: 388501098\r\nChange-Id: I3434318a5e07a798490533b554f46752397837e5", "comments": []}, {"number": 51292, "title": "Fix a shape inference issue leading to nullptr deref.", "body": "PiperOrigin-RevId: 387712259\r\nChange-Id: I7e670772b259c068a501a187cd89f18773bb95a1", "comments": []}, {"number": 51291, "title": "Fix a shape inference issue leading to nullptr deref.", "body": "PiperOrigin-RevId: 387712259\r\nChange-Id: I7e670772b259c068a501a187cd89f18773bb95a1", "comments": []}, {"number": 51290, "title": "Fix a shape inference issue leading to nullptr deref.", "body": "PiperOrigin-RevId: 387712259\r\nChange-Id: I7e670772b259c068a501a187cd89f18773bb95a1", "comments": []}, {"number": 51289, "title": "Prevent division by 0 in common shape functions.", "body": "PiperOrigin-RevId: 387712197\r\nChange-Id: Id25c7460e35b68aeeeac23b9a88e455b443ee149", "comments": []}, {"number": 51288, "title": "Prevent division by 0 in common shape functions.", "body": "PiperOrigin-RevId: 387712197\r\nChange-Id: Id25c7460e35b68aeeeac23b9a88e455b443ee149", "comments": []}, {"number": 51287, "title": "Prevent division by 0 in common shape functions.", "body": "PiperOrigin-RevId: 387712197\r\nChange-Id: Id25c7460e35b68aeeeac23b9a88e455b443ee149", "comments": []}, {"number": 51286, "title": "Prevent a segfault in shape inference due to bad inputs.", "body": "PiperOrigin-RevId: 387737970\r\nChange-Id: Ibd1cf3dbdce1dd2ab47fd633d5c5a57f7d8fb6e9", "comments": []}, {"number": 51285, "title": "Prevent a segfault in shape inference due to bad inputs.", "body": "PiperOrigin-RevId: 387737970\r\nChange-Id: Ibd1cf3dbdce1dd2ab47fd633d5c5a57f7d8fb6e9", "comments": []}, {"number": 51284, "title": "Prevent a segfault in shape inference due to bad inputs.", "body": "PiperOrigin-RevId: 387737970\r\nChange-Id: Ibd1cf3dbdce1dd2ab47fd633d5c5a57f7d8fb6e9", "comments": []}, {"number": 51283, "title": "Add missing validation to `maxpooling_op.cc`", "body": "PiperOrigin-RevId: 387932441\r\nChange-Id: I43a0b24e6a12cc965611144ba035accd384594b9", "comments": []}, {"number": 51282, "title": "Add missing validation to `maxpooling_op.cc`", "body": "PiperOrigin-RevId: 387932441\r\nChange-Id: I43a0b24e6a12cc965611144ba035accd384594b9", "comments": []}, {"number": 51281, "title": "Add missing validation to `maxpooling_op.cc`", "body": "PiperOrigin-RevId: 387932441\r\nChange-Id: I43a0b24e6a12cc965611144ba035accd384594b9", "comments": []}, {"number": 51280, "title": "Prevent a CHECK-fail due to empty tensor input in `map_stage_op.cc`", "body": "PiperOrigin-RevId: 387737906\r\nChange-Id: Idc52df0c71c7ed6e2dd633b651a581932f277c8a", "comments": []}, {"number": 51279, "title": "Prevent a CHECK-fail due to empty tensor input in `map_stage_op.cc`", "body": "PiperOrigin-RevId: 387737906\r\nChange-Id: Idc52df0c71c7ed6e2dd633b651a581932f277c8a", "comments": []}, {"number": 51278, "title": "Prevent a CHECK-fail due to empty tensor input in `map_stage_op.cc`", "body": "PiperOrigin-RevId: 387737906\r\nChange-Id: Idc52df0c71c7ed6e2dd633b651a581932f277c8a", "comments": []}, {"number": 51277, "title": " ValueError: Input 0 of node model/x/ was passed float from model/x/resource:0 incompatible with expected resource ", "body": "### 1. System information\r\n\r\n- OS Platform and Distribution: Linux Ubuntu 20.10\r\n- TensorFlow installation: pip package \r\n- Tensorflow version: 2.4.1\r\n- Python version: 3.8\r\n\r\n### 2. Code\r\n\r\nI created a Keras custom layer which implements a custom causal Conv1D. To do it, I simply used the classes Conv and Conv1D (they are in tensorflow/python/keras/layers/convolutional.py) and modified Conv. I'll show you how I use this layer with a very silly example dataset, which is characterized by only two training samples (given an ordered sequence of numbers as a training sample, the model should predict its next sequence: for example, if I've [0, 1, 2] the output will be [3, 4, 5]). However I get the following warnings and errors (I read similar problems, but this seems a little bit different):\r\n\r\n    Epoch 1/10\r\n    WARNING:tensorflow:Gradients do not exist for variables ['MyConv/kernel:0'] when minimizing the loss.\r\n    WARNING:tensorflow:Gradients do not exist for variables ['MyConv/kernel:0'] when minimizing the loss.\r\n    2/2 [==============================] - 1s 1ms/step - loss: 113.0949 - accuracy: 1.0000\r\n    Epoch 2/10\r\n    2/2 [==============================] - 0s 1ms/step - loss: 117.4004 - accuracy: 1.0000\r\n    Epoch 3/10\r\n    2/2 [==============================] - 0s 1ms/step - loss: 124.0515 - accuracy: 1.0000\r\n    Epoch 4/10\r\n    2/2 [==============================] - 0s 994us/step - loss: 132.9754 - accuracy: 1.0000\r\n    Epoch 5/10\r\n    2/2 [==============================] - 0s 1ms/step - loss: 154.4105 - accuracy: 1.0000\r\n    Epoch 6/10\r\n    2/2 [==============================] - 0s 4ms/step - loss: 157.2047 - accuracy: 1.0000\r\n    Epoch 7/10\r\n    2/2 [==============================] - 0s 981us/step - loss: 184.0751 - accuracy: 1.0000\r\n    Epoch 8/10\r\n    2/2 [==============================] - 0s 902us/step - loss: 201.2888 - accuracy: 1.0000\r\n    Epoch 9/10\r\n    2/2 [==============================] - 0s 888us/step - loss: 219.6019 - accuracy: 1.0000\r\n    Epoch 10/10\r\n    2/2 [==============================] - 0s 5ms/step - loss: 238.6077 - accuracy: 1.0000\r\n\r\n    ValueError: Input 0 of node model/MyConv/model/MyConv/strided_slice/_assign was passed float from \r\n    model/MyConv/ReadVariableOp/resource:0 incompatible with expected resource.\r\n\r\nI attached the example code used to train the model:\r\n[model.zip](https://github.com/tensorflow/tensorflow/files/6941085/model.zip)\r\n", "comments": ["For the better story of variable support, please consider using Select TF ops and converter.experimental_enable_resource_variables = True by using the TensorFlow 2.7 candidate or TensorFlow 2.6 versions.", "Are you satisfied with the resolution of your issue?\n<a href=\"https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&entry.2137816233=https://github.com/tensorflow/tensorflow/issues/51277\">Yes</a>\n<a href=\"https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&entry.2137816233=https://github.com/tensorflow/tensorflow/issues/51277\">No</a>\n", "Thanks @abattery for your reply. I upgraded to TensorFlow 2.6.0rc2, but now it appears this error:\r\n\r\n    Traceback (most recent call last):\r\n    File \"model.py\", line 406, in <module>\r\n    model = build_model(x_train, y_train)\r\n    File \"model.py\", line 373, in build_model\r\n    r=Myconv1D(filters=1,kernel_size=3,padding='causal',dilation_rate=1,use_bias=False,name=\"MyConv\")(inp)\r\n    File \"/home/es/venv/lib/python3.8/site-packages/tensorflow/python/keras/engine/base_layer.py\", line 1057, in __call__\r\n    outputs = call_fn(inputs, *args, **kwargs)\r\n    File \"model.py\", line 181, in call\r\n    z[0,4+i,0].assign(inputs[0,i,0])  \r\n    File \"/home/es/venv/lib/python3.8/site-packages/tensorflow/python/ops/array_ops.py\", line 1235, in assign\r\n    return var._strided_slice_assign(\r\n    File \"/home/es/venv/lib/python3.8/site-packages/tensorflow/python/ops/resource_variable_ops.py\", line 1392, in   \r\n    _strided_slice_assign\r\n    value=ops.convert_to_tensor(value, dtype=self.dtype),\r\n    File \"/home/es/venv/lib/python3.8/site-packages/tensorflow/python/profiler/trace.py\", line 163, in wrapped\r\n    return func(*args, **kwargs)\r\n    File \"/home/es/venv/lib/python3.8/site-packages/tensorflow/python/framework/ops.py\", line 1566, in convert_to_tensor\r\n    ret = conversion_func(value, dtype=dtype, name=name, as_ref=as_ref)\r\n    File \"/home/es/venv/lib/python3.8/site-packages/tensorflow/python/framework/constant_op.py\", line 346, in    \r\n     _constant_tensor_conversion_function\r\n    return constant(v, dtype=dtype, name=name)\r\n    File \"/home/es/venv/lib/python3.8/site-packages/tensorflow/python/framework/constant_op.py\", line 271, in constant\r\n    return _constant_impl(value, dtype, shape, name, verify_shape=False,\r\n    File \"/home/es/venv/lib/python3.8/site-packages/tensorflow/python/framework/constant_op.py\", line 283, in    \r\n    _constant_impl\r\n    return _constant_eager_impl(ctx, value, dtype, shape, verify_shape)\r\n    File \"/home/es/venv/lib/python3.8/site-packages/tensorflow/python/framework/constant_op.py\", line 308, in   \r\n    _constant_eager_impl\r\n    t = convert_to_eager_tensor(value, ctx, dtype)\r\n    File \"/home/es/venv/lib/python3.8/site-packages/tensorflow/python/framework/constant_op.py\", line 106, in    \r\n    convert_to_eager_tensor\r\n    return ops.EagerTensor(value, ctx.device_name, dtype)\r\n    File \"/home/es/venv/lib/python3.8/site-packages/keras/engine/keras_tensor.py\", line 244, in __array__\r\n    raise TypeError(\r\n    TypeError: Cannot convert a symbolic Keras input/output to a numpy array. This error may indicate that you're trying to pass a     \r\n    symbolic value to a NumPy call, which is not supported. Or, you may be trying to pass Keras symbolic inputs/outputs to a TF    \r\n    API that does not register dispatching, preventing Keras from automatically converting the API call to a lambda layer in the     \r\n    Functional Model.\r\n", "Please export the keras model as a saved model and use the `from_saved_model` api instead.", "Now I'm using SavedModel format in this way at the end of file, after `model = build_model(x_train, y_train)`:\r\n\r\n    model.save('my_model')     \r\n    converter = tf.lite.TFLiteConverter.from_saved_model('my_model')\r\n    converter.experimental_enable_resource_variables = True\r\n    tflite_model = converter.convert()\r\n    open(tflite_model_name + '.tflite', 'wb').write(tflite_model)\r\n\r\nHowever the error remains: it seems that it happens before TFLite converter is called.\r\nIf I use SavedModel format, should I add another code to use the custom layer?", "I would recommend using tf.saved_model.save API instead. https://www.tensorflow.org/api_docs/python/tf/saved_model/save", "If the error happens at the exporting stage, please upload a new post regarding the failure of the keras exporting to the saved model."]}, {"number": 51275, "title": "Add remaining validation to `sdca_internal.cc`", "body": "PiperOrigin-RevId: 387738010\r\nChange-Id: I28eedcfd87a53aaf34deb075acea1f8c95470808", "comments": []}, {"number": 51274, "title": "Add remaining validation to `sdca_internal.cc`", "body": "PiperOrigin-RevId: 387738010\r\nChange-Id: I28eedcfd87a53aaf34deb075acea1f8c95470808", "comments": []}]