[{"number": 53232, "title": "[MHLO]: variadic length input and different types of reduce op lower \u2026", "body": "\u2026to linalg", "comments": ["I have rebased on the latest.", "See the conversion inline above : https://github.com/tensorflow/tensorflow/pull/53232#discussion_r758829334", "> See the conversion inline above : [#53232 (comment)](https://github.com/tensorflow/tensorflow/pull/53232#discussion_r758829334)\r\n\r\n@joker-eph  Sorry. I misread it. please review again.", "Rebase on latest.", "I found the llvm build fail in the error log.I think it\u2019s not caused by my code. I don't have a windows environment, should I build one or update my code base?"]}, {"number": 53231, "title": "Error in lowering tf.Where with iree-import-tf", "body": "I use iree-import-tf tool to convert some model, but failed, error log:\r\n<unknown>:0: error: The following illegal operations still remain:\r\n\ttf.Where (count: 1)\r\n\r\n", "comments": ["@sun2011yao ,\r\nIn order to expedite the trouble-shooting process, could you please provide a code snippet and the TensorFlow version you are using.\r\n", "Also please take a look at this link [1](https://google.github.io/iree/ml-frameworks/tensorflow/#samples) and [2](https://www.tensorflow.org/api_docs/python/tf/where) which provides more information.It helps.Thanks", "the run command is 'iree-import-tf --tf-import-type=savedmodel_v1 -o=dlrm.mlir dlrm_model'\r\ndlrm model comes from https://github.com/NodLabs/tensorflow-dlrm\r\nIt seems that tf->mhlo does not support Where op?", "@tilakrayal ", "using the latest code of tensorflow", "@sun2011yao ,\r\nCan you please confirm the tensorflow version you are using and also please provide the code snippet to analyse the issue.Thanks!", "This issue has been automatically marked as stale because it has no recent activity. It will be closed if no further activity occurs. Thank you.\n", "Closing as stale. Please reopen if you'd like to work on this further.\n", "Are you satisfied with the resolution of your issue?\n<a href=\"https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&entry.2137816233=https://github.com/tensorflow/tensorflow/issues/53231\">Yes</a>\n<a href=\"https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&entry.2137816233=https://github.com/tensorflow/tensorflow/issues/53231\">No</a>\n"]}, {"number": 53230, "title": "What is the difference between tpu_driver_client.TpuBackend.create and xla_client.make_tpu_client \uff1f", "body": "Questions in Xla Client Module\uff1a\r\nWhy TPU has two backend entrance for xla client?\r\nWhat is the difference between tpu_driver_client and xla_client?\r\nCan I get some ideas of the design in particular?\r\nThanks a lot.", "comments": ["Hi @chenzhengda ! Could you please post this query on [TF forum ](https://discuss.tensorflow.org/)? Thanks!", "Are you satisfied with the resolution of your issue?\n<a href=\"https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&entry.2137816233=https://github.com/tensorflow/tensorflow/issues/53230\">Yes</a>\n<a href=\"https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&entry.2137816233=https://github.com/tensorflow/tensorflow/issues/53230\">No</a>\n"]}, {"number": 53229, "title": "failed call to cuInit: CUDA_ERROR_UNKNOWN: unknown error", "body": "**System information**\r\n- Have I written custom code: below\r\n- OS Platform and Distribution: Linux Ubuntu 20.04\r\n- TensorFlow installed from (source or binary): pip install tensorflow\r\n- TensorFlow version (use command below): 2.3.0\r\n- Python version: 3.8.12\r\n- CUDA/cuDNN version: release 10.1, V10.1.243\r\n- GPU model and memory: RTX2060 Mobile 6GB\r\n\r\nYou can collect some of this information using our environment capture\r\n[script](https://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh):. Log file here [link](https://polimi365-my.sharepoint.com/:t:/g/personal/10607946_polimi_it/ESFGCuewPQRGt8Fv-dFQ61wB8TLOzfl8d1d5AaKyKiQVkg?e=33VUl1)\r\n```Collecting system information...\r\nTraceback (most recent call last):\r\n  File \"/tmp/check_os.py\", line 17, in <module>\r\n    platform.linux_distribution(),\r\nAttributeError: module 'platform' has no attribute 'linux_distribution'\r\n2021-11-29 11:17:14.503225: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1\r\nTraceback (most recent call last):\r\n  File \"/tmp/check_tf.py\", line 5, in <module>\r\n    with tf.Session() as sess:\r\nAttributeError: module 'tensorflow' has no attribute 'Session'\r\nbazel: command not found\r\nWrote environment to tf_env.txt. You can review the contents of that file.\r\nand use it to populate the fields in the github issue template.\r\n```\r\n\r\n**Describe the current behavior**\r\n```\r\n>>> import tensorflow as tf\r\n2021-11-29 11:44:55.998697: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1\r\n>>> tf.config.list_physical_devices(\"GPU\")\r\n2021-11-29 11:45:19.987589: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcuda.so.1\r\n2021-11-29 11:45:21.698177: E tensorflow/stream_executor/cuda/cuda_driver.cc:314] failed call to cuInit: CUDA_ERROR_UNKNOWN: unknown error\r\n2021-11-29 11:45:21.698239: I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:169] retrieving CUDA diagnostic information for host: raffo-OMEN15\r\n2021-11-29 11:45:21.698251: I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:176] hostname: raffo-OMEN15\r\n2021-11-29 11:45:21.698392: I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:200] libcuda reported version is: 470.82.0\r\n2021-11-29 11:45:21.698442: I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:204] kernel reported version is: 470.82.0\r\n2021-11-29 11:45:21.698453: I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:310] kernel version seems to match DSO: 470.82.0\r\n[]\r\n```\r\n\r\nI don't know if it can help: the same error happens in the tensorflow docker container. \r\n", "comments": ["I guess there is another process occupying GPU so your TF program cannot can find a memory segment in GPU to initialize CUDA. Just close another process and try again.", "> I guess there is another process occupying GPU so your TF program cannot can find a memory segment in GPU to initialize CUDA. Just close another process and try again.\r\n\r\nI don't think so. I check with `nvidia-smi` and this is my output:\r\n```\r\nraffo@raffo-OMEN15:~$ nvidia-smi\r\nMon Nov 29 13:36:15 2021       \r\n+-----------------------------------------------------------------------------+\r\n| NVIDIA-SMI 470.82.00    Driver Version: 470.82.00    CUDA Version: 11.4     |\r\n|-------------------------------+----------------------+----------------------+\r\n| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |\r\n| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |\r\n|                               |                      |               MIG M. |\r\n|===============================+======================+======================|\r\n|   0  NVIDIA GeForce ...  Off  | 00000000:01:00.0 Off |                  N/A |\r\n| N/A   52C    P5    22W /  N/A |    376MiB /  5934MiB |     23%      Default |\r\n|                               |                      |                  N/A |\r\n+-------------------------------+----------------------+----------------------+\r\n                                                                               \r\n+-----------------------------------------------------------------------------+\r\n| Processes:                                                                  |\r\n|  GPU   GI   CI        PID   Type   Process name                  GPU Memory |\r\n|        ID   ID                                                   Usage      |\r\n|=============================================================================|\r\n|    0   N/A  N/A      1260      G   /usr/lib/xorg/Xorg                174MiB |\r\n|    0   N/A  N/A      1962      G   /usr/bin/gnome-shell               54MiB |\r\n|    0   N/A  N/A      8198      G   ...AAAAAAAAA= --shared-files      144MiB |\r\n+-----------------------------------------------------------------------------+\r\n```", "@RaffaeleBerzoini We could see you are using TF v2.3.0 which is not actively supported ,please refer  this [comment](https://github.com/tensorflow/tensorflow/issues/52915#issuecomment-961288304).Could you please try to upgrade TF version to latest `TF v2.7.0` and refer this [tested build configurations](https://www.tensorflow.org/install/source#tested_build_configurations) ? Thanks! ", "Are you satisfied with the resolution of your issue?\n<a href=\"https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&entry.2137816233=https://github.com/tensorflow/tensorflow/issues/53229\">Yes</a>\n<a href=\"https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&entry.2137816233=https://github.com/tensorflow/tensorflow/issues/53229\">No</a>\n"]}, {"number": 53228, "title": "How to remove NaN in tensor by specific values?", "body": "Hi, I have two tensor, `a` and `b`, which have the same shape. I want to replace NaN value in `a` by corresponding value in `b`. I find `tf.tensor_scatter_nd_update` could replace value for tensor, but I don't know how to generate `indices` where to update. So how can I remove NaN in tensor?\r\n\r\nThanks!\r\n", "comments": ["Hi,\r\n\r\n`tf.where(tf.math.is_nan(a), b, a)` will probably do the trick.\r\n\r\nHow does it work?\r\n\r\n`tf.math.is_nan(a)` returns a boolean array with the same shape as `a` with each element being `True` if the corresponding element in `a` is NaN and `False` otherwise. \r\n\r\nThis is then passed to `tf.where()` which replaces each `True` value in the `is_nan` result with the corresponding value in `b` and if not NaN, leaves it as the original value in `a`.\r\n\r\nA simple demonstration:\r\n\r\n```\r\nimport tensorflow as tf\r\nimport numpy as np\r\n\r\n#Some dummy tensors\r\na = tf.convert_to_tensor([[1., 2.], [3., np.nan]])\r\nb = tf.convert_to_tensor([[1., 2.], [3., 4.]])\r\n\r\n#NaNs in a replaced with values in b\r\nc = tf.where(tf.math.is_nan(a), b, a)\r\n```\r\n\r\nHope this helps!", "Thanks! Your suggestion works perfectly!\r\n", "@leelew ,\r\nAlso please take a look at this issues and link [1](https://www.tensorflow.org/api_docs/python/tf/tensor_scatter_nd_update) [2](https://stackoverflow.com/questions/55652981/tensorflow-2-0-how-to-update-tensors) and [3](https://stackoverflow.com/questions/67362672/tensorflow-2-how-to-directly-update-elements-in-tf-variable-x-at-indices) which helps to provide the more information.Thanks", "@leelew ,\r\nPlease feel free to move this issue to closed status as the issue has resolved.Thanks!", "Are you satisfied with the resolution of your issue?\n<a href=\"https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&entry.2137816233=https://github.com/tensorflow/tensorflow/issues/53228\">Yes</a>\n<a href=\"https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&entry.2137816233=https://github.com/tensorflow/tensorflow/issues/53228\">No</a>\n"]}, {"number": 53227, "title": "how to run tests in the tensorflow/compiler/mlir/hlo/tests", "body": "Hi,\r\ncould you provide sime related command case to run the cases in the tensorflow/compiler/mlir/hlo/tests/*.mlir.\r\n\r\nthanks", "comments": ["Hi @yuqj1991 ! Could you please post this query on [TF forum](https://discuss.tensorflow.org/)? Thanks!", "This issue has been automatically marked as stale because it has no recent activity. It will be closed if no further activity occurs. Thank you.\n", "> Hi @yuqj1991 ! Could you please post this query on [TF forum](https://discuss.tensorflow.org/)? Thanks!\r\n\r\nhi\uff0c my question is not about the tf error in the using stage. So Please allow me to simplify this issue!\r\n\r\nAs you know, in the Compiler/mlir module,  there are many tests in the tensorflow/compiler/mlir/hlo/tests\r\n![image](https://user-images.githubusercontent.com/38523749/145782770-a8c0895a-1421-47e7-b622-6b092d325e34.png)\r\n\r\nbut in the BUILD file, there is not any test command about the test files\r\n![image](https://user-images.githubusercontent.com/38523749/145782889-0069ba91-eafa-414f-930c-a7b0f1a167aa.png)\r\n\r\n\r\nso i want to know how to add test comman in this BUILD file , so i can verifly the mlir code\r\n", "Hi @sanatmpa1! Could you please look at this issue?", "Hi, Did you have a look into this [file](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/compiler/mlir/hlo/tests/BUILD)? Thanks!", "This issue has been automatically marked as stale because it has no recent activity. It will be closed if no further activity occurs. Thank you.\n", "Closing as stale. Please reopen if you'd like to work on this further.\n", "Are you satisfied with the resolution of your issue?\n<a href=\"https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&entry.2137816233=https://github.com/tensorflow/tensorflow/issues/53227\">Yes</a>\n<a href=\"https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&entry.2137816233=https://github.com/tensorflow/tensorflow/issues/53227\">No</a>\n"]}, {"number": 53226, "title": "RecursionError: maximum recursion depth exceeded while calling a Python object", "body": "# \u5b89\u88c5 TensorFlow\r\n\r\nimport tensorflow as tf\r\nmnist = tf.keras.datasets.mnist\r\n\r\n(x_train, y_train), (x_test, y_test) = mnist.load_data()\r\nx_train, x_test = x_train / 255.0, x_test / 255.0\r\nmodel = tf.keras.models.Sequential([\r\n  tf.keras.layers.Flatten(input_shape=(28, 28)),\r\n  tf.keras.layers.Dense(128, activation='relu'),\r\n  tf.keras.layers.Dropout(0.2),\r\n  tf.keras.layers.Dense(10, activation='softmax')\r\n])\r\n\r\nmodel.compile(optimizer='adam',\r\n              loss='sparse_categorical_crossentropy',\r\n              metrics=['accuracy'])\r\nmodel.fit(x_train, y_train, epochs=5)\r\n\r\nmodel.evaluate(x_test,  y_test, verbose=2)\r\n\r\n\r\nbut   \r\nD:\\Anaconda\\envs\\tensorflow\\python.exe G:/Yolo/deep-learning-for-image-processing-master/deep-learning-for-image-processing-master/tensorflow_classification/Test1_official_demo/train_my.py\r\nTraceback (most recent call last):\r\n  File \"G:/Yolo/deep-learning-for-image-processing-master/deep-learning-for-image-processing-master/tensorflow_classification/Test1_official_demo/train_my.py\", line 3, in <module>\r\n    import tensorflow as tf\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\site-packages\\tensorflow\\__init__.py\", line 41, in <module>\r\n    from tensorflow.python.tools import module_util as _module_util\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\site-packages\\tensorflow\\python\\__init__.py\", line 40, in <module>\r\n    from tensorflow.python.eager import context\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\site-packages\\tensorflow\\python\\eager\\context.py\", line 32, in <module>\r\n    from tensorflow.core.framework import function_pb2\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\site-packages\\tensorflow\\core\\framework\\function_pb2.py\", line 7, in <module>\r\n    from google.protobuf import descriptor as _descriptor\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\site-packages\\google\\protobuf\\descriptor.py\", line 47, in <module>\r\n    from google.protobuf.pyext import _message\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 158, in register\r\n    if issubclass(subclass, cls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 226, in __subclasscheck__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 207, in __subclasscheck__\r\n    ok = cls.__subclasshook__(subclass)\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\typing.py\", line 860, in __extrahook__\r\n    if issubclass(subclass, scls):\r\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\abc.py\", line 197, in __subclasscheck__\r\n    if subclass in cls._abc_cache:\r\nRecursionError: maximum recursion depth exceeded while calling a Python object\r\n\r\nProcess finished with exit code 1\r\n\r\nHELP ME!!!!!!\r\n\r\n\r\n\r\n", "comments": ["@starstarb \r\nPlease post this issue on [keras-team/keras repo.](https://github.com/keras-team/keras/issues)\r\nTo know more see;\r\n[https://discuss.tensorflow.org/t/keras-project-moved-to-new-repository-in-https-github-com-keras-team-keras/1999](https://discuss.tensorflow.org/t/keras-project-moved-to-new-repository-in-https-github-com-keras-team-keras/1999)\r\nThank you!", "This issue has been automatically marked as stale because it has no recent activity. It will be closed if no further activity occurs. Thank you.\n", "Closing as stale. Please reopen if you'd like to work on this further.\n"]}, {"number": 53225, "title": "Will benchmark use GPU?", "body": "I'm running bench mark on desktop following the [guide](https://github.com/tensorflow/tensorflow/tree/master/tensorflow/tools/benchmark).\r\nWill this command below use GPU?\r\n```sh\r\nbazel-bin/tensorflow/tools/benchmark/benchmark_model \\\r\n  --graph=tensorflow_inception_graph.pb \\\r\n  --input_layer=\"input:0\" \\\r\n  --input_layer_shape=\"1,224,224,3\" \\\r\n  --input_layer_type=\"float\" \\\r\n  --output_layer=\"output:0\"\r\n```\r\nIf not, how can I run benchmark on GPU?", "comments": ["@dxxhjk ,\r\nWe see that the issue [template](https://github.com/tensorflow/tensorflow/issues/new/choose) has not been filled, could you please do so as it helps us analyse the issue [tf version, steps followed before you ran into this error or stand alone code to reproduce the issue faced] or if possible share a colab gist with the issue reported.", "This issue has been automatically marked as stale because it has no recent activity. It will be closed if no further activity occurs. Thank you.\n", "Closing as stale. Please reopen if you'd like to work on this further.\n"]}, {"number": 53224, "title": "[Q&A] Do tf.keras.model convert numpy.ndarray to tensor for every batch?", "body": "I currently use tensorflow 2.5 with GPU Quadro P1000. The tensorflow was built with cudatoolkit and cudnn to activate my GPU\r\n\r\nIn current, I have a large numpy array (4Gb) with np.uint8 dtype. The model was built using tf.keras.model but at every layer, the argument `dtype`, i use `np.float32` but not `tf.float32`. \r\n\r\nAlthough when calling `model.fit(ndarray)`, I don't convert to `tf.Tensor` and GPU still worked woth 40 - 50%. \r\n\r\nMy question is\r\n(1): Is it possible to set the layers' dtype by `tf.dtype` and use numpy array to directly `model.fit()` or `model.predict()` with active GPU without error, and vice versa?\r\n(2) Does tensorflow, for every batch fed to `tf.keras.Model` automatically convert to the Tensor before training it (with the setting mentioned above), and if so, do I should convert to `tf.Tensor` beforehand or `tf.data.Dataset` to boost performance and input pipeline, in that case, do I need to disable eager execution or do some trick to boost performance? \r\n\r\nAt current, the model is trained with 240 - 300 seconds per epoch with ~ 2300 batchs (256 batch size)\r\n\r\nThank you. I love to hear some response\r\n\r\nWindows 10 Pro, TF 2.5, Numpy 1.19+  Python 3.8.11", "comments": ["Hi @IchiruTake ! Yes you can use Numpy arrays in model.fit() operations directly. But I think you should convert your ndarrays to single array using reshape or numpy operation to avoid these kind of [issues.](https://stackoverflow.com/questions/42596057/keras-error-expected-to-see-1-array) You can reduce batch size to 32 or 64 to see the difference in processing time.  Please post on [TF forum ](https://discuss.tensorflow.org/) for further assistance .Thanks!", "> Hi @IchiruTake ! Yes you can use Numpy arrays in model.fit() operations directly. But I think you should convert your ndarrays to single array using reshape or numpy operation to avoid these kind of [issues.](https://stackoverflow.com/questions/42596057/keras-error-expected-to-see-1-array) You can reduce batch size to 32 or 64 to see the difference in processing time. Please post on [TF forum ](https://discuss.tensorflow.org/) for further assistance .Thanks!\r\n\r\nThank you very much. I have posted it on TF Forum. If there is any trouble, you could inform me if wanted; otherwise, just close this report. Thank you again.", "Are you satisfied with the resolution of your issue?\n<a href=\"https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&entry.2137816233=https://github.com/tensorflow/tensorflow/issues/53224\">Yes</a>\n<a href=\"https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&entry.2137816233=https://github.com/tensorflow/tensorflow/issues/53224\">No</a>\n"]}, {"number": 53223, "title": "How can I find map@50 and ap for whole test data on tflite model?", "body": "Hi, \r\nis there any way to find custom trained tflite model map@50 and ap on whole test dataset?", "comments": ["@Lnazvkl \r\n Could you please provide more details ? \r\nIn order to expedite the trouble-shooting process here,Could you please fill the issue [template](https://github.com/tensorflow/tensorflow/issues/new/choose),\r\nThanks!", "> @Lnazvkl Could you please provide more details ? In order to expedite the trouble-shooting process here,Could you please fill the issue [template](https://github.com/tensorflow/tensorflow/issues/new/choose), Thanks!\r\n\r\n@sushreebarsa\r\nI have trained yolov4 on my custom dataset, then I converted weights to .pb and then to .tflite, for using on android app, now I need to test my .tflite weights on the whole test dataset to find map@50 and ap on the whole test dataset, but I don't know how I can do this?", "You can refer to the similar tflite YoloV4 implementation [here](https://github.com/hunglc007/tensorflow-yolov4-tflite) and [here](https://haroonshakeel.medium.com/yolov4-on-android-tflite-without-tears-f0d87784e8f9). Let us know if this helps you. Thanks!", "This issue has been automatically marked as stale because it has no recent activity. It will be closed if no further activity occurs. Thank you.\n", "Closing as stale. Please reopen if you'd like to work on this further.\n"]}, {"number": 53222, "title": "Why the eigenvalue output is different for tensorflow and numpy?", "body": "<em>Please make sure that this is a bug. As per our\r\n[GitHub Policy](https://github.com/tensorflow/tensorflow/blob/master/ISSUES.md),\r\nwe only address code/doc bugs, performance issues, feature requests and\r\nbuild/installation issues on GitHub. tag:bug_template</em>\r\n\r\n**System information**\r\n- Have I written custom code (as opposed to using a stock example script provided in TensorFlow):\r\n- OS Platform and Distribution (e.g., Linux Ubuntu 16.04):\r\n- Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device:\r\n- TensorFlow installed from (source or binary):\r\n- TensorFlow version (use command below):\r\n- Python version:\r\n- Bazel version (if compiling from source):\r\n- GCC/Compiler version (if compiling from source):\r\n- CUDA/cuDNN version:\r\n- GPU model and memory:\r\n\r\nYou can collect some of this information using our environment capture\r\n[script](https://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh)\r\nYou can also obtain the TensorFlow version with:\r\n1. TF 1.0: `python -c \"import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)\"`\r\n2. TF 2.0: `python -c \"import tensorflow as tf; print(tf.version.GIT_VERSION, tf.version.VERSION)\"`\r\n\r\n**Describe the current behavior**\r\nWhy the eigevectors output is different for tensorflow and numpy?\r\n![image](https://user-images.githubusercontent.com/61866921/143771375-8cb7fc00-1482-4507-a963-6635c405497d.png)\r\n\r\n\r\n**Describe the expected behavior**\r\n\r\n**[Contributing](https://www.tensorflow.org/community/contribute)**\r\n\r\n- Do you want to contribute a PR? (yes/no):\r\n- Briefly describe your candidate solution(if contributing):\r\n\r\n**Standalone code to reproduce the issue**\r\nProvide a reproducible test case that is the bare minimum necessary to generate\r\nthe problem. If possible, please share a link to Colab/Jupyter/any notebook.\r\n\r\n**Other info / logs** Include any logs or source code that would be helpful to\r\ndiagnose the problem. If including tracebacks, please include the full\r\ntraceback. Large logs and files should be attached.\r\n", "comments": ["@maye1998 ,\r\n In order to expedite the trouble-shooting process, could you please provide  code in reproducible format and the TensorFlow version you are using.\r\n", "> @maye1998 , In order to expedite the trouble-shooting process, could you please provide code in reproducible format and the TensorFlow version you are using.\r\n\r\nI'm running this code on Google Colab.\r\n- Tensorflow: 2.7.0\r\n- Numpy: 1.19.5\r\n\r\nimport numpy as np\r\nimport tensorflow as tf\r\n\r\nXX = np.random.randn(3, 3)\r\neig_value1, eig_vector1 = np.linalg.eig(XX)\r\n\r\nYY = tf.cast(XX, dtype=tf.float32)\r\neig_value2, eig_vector2 = tf.linalg.eig(YY)\r\neig_value1,eig_value2, eig_vector1, eig_vector2", "@maye1998 ,\r\nPlease refer this links [1](https://numpy.org/doc/stable/reference/generated/numpy.linalg.eig.html), [2](https://www.tensorflow.org/api_docs/python/tf/linalg/eig) and SO [link](https://stackoverflow.com/questions/58856160/why-do-tensorflow-and-pytorch-gradients-of-the-eigenvalue-decomposition-differ-f) which provides more information.It helps.Thanks", "> @maye1998 , Please refer this links [1](https://numpy.org/doc/stable/reference/generated/numpy.linalg.eig.html), [2](https://www.tensorflow.org/api_docs/python/tf/linalg/eig) and SO [link](https://stackoverflow.com/questions/58856160/why-do-tensorflow-and-pytorch-gradients-of-the-eigenvalue-decomposition-differ-f) which provides more information.It helps.Thanks\r\n\r\nIt's different from the problem of the [link](https://stackoverflow.com/questions/58856160/why-do-tensorflow-and-pytorch-gradients-of-the-eigenvalue-decomposition-differ-f)\r\n\r\nit's a real random matrix but not a real symmetric matrix, and I want to get the eigenvector of the random matrix.\r\n\r\nWhen I calculate it by numpy and the Tensorflow, we can see that the result of the eigenvalue is same, but the eigenvector output is different", "This issue has been automatically marked as stale because it has no recent activity. It will be closed if no further activity occurs. Thank you.\n", "Closing as stale. Please reopen if you'd like to work on this further.\n", "Are you satisfied with the resolution of your issue?\n<a href=\"https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&entry.2137816233=https://github.com/tensorflow/tensorflow/issues/53222\">Yes</a>\n<a href=\"https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&entry.2137816233=https://github.com/tensorflow/tensorflow/issues/53222\">No</a>\n"]}, {"number": 53221, "title": "ValueError: Dimension 2 in both shapes must be equal, but are 2 and 1. Shapes are [256,128,2] and [256,128,1].", "body": "i got this error : \r\n\r\n---------------------------------------------------------------------------\r\nValueError                                Traceback (most recent call last)\r\n/tmp/ipykernel_36/3853691934.py in <module>\r\n      3 \r\n      4 # train model\r\n----> 5 history = model.fit(train_dataset, epochs=1)\r\n\r\n/opt/conda/lib/python3.7/site-packages/keras/engine/training.py in fit(self, x, y, batch_size, epochs, verbose, callbacks, validation_split, validation_data, shuffle, class_weight, sample_weight, initial_epoch, steps_per_epoch, validation_steps, validation_batch_size, validation_freq, max_queue_size, workers, use_multiprocessing)\r\n   1182                 _r=1):\r\n   1183               callbacks.on_train_batch_begin(step)\r\n-> 1184               tmp_logs = self.train_function(iterator)\r\n   1185               if data_handler.should_sync:\r\n   1186                 context.async_wait()\r\n\r\n/opt/conda/lib/python3.7/site-packages/tensorflow/python/eager/def_function.py in __call__(self, *args, **kwds)\r\n    883 \r\n    884       with OptionalXlaContext(self._jit_compile):\r\n--> 885         result = self._call(*args, **kwds)\r\n    886 \r\n    887       new_tracing_count = self.experimental_get_tracing_count()\r\n\r\n/opt/conda/lib/python3.7/site-packages/tensorflow/python/eager/def_function.py in _call(self, *args, **kwds)\r\n    931       # This is the first call of __call__, so we have to initialize.\r\n    932       initializers = []\r\n--> 933       self._initialize(args, kwds, add_initializers_to=initializers)\r\n    934     finally:\r\n    935       # At this point we know that the initialization is complete (or less\r\n\r\n/opt/conda/lib/python3.7/site-packages/tensorflow/python/eager/def_function.py in _initialize(self, args, kwds, add_initializers_to)\r\n    758     self._concrete_stateful_fn = (\r\n    759         self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access\r\n--> 760             *args, **kwds))\r\n    761 \r\n    762     def invalid_creator_scope(*unused_args, **unused_kwds):\r\n\r\n/opt/conda/lib/python3.7/site-packages/tensorflow/python/eager/function.py in _get_concrete_function_internal_garbage_collected(self, *args, **kwargs)\r\n   3064       args, kwargs = None, None\r\n   3065     with self._lock:\r\n-> 3066       graph_function, _ = self._maybe_define_function(args, kwargs)\r\n   3067     return graph_function\r\n   3068 \r\n\r\n/opt/conda/lib/python3.7/site-packages/tensorflow/python/eager/function.py in _maybe_define_function(self, args, kwargs)\r\n   3461 \r\n   3462           self._function_cache.missed.add(call_context_key)\r\n-> 3463           graph_function = self._create_graph_function(args, kwargs)\r\n   3464           self._function_cache.primary[cache_key] = graph_function\r\n   3465 \r\n\r\n/opt/conda/lib/python3.7/site-packages/tensorflow/python/eager/function.py in _create_graph_function(self, args, kwargs, override_flat_arg_shapes)\r\n   3306             arg_names=arg_names,\r\n   3307             override_flat_arg_shapes=override_flat_arg_shapes,\r\n-> 3308             capture_by_value=self._capture_by_value),\r\n   3309         self._function_attributes,\r\n   3310         function_spec=self.function_spec,\r\n\r\n/opt/conda/lib/python3.7/site-packages/tensorflow/python/framework/func_graph.py in func_graph_from_py_func(name, python_func, args, kwargs, signature, func_graph, autograph, autograph_options, add_control_dependencies, arg_names, op_return_value, collections, capture_by_value, override_flat_arg_shapes, acd_record_initial_resource_uses)\r\n   1005         _, original_func = tf_decorator.unwrap(python_func)\r\n   1006 \r\n-> 1007       func_outputs = python_func(*func_args, **func_kwargs)\r\n   1008 \r\n   1009       # invariant: `func_outputs` contains only Tensors, CompositeTensors,\r\n\r\n/opt/conda/lib/python3.7/site-packages/tensorflow/python/eager/def_function.py in wrapped_fn(*args, **kwds)\r\n    666         # the function a weak reference to itself to avoid a reference cycle.\r\n    667         with OptionalXlaContext(compile_with_xla):\r\n--> 668           out = weak_wrapped_fn().__wrapped__(*args, **kwds)\r\n    669         return out\r\n    670 \r\n\r\n/opt/conda/lib/python3.7/site-packages/tensorflow/python/framework/func_graph.py in wrapper(*args, **kwargs)\r\n    992           except Exception as e:  # pylint:disable=broad-except\r\n    993             if hasattr(e, \"ag_error_metadata\"):\r\n--> 994               raise e.ag_error_metadata.to_exception(e)\r\n    995             else:\r\n    996               raise\r\n\r\nValueError: in user code:\r\n\r\n    /opt/conda/lib/python3.7/site-packages/keras/engine/training.py:853 train_function  *\r\n        return step_function(self, iterator)\r\n    /opt/conda/lib/python3.7/site-packages/keras/engine/training.py:842 step_function  **\r\n        outputs = model.distribute_strategy.run(run_step, args=(data,))\r\n    /opt/conda/lib/python3.7/site-packages/tensorflow/python/distribute/distribute_lib.py:1286 run\r\n        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)\r\n    /opt/conda/lib/python3.7/site-packages/tensorflow/python/distribute/distribute_lib.py:2849 call_for_each_replica\r\n        return self._call_for_each_replica(fn, args, kwargs)\r\n    /opt/conda/lib/python3.7/site-packages/tensorflow/python/distribute/distribute_lib.py:3632 _call_for_each_replica\r\n        return fn(*args, **kwargs)\r\n    /opt/conda/lib/python3.7/site-packages/keras/engine/training.py:835 run_step  **\r\n        outputs = model.train_step(data)\r\n    /opt/conda/lib/python3.7/site-packages/keras/engine/training.py:787 train_step\r\n        y_pred = self(x, training=True)\r\n    /opt/conda/lib/python3.7/site-packages/keras/engine/base_layer.py:1037 __call__\r\n        outputs = call_fn(inputs, *args, **kwargs)\r\n    /opt/conda/lib/python3.7/site-packages/keras/engine/functional.py:415 call\r\n        inputs, training=training, mask=mask)\r\n    /opt/conda/lib/python3.7/site-packages/keras/engine/functional.py:550 _run_internal_graph\r\n        outputs = node.layer(*args, **kwargs)\r\n    /opt/conda/lib/python3.7/site-packages/keras/engine/base_layer.py:1037 __call__\r\n        outputs = call_fn(inputs, *args, **kwargs)\r\n    /opt/conda/lib/python3.7/site-packages/keras/layers/merge.py:178 call\r\n        return self._merge_function(inputs)\r\n    /opt/conda/lib/python3.7/site-packages/keras/layers/merge.py:518 _merge_function\r\n        return backend.concatenate(inputs, axis=self.axis)\r\n    /opt/conda/lib/python3.7/site-packages/tensorflow/python/util/dispatch.py:206 wrapper\r\n        return target(*args, **kwargs)\r\n    /opt/conda/lib/python3.7/site-packages/keras/backend.py:3069 concatenate\r\n        return tf.concat([to_dense(x) for x in tensors], axis)\r\n    /opt/conda/lib/python3.7/site-packages/tensorflow/python/util/dispatch.py:206 wrapper\r\n        return target(*args, **kwargs)\r\n    /opt/conda/lib/python3.7/site-packages/tensorflow/python/ops/array_ops.py:1769 concat\r\n        return gen_array_ops.concat_v2(values=values, axis=axis, name=name)\r\n    /opt/conda/lib/python3.7/site-packages/tensorflow/python/ops/gen_array_ops.py:1228 concat_v2\r\n        \"ConcatV2\", values=values, axis=axis, name=name)\r\n    /opt/conda/lib/python3.7/site-packages/tensorflow/python/framework/op_def_library.py:750 _apply_op_helper\r\n        attrs=attr_protos, op_def=op_def)\r\n    /opt/conda/lib/python3.7/site-packages/tensorflow/python/framework/func_graph.py:601 _create_op_internal\r\n        compute_device)\r\n    /opt/conda/lib/python3.7/site-packages/tensorflow/python/framework/ops.py:3569 _create_op_internal\r\n        op_def=op_def)\r\n    /opt/conda/lib/python3.7/site-packages/tensorflow/python/framework/ops.py:2042 __init__\r\n        control_input_ops, op_def)\r\n    /opt/conda/lib/python3.7/site-packages/tensorflow/python/framework/ops.py:1883 _create_c_op\r\n        raise ValueError(str(e))\r\n\r\n    ValueError: Dimension 2 in both shapes must be equal, but are 2 and 1. Shapes are [256,128,2] and [256,128,1]. for '{{node model/concatenate/concat}} = ConcatV2[N=2, T=DT_FLOAT, Tidx=DT_INT32](model/conv2d_transpose/BiasAdd, model/conv2d_3/Relu, model/concatenate/concat/axis)' with input shapes: [256,128,2,32], [256,128,1,32], [] and with computed input tensors: input[2] = <3>.\r\n\r\nwhat should I do to tackle this problem? please.\r\nI'm new in deep learning field and this problem appears in my segmentation model.", "comments": ["Hi @ayoubk34 !\r\nCould you please attach a standalone code to reproduce this issue?", "This issue has been automatically marked as stale because it has no recent activity. It will be closed if no further activity occurs. Thank you.\n", "Closing as stale. Please reopen if you'd like to work on this further.\n", "Are you satisfied with the resolution of your issue?\n<a href=\"https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&entry.2137816233=https://github.com/tensorflow/tensorflow/issues/53221\">Yes</a>\n<a href=\"https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&entry.2137816233=https://github.com/tensorflow/tensorflow/issues/53221\">No</a>\n"]}, {"number": 53220, "title": "Tensor dimension becomes None after using gather or boolean_mask in Tensorflow 2.0", "body": "**System information**\r\n- Have I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes\r\n- Windows 10 Home (19043.1348):\r\n- TensorFlow installed from (source or binary): binary\r\n- TensorFlow version (use command below): 2.7.0\r\n- Python version: 3.8.10\r\n- CUDA/cuDNN version: 11.2\r\n- GPU model and memory: GTX 1080 Ti (11 GB)\r\n\r\n\r\n\r\n**Describe the current behavior**\r\n\r\nFor some reason I am getting different tensor dimensions when using `gather` in TF 2:\r\n\r\n1. The first dimension becomes `None` when I use tensor as an index vector \r\n2. The first dimension becomes `len(indices)` (as it should) where 'indices' are regular Python list\r\n\r\n**This happens only in eager mode (e.g., inside a custom loss function)**\r\n\r\n(Same happens when using `boolean_mask`)\r\n\r\n\r\n\r\n**Standalone code to reproduce the issue**\r\n\r\n    import tensorflow as tf\r\n    from tensorflow import keras\r\n    from tensorflow.keras import Model\r\n    from tensorflow.keras.layers import Input, Dense, Reshape\r\n    from tensorflow.keras.datasets import mnist\r\n \r\n    def cutsom_gan_loss_env(model):\r\n       def custom_loss(y_true,y_pred):\r\n\r\n        ff = tf.where([True, True, False , False])[:, 0]\r\n        with tf.GradientTape(persistent=True) as tape:\r\n             tf.print(tf.gather(y_true, [0, 1], axis=0).shape) #prints 2,28,28\r\n             tf.print(tf.gather(y_true, ff, axis=0).shape)#prints None,28,28\r\n             tape.watch(y_true)\r\n             yy = model(y_true)\r\n             d_yy = tape.gradient(yy,y_true)\r\n             des_loss = tf.reduce_mean(d_yy)\r\n\r\n        return des_loss\r\n\r\n    return custom_loss\r\n\r\n\r\n    def main_():\r\n       n_hidden_units = 5\r\n       num_lay = 3\r\n       kernel_init = keras.initializers.RandomUniform(-0.1, 0.1)\r\n       (x_train, y_train), _ = mnist.load_data()\r\n       x_train = tf.cast(x_train,tf.float32)/255.\r\n       inputs = Input(x_train.shape[1:])\r\n       x = Dense(n_hidden_units,kernel_initializer=kernel_init,  activation='sigmoid' )(inputs)\r\n       for _ in range(num_lay):\r\n           x = Dense(n_hidden_units,kernel_initializer=kernel_init, activation='sigmoid', )(x)\r\n\r\n       outputs =Reshape(x_train.shape[1:])(Dense(x_train.shape[1], kernel_initializer=kernel_init, activation='softmax')(x))\r\n       model = Model(inputs=inputs, outputs=outputs)\r\n       model.summary()\r\n       optimizer1 = keras.optimizers.Adam(beta_1=0.9, beta_2=0.999, epsilon=None, decay=0.0, amsgrad=True)\r\n       model.compile(loss=cutsom_gan_loss_env(model), optimizer=optimizer1, metrics=None)\r\n       model.fit(x_train,  x_train , batch_size=1000, epochs=1, shuffle=False)\r\n\r\n\r\n    if __name__=='__main__':\r\n        main_()\r\n\r\n", "comments": ["@kupferb \r\nPlease post this issue on [keras-team/keras repo.](https://github.com/keras-team/keras/issues)\r\nTo know more see;\r\n[https://discuss.tensorflow.org/t/keras-project-moved-to-new-repository-in-https-github-com-keras-team-keras/1999](https://discuss.tensorflow.org/t/keras-project-moved-to-new-repository-in-https-github-com-keras-team-keras/1999)\r\nThank you!", "This issue has been automatically marked as stale because it has no recent activity. It will be closed if no further activity occurs. Thank you.\n", "Are you satisfied with the resolution of your issue?\n<a href=\"https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&entry.2137816233=https://github.com/tensorflow/tensorflow/issues/53220\">Yes</a>\n<a href=\"https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&entry.2137816233=https://github.com/tensorflow/tensorflow/issues/53220\">No</a>\n"]}, {"number": 53219, "title": "fix msvc build break on non en-US codepage", "body": "`tensorflow/lite/python/analyzer_wrapper/model_analyzer.cc(166): error C2001: \u5e38\u6578\u4e2d\u5305\u542b\u65b0\u884c\u5b57\u5143`", "comments": []}, {"number": 53218, "title": "Tflite c++ inference", "body": "`` have a tflite model for mask detection with a sigmoid layer that outputs values between 0[mask] and 1[no_mask]\r\n\r\nI examined the input and output node using netron and here's what I got\r\n![hih](https://user-images.githubusercontent.com/67305499/143722280-44599d76-0038-4bb0-8cbc-1ef86eb0897c.png)\r\n:\r\nI tested the model for inference in python and it works great.\r\n```\r\n`# A simple inference pipline \r\n\r\nimport numpy as np\r\nimport tensorflow as tf\r\nimport cv2\r\n\r\n\r\n# Load TFLite model and allocate tensors.\r\ninterpreter = tf.lite.Interpreter(model_path=\"efficient_net.tflite\")\r\ninterpreter.allocate_tensors()\r\n\r\n# Get input and output tensors.\r\ninput_details = interpreter.get_input_details()\r\noutput_details = interpreter.get_output_details()\r\n\r\n# Rescale to [1,32,32,1].\r\ninput_shape = input_details[0]['shape']\r\nimg = cv2.imread(\"nomask.jpg\")\r\nimg_gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)\r\ninput_data = img_gray[ ..., tf.newaxis]\r\ninput_data  =tf.image.resize(input_data, [32,32])\r\ninput_data = input_data[ tf.newaxis,...]\r\ninput_data = np.array(input_data, dtype=np.float32)\r\n\r\n\r\n# setting input \r\ninterpreter.set_tensor(input_details[0]['index'], input_data)\r\n\r\n\r\ninterpreter.invoke()\r\n\r\noutput_data = interpreter.get_tensor(output_details[0]['index'])\r\nprint(output_data[0][0])  `\r\n```\r\n\r\nI tried doing the same using c++ but I get either 0 or no output at all\r\nhere is my code \r\n```\r\n#include <iostream>\r\n#include <cstdio>\r\n#include \"tensorflow/lite/interpreter.h\"\r\n#include \"tensorflow/lite/kernels/register.h\"\r\n#include \"tensorflow/lite/model.h\"\r\n#include \"tensorflow/lite/optional_debug_tools.h\"\r\n#include \"opencv2/opencv.hpp\"\r\n\r\nusing namespace cv;\r\n\r\n\r\n#define TFLITE_MINIMAL_CHECK(x)                                  \\\r\n    if (!(x))                                                    \\\r\n    {                                                            \\\r\n        fprintf(stderr, \"Error at %s:%d\\n\", __FILE__, __LINE__); \\\r\n        exit(1);                                                 \\\r\n    }\r\n\r\nint main(int argc, char* argv[])\r\n{\r\n    if (argc != 2)\r\n    {\r\n        fprintf(stderr, \"minimal <tflite model>\\n\");\r\n        return 1;\r\n    }\r\n    const char* filename = argv[1];\r\n\r\n\r\n\r\n    // read image file\r\n    cv::Mat img = cv::imread(\"D:\\\\nomask.png\");\r\n\r\n    // convert to float; BGR -> Grayscale\r\n    cv::Mat inputImg;\r\n    img.convertTo(inputImg, CV_32FC1);\r\n    cv::cvtColor(inputImg, inputImg, cv::COLOR_BGR2GRAY);\r\n    // resize image as model input\r\n    cv::resize(inputImg, inputImg, cv::Size(32, 32));\r\n    \r\n    \r\n    // Load model\r\n    std::unique_ptr<tflite::FlatBufferModel> model =\r\n        tflite::FlatBufferModel::BuildFromFile(filename);\r\n    TFLITE_MINIMAL_CHECK(model != nullptr);\r\n\r\n    // Build the interpreter with the InterpreterBuilder.\r\n    // Note: all Interpreters should be built with the InterpreterBuilder,\r\n    // which allocates memory for the Intrepter and does various set up\r\n    // tasks so that the Interpreter can read the provided model.\r\n    tflite::ops::builtin::BuiltinOpResolver resolver;\r\n    tflite::InterpreterBuilder builder(*model, resolver);\r\n    std::unique_ptr<tflite::Interpreter> interpreter;\r\n    builder(&interpreter);\r\n    TFLITE_MINIMAL_CHECK(interpreter != nullptr);\r\n\r\n    // Allocate tensor buffers.\r\n    TFLITE_MINIMAL_CHECK(interpreter->AllocateTensors() == kTfLiteOk);\r\n    \r\n\r\n    // Fill input buffers\r\n    // TODO(user): Insert code to fill input tensors.\r\n    // Note: The buffer of the input tensor with index `i` of type T can\r\n    float* input = interpreter->typed_input_tensor<float>(0);\r\n    input = inputImg.ptr<float>(0);\r\n    \r\n    // Run inference\r\n    TFLITE_MINIMAL_CHECK(interpreter->Invoke() == kTfLiteOk);\r\n    printf(\"\\n\\n=== Post-invoke Interpreter State ===\\n\");\r\n    \r\n\r\n     \r\n     \r\n    \r\n    float* output = interpreter->typed_output_tensor<float>(149);\r\n    std::cout << output[0];\r\n  \r\n\r\n    return 0;\r\n}\r\n```\r\nplease help I have been stuck for 3 days :(", "comments": ["@mohamedgamal7 ,\r\nCan you please let us know the tensorflow version you are trying?", "This issue has been automatically marked as stale because it has no recent activity. It will be closed if no further activity occurs. Thank you.\n", "Closing as stale. Please reopen if you'd like to work on this further.\n"]}, {"number": 53217, "title": "Loading dynamic library cannot find definition of a symbol", "body": "**System information**\r\n- Have I written custom code (as opposed to using a stock example script provided in TensorFlow): using google-research/language\r\n- OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Ubuntu 20.04\r\n- Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: N/A\r\n- TensorFlow installed from (source or binary): installed with pip\r\n- TensorFlow version (use command below): git - v2.7.0-rc1-69-gc256c071bb2 , tf - 2.7.0\r\n- Python version: 3.8.10 \r\n- Bazel version (if compiling from source): N/A\r\n- GCC/Compiler version (if compiling from source): 9.3.0\r\n- CUDA/cuDNN version: \r\nBuilt on Sun_Jul_28_19:07:16_PDT_2019\r\nCuda compilation tools, release 10.1, V10.1.243\r\n- GPU model and memory: RTX 3090 , 20GB available\r\n\r\n**Describe the current behavior**\r\nThe dynamic library file does not have definition/implementation for a symbol\r\n```\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.8/runpy.py\", line 194, in _run_module_as_main\r\n    return _run_code(code, main_globals, None,\r\n  File \"/usr/lib/python3.8/runpy.py\", line 87, in _run_code\r\n    exec(code, run_globals)\r\n  File \"/home/kevin/pdev/lmrl/language/language/search_agents/muzero/muzero_main.py\", line 25, in <module>\r\n    from language.search_agents.muzero import agent_lib\r\n  File \"/home/kevin/pdev/lmrl/language/language/search_agents/muzero/agent_lib.py\", line 25, in <module>\r\n    from muzero import actor\r\n  File \"/home/kevin/pdev/lmrl/language/muzero/actor.py\", line 28, in <module>\r\n    from seed_rl import grpc\r\n  File \"/home/kevin/pdev/lmrl/language/seed_rl/grpc/__init__.py\", line 21, in <module>\r\n    from seed_rl.grpc.python.ops import *  \r\n  File \"/home/kevin/pdev/lmrl/language/seed_rl/grpc/python/ops.py\", line 25, in <module>\r\n    from seed_rl.grpc.python.ops_wrapper import gen_grpc_ops\r\n  File \"/home/kevin/pdev/lmrl/language/seed_rl/grpc/python/ops_wrapper.py\", line 25, in <module>\r\n    gen_grpc_ops = tf.load_op_library(\r\n  File \"/home/kevin/pdev/lmrl/language/language/search_agents/env/lib/python3.8/site-packages/tensorflow/python/framework/load_library.py\", line 59, in load_op_library\r\n    lib_handle = py_tf.TF_LoadLibrary(library_filename)\r\ntensorflow.python.framework.errors_impl.NotFoundError: /home/kevin/pdev/lmrl/language/seed_rl/grpc/python/../grpc_cc.so: undefined symbol: _ZN4absl14lts_2020_02_2518container_internal18global_next_sampleE\r\n(env) root@kevin-System-Product-Name:/home/kevin/pdev/lmrl/language# \r\n```\r\n\r\n**Describe the expected behavior**\r\nThe libraries load successfully and tensorflow can create the node graph on the gpu\r\n\r\n**[Contributing](https://www.tensorflow.org/community/contribute)**\r\n\r\n- Do you want to contribute a PR? (yes/no): yes\r\n- Briefly describe your candidate solution(if contributing): fix some dependency?\r\n\r\n**Standalone code to reproduce the issue**\r\nProvide a reproducible test case that is the bare minimum necessary to generate\r\nthe problem. If possible, please share a link to Colab/Jupyter/any notebook.\r\n\r\nIt takes some time but setup google-research/language/language/seach_agents/muzero and run muzero_main.py\r\n\r\n**Other info / logs** Include any logs or source code that would be helpful to\r\ndiagnose the problem. If including tracebacks, please include the full\r\ntraceback. Large logs and files should be attached.\r\n", "comments": ["Hi @kovkev! \r\nCould you please share a standalone code to reproduce this issue?", "It would require some work but \n\nGit clone http://github.com/google-research/language.git\n\nCd language\n\nPip install -r language/search_agents/requirements.txt\n\nPython3 -m language.search_agents.muzero.muzero_main\n\n", "I solved this by downgrading my version of tensorflow", "Hi @kovkev !Thanks for confirming the same and Sorry for the late response. I was getting a lot of import errors. Could you please provide a Colab gist to find the root cause of this issue. I think this issue would suit best in this[ repo](https://github.com/google-research/seed_rl/issues) though. Thanks!", "This issue has been automatically marked as stale because it has no recent activity. It will be closed if no further activity occurs. Thank you.\n", "Closing as stale. Please reopen if you'd like to work on this further.\n"]}, {"number": 53216, "title": "Error after running `python generate2.py --output_dir=/tmp/out`", "body": "**System information**\r\n- OS Platform and Distribution: Windows 10 1809 build: 17763.2300\r\n- Mobile device if the issue happens on mobile device: \r\n- TensorFlow installed from (source or binary):\r\n- TensorFlow version: 2.6.0\r\n- Python version: 3.9.7\r\n- Installed using virtualenv? pip? conda?: pip\r\n- Bazel version (if compiling from source):\r\n- GCC/Compiler version (if compiling from source):\r\n- CUDA/cuDNN version:\r\n- GPU model and memory: Got no GPU\r\n\r\n\r\n\r\n**Describe the problem**\r\nFollowed [these instructions](https://www.tensorflow.org/community/contribute/docs#build_api_docs), but encountered the following error after running `python generate2.py --output_dir=/tmp/out`:\r\n\r\n![q](https://user-images.githubusercontent.com/16363767/143685950-4fd00fd2-4b4a-478e-ac65-2592cc21ecd9.png)\r\n\r\n**Provide the exact sequence of commands / steps that you executed before running into the problem**\r\n```shell\r\npip install git+https://github.com/tensorflow/docs\r\n\r\ngit clone https://github.com/tensorflow/tensorflow\r\ncd tensorflow/tensorflow/tools/docs\r\npython generate2.py --output_dir=/tmp/out\r\n```\r\n\r\n**Any other info / logs**\r\nInclude any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached.\r\n[tf.log](https://github.com/tensorflow/tensorflow/files/7611906/tf.log)\r\n\r\n", "comments": ["I also upgraded to `tensorflow 2.7` and got the same error.", "I'm able to run this in colab, I don't see any issue with the source link problem, please find the gist [here](https://colab.research.google.com/gist/sachinprasadhs/9d6b135d60baa67b6e58d2c50738dfb0/53216.ipynb) for reference.\r\nOn your windows machine, could you please try the same steps by creating the virtual environment and fresh install Tensorflow 2.7, if you find the issue again try installing tf-nightly an check.", "> try the same steps by creating the virtual environment and fresh install Tensorflow 2.7\r\n\r\n<details>\r\n<a href=\"https://github.com/tensorflow/tensorflow/files/7708994/2.7.txt\">log</a>\r\n<img src=\"https://user-images.githubusercontent.com/16363767/145939594-ba2e774b-9687-4438-992c-5dd051debac4.png\" />\r\n</details>\r\n\r\n> try installing tf-nightly and check\r\n<details>\r\n<a href=\"https://github.com/tensorflow/tensorflow/files/7709002/nightly.txt\">log</a>\r\n<img src=\"https://user-images.githubusercontent.com/16363767/145940079-7b678499-d810-4bf1-a55d-4d8cb40b262f.png\" />\r\n</details>", "In the `--output_dir` instead of `/tmp/out` create a folder in the same level and give the absolute path and check it.", "`tensorflow`: [log](https://github.com/tensorflow/tensorflow/files/7724436/abs.txt)\r\n\r\n`tf-nightly`: [log](https://github.com/tensorflow/tensorflow/files/7724567/abs-nightly.txt)\r\n\r\nnote: did not `pull` in `tensorflow` (it still is at 6b13ceba780)", "@markmcd might also look at this.", "Looks like a recent change wasn't including templates when `pip install`ing on Windows. I've got a PR out to fix that, though this should get us back to the original issue, which I'll check out next.", "It looks like the generated links are in Windows path format:\r\n\r\ne.g. `tf/summary/audio.md`: \r\n```\r\n<a target=\"_blank\" href=\"https://github.com/tensorflow/tensorboard/tree/2.7.0/tensorboard\\plugins\\audio\\summary_v2.py#L32-L125\">\r\n```\r\n\r\nSmells like `os.path.join` is being used for URLs somewhere.", "Quick update - I have a PR in the works to sort this out, but I still need to do some more testing to make sure I've got everything. Should be ready for review tomorrow.", "tensorflow/docs@01d385dda9778a426f4d1cc84c60917a21856816 is in, just waiting for tensorflow/docs#1991 and this should be resolved.", "Everything is in now, sync to head and see if it works for you now. There's been a bit of churn on this code recently but hopefully it's all working now.", "Yes, it works! Thanks! [log](https://github.com/tensorflow/tensorflow/files/7857931/tf.txt)\r\n \r\n**Just one other thing:**\r\n\r\ncurrently, my python installation sits in `C:\\python39`.\r\n\r\nso everything works fine when I create the virtual Python environment in the `C:\\` drive. (e.g. `C:\\foo`)\r\n\r\nbut if I go to `D:\\` drive and create the `venv` in there (e.g. `D:\\bar`), then, the following error occurs:\r\n<details>\r\n<a href=\"https://github.com/tensorflow/tensorflow/files/7858289/log2.txt\">log</a>\r\n<img src=\"https://user-images.githubusercontent.com/16363767/149230678-592cc549-d184-4c8b-8e9f-96f27b34881d.png\" />\r\n</details>\r\n\r\nI also tried `py .../generate2.py --output_dir=D:\\out`, but encountered the same error.\r\n\r\nI'm not sure if this counts as an issue,\r\nbut I thought it's worth mentioning as long as the attention is on it.\r\n\r\nAnyways, thanks again \ud83d\ude4f", "Hi @m-ahmadi ! I checked the instructions in this [template ](https://github.com/tensorflow/tensorflow/issues/53216#issue-1065060058) in my local machine with  TF 2.8   and did not get any issue  . Can you please try again after  correcting  the typo in **--output_dir=D:\\output** to **--output_dir=D:/out**  ?Thanks!", "Hi @mohantym I tried it with the `--output-dir=D:/out` but it still throws the `path is on mount 'C:', start on mount 'D:'` error.\r\n[log](https://github.com/tensorflow/tensorflow/files/8024658/log.txt)\r\n\r\n", "Hi,\r\n\r\nThanks for your patience on this one.\r\n\r\nSo the code where it's failing now is here:\r\n\r\nhttps://github.com/tensorflow/docs/blob/6914e839f3b89d4d25c56277108ab2b8d1c18619/tools/tensorflow_docs/api_generator/parser.py#L588\r\n\r\nBasically it's trying to determine which file a python object was defined in, and then convert that to a URL pointing to github.\r\n\r\nThe code path is:\r\n```\r\ndef get_defined_in(py_object,  parser_config) -> Optional[FileLocation]:\r\n  base_dirs_and_prefixes = zip(parser_config.base_dir,\r\n                               parser_config.code_url_prefix)\r\n  obj_path = inspect.getfile(py_object)\r\n\r\n  code_url_prefix = None\r\n  for base_dir, temp_prefix in base_dirs_and_prefixes:\r\n    rel_path = os.path.relpath(path=obj_path, start=base_dir)\r\n    # A leading \"..\" indicates that the file is not inside `base_dir`, and\r\n    # the search should continue.\r\n    if rel_path.startswith('..'):\r\n      continue\r\n```\r\n\r\n* `base_dirs_and_prefixes` is a list of `(directory, url)` pairs.\r\n* `obj_path` is the file we found this object was defined in.\r\n\r\nThe code is trying to determine which \"base directory\" the source lives in, so it can apply the right URL prefix.\r\n\r\nSo I guess some of the code is installed on `C:` and some is installed on `D:`. So it's trying to document an object it found on C, and it's trying to check if that source file is in a directory on D. I think there's a simple fix here using `pathlib.Path.is_relative_to`.\r\n\r\nI'm sending a quick fix.", "Are you satisfied with the resolution of your issue?\n<a href=\"https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&entry.2137816233=https://github.com/tensorflow/tensorflow/issues/53216\">Yes</a>\n<a href=\"https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&entry.2137816233=https://github.com/tensorflow/tensorflow/issues/53216\">No</a>\n"]}, {"number": 53215, "title": "TensorFlow Lite Converter changed output_shapes", "body": "### 1. System information\r\n\r\n- OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Windows 10\r\n- TensorFlow installation (pip package or built from source): pip\r\n- TensorFlow library (version, if pip package or github SHA, if built from source): 2.5.0 (for model training and exporting to saved model) &  2.7.0 (for exporting to TFLite in Google Colab)\r\n\r\n### 2. Code\r\n\r\nProvide code to help us reproduce your issues using one of the following options:\r\nTrained my model with model_main_tf2.py script before exporting to saved model using the exporter_main_v2.py script. After that I uploaded my saved model to Google Drive before trying to convert the model to TFLite format. Here is the code for TFLite Convert:\r\n\r\n```\r\nconverter = tf.compat.v1.lite.TFLiteConverter.from_saved_model(MODEL_PATH,\r\n    input_arrays=[\"serving_default_input_tensor\"] ,\r\n    input_shapes={'serving_default_input_tensor':[1,640,640,3]},\r\n    output_arrays=['StatefulPartitionedCall:1', 'StatefulPartitionedCall:2', 'StatefulPartitionedCall:4', 'StatefulPartitionedCall:5'])\r\nconverter.allow_custom_ops=False\r\nconverter.experimental_new_converter = True\r\nconverter.target_spec.supported_ops = [tf.lite.OpsSet.TFLITE_BUILTINS,tf.lite.OpsSet.SELECT_TF_OPS]\r\ntflite_model = converter.convert()\r\nopen(\"/content/new.tflite\", \"wb\").write(tflite_model)\r\n```\r\n\r\n#### Reference for making the custom object detection model:\r\n1)  Reference [Object Detection Tutorial](https://tensorflow-object-detection-api-tutorial.readthedocs.io/en/latest/install.html): Installation until exporting to saved model\r\n\r\n### 3. Failure after conversion\r\nIf the conversion is successful, but the generated model is wrong, then state what is wrong: It changed the output shapes of each outputs from this:\r\n```\r\nINFO:tensorflow:output tensors info:\r\nINFO:tensorflow:Tensor's key in saved_model's tensor_map: num_detections\r\nINFO:tensorflow: tensor name: StatefulPartitionedCall:5, shape: (1), type: DT_FLOAT\r\nINFO:tensorflow:Tensor's key in saved_model's tensor_map: detection_classes\r\nINFO:tensorflow: tensor name: StatefulPartitionedCall:2, shape: (1, 100), type: DT_FLOAT\r\nINFO:tensorflow:Tensor's key in saved_model's tensor_map: detection_boxes\r\nINFO:tensorflow: tensor name: StatefulPartitionedCall:1, shape: (1, 100, 4), type: DT_FLOAT\r\nINFO:tensorflow:Tensor's key in saved_model's tensor_map: raw_detection_scores\r\nINFO:tensorflow: tensor name: StatefulPartitionedCall:7, shape: (1, 51150, 101), type: DT_FLOAT\r\nINFO:tensorflow:Tensor's key in saved_model's tensor_map: detection_multiclass_scores\r\nINFO:tensorflow: tensor name: StatefulPartitionedCall:3, shape: (1, 100, 101), type: DT_FLOAT\r\nINFO:tensorflow:Tensor's key in saved_model's tensor_map: detection_anchor_indices\r\nINFO:tensorflow: tensor name: StatefulPartitionedCall:0, shape: (1, 100), type: DT_FLOAT\r\nINFO:tensorflow:Tensor's key in saved_model's tensor_map: detection_scores\r\nINFO:tensorflow: tensor name: StatefulPartitionedCall:4, shape: (1, 100), type: DT_FLOAT\r\nINFO:tensorflow:Tensor's key in saved_model's tensor_map: raw_detection_boxes\r\nINFO:tensorflow: tensor name: StatefulPartitionedCall:6, shape: (1, 51150, 4), type: DT_FLOAT\r\n```\r\nto this:\r\n```\r\nprint(input_details)\r\n[{'name': 'serving_default_input_tensor', 'index': 0, 'shape': array([  1, 640, 640,   3], dtype=int32), \r\n'shape_signature': array([  1, 640, 640,   3], dtype=int32), 'dtype': <class 'numpy.uint8'>, \r\n'quantization': (0.0, 0), 'quantization_parameters': {'scales': array([], dtype=float32), \r\n'zero_points': array([], dtype=int32), 'quantized_dimension': 0}, 'sparsity_parameters': {}}]\r\n\r\nprint(output_details)\r\n[{'name': 'StatefulPartitionedCall', 'index': 2449, 'shape': array([1, 1], dtype=int32), 'shape_signature': array([ 1, -1], dtype=int32), 'dtype': <class 'numpy.float32'>, 'quantization': (0.0, 0), 'quantization_parameters': {'scales': array([], dtype=float32), 'zero_points': array([], dtype=int32), 'quantized_dimension': 0}, 'sparsity_parameters': {}}, \r\n{'name': 'StatefulPartitionedCall:1', 'index': 2502, 'shape': array([1, 1, 1], dtype=int32), 'shape_signature': array([ 1, -1, -1], dtype=int32), 'dtype': <class 'numpy.float32'>, 'quantization': (0.0, 0), 'quantization_parameters': {'scales': array([], dtype=float32), 'zero_points': array([], dtype=int32), 'quantized_dimension': 0}, 'sparsity_parameters': {}}, \r\n{'name': 'StatefulPartitionedCall:2', 'index': 2484, 'shape': array([1, 1], dtype=int32), 'shape_signature': array([ 1, -1], dtype=int32), 'dtype': <class 'numpy.float32'>, 'quantization': (0.0, 0), 'quantization_parameters': {'scales': array([], dtype=float32), 'zero_points': array([], dtype=int32), 'quantized_dimension': 0}, 'sparsity_parameters': {}}, \r\n{'name': 'StatefulPartitionedCall:3', 'index': 2467, 'shape': array([1, 1, 1], dtype=int32), 'shape_signature': array([ 1, -1, -1], dtype=int32), 'dtype': <class 'numpy.float32'>, 'quantization': (0.0, 0), 'quantization_parameters': {'scales': array([], dtype=float32), 'zero_points': array([], dtype=int32), 'quantized_dimension': 0}, 'sparsity_parameters': {}}, \r\n{'name': 'StatefulPartitionedCall:4', 'index': 2431, 'shape': array([1, 1], dtype=int32), 'shape_signature': array([ 1, -1], dtype=int32), 'dtype': <class 'numpy.float32'>, 'quantization': (0.0, 0), 'quantization_parameters': {'scales': array([], dtype=float32), 'zero_points': array([], dtype=int32), 'quantized_dimension': 0}, 'sparsity_parameters': {}}, \r\n{'name': 'StatefulPartitionedCall:5', 'index': 2414, 'shape': array([1], dtype=int32), 'shape_signature': array([1], dtype=int32), 'dtype': <class 'numpy.float32'>, 'quantization': (0.0, 0), 'quantization_parameters': {'scales': array([], dtype=float32), 'zero_points': array([], dtype=int32), 'quantized_dimension': 0}, 'sparsity_parameters': {}}, \r\n{'name': 'StatefulPartitionedCall:6', 'index': 519, 'shape': array([    1, 51150,     4], dtype=int32), 'shape_signature': array([    1, 51150,     4], dtype=int32), 'dtype': <class 'numpy.float32'>, 'quantization': (0.0, 0), 'quantization_parameters': {'scales': array([], dtype=float32), 'zero_points': array([], dtype=int32), 'quantized_dimension': 0}, 'sparsity_parameters': {}}, \r\n{'name': 'StatefulPartitionedCall:7', 'index': 527, 'shape': array([    1, 51150,   101], dtype=int32), 'shape_signature': array([    1, 51150,   101], dtype=int32), 'dtype': <class 'numpy.float32'>, 'quantization': (0.0, 0), 'quantization_parameters': {'scales': array([], dtype=float32), 'zero_points': array([], dtype=int32), 'quantized_dimension': 0}, 'sparsity_parameters': {}}]\r\n```\r\nAs you can see, the output shapes of StatefulPartitionedCall 0 - 4 changed. Any solution? I've searched around but I haven't seen any problems similar with the problems I have.\r\n\r\n### 4. Information\r\nPre trained models used: ssd_mobilenet_v2_fpnlite_640x640_coco17_tpu-8\r\n\r\nThe only things I've changed from the original pipeline was these:\r\nnum_classes: 100 (because I have 100 classes)\r\nbatch_size: 2\r\ndeleted all augmentation steps (flip and crop)\r\nfine_tune_checkpoint=\"my_path/pre-trained-models/ssd_mobilenet_v2_fpnlite_640x640_coco17_tpu-8/checkpoint/ckpt-0\"\r\nnum_steps = 100000\r\nfine_tune_checkpoint_type= \"detection\"\r\nuse_bfloat16= false\r\ntrain_input_reader=changed the path\r\neval_input_reader=changed the path\r\n\r\nI'm sorry if my explanation seems confusing, this is the second time I've ever opened an issue in Github. If you need the saved model and tflite, I'll be willing to share it. Please help!", "comments": ["@sherrylsin20,\r\n\r\nCan you share the saved model and tflite file with us to reproduce the issue? Thanks!", "@sanatmpa1 here is the link for the models:\r\nhttps://drive.google.com/drive/folders/1fkbBzg8lnPI8Hd7hNPk9S_WgHx2axge_?usp=sharing", "You can refer to [this](https://www.tensorflow.org/lite/examples/object_detection/overview) example document from Tensorflow `tflite` to check all the steps.", "This issue has been automatically marked as stale because it has no recent activity. It will be closed if no further activity occurs. Thank you.\n", "Closing as stale. Please reopen if you'd like to work on this further.\n", "Are you satisfied with the resolution of your issue?\n<a href=\"https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&entry.2137816233=https://github.com/tensorflow/tensorflow/issues/53215\">Yes</a>\n<a href=\"https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&entry.2137816233=https://github.com/tensorflow/tensorflow/issues/53215\">No</a>\n"]}, {"number": 53214, "title": "[Docker] Tensorflow 2.4.4 images are missing from docker hub", "body": "Tensorflow 2.4.4 has been released 25 days ago, but it appears that the docker images have not made their way to docker hub yet.\r\n\r\nWould it be possible to investigate the problem and push the images to docker hub?\r\n\r\nThanks!", "comments": ["Hi @sanatmpa1! Could you please look at this issue?", "Hi @tomzx ! \r\nHave you checked [2.8.0 docker image ](https://hub.docker.com/layers/tensorflow/tensorflow/2.8.0/images/sha256-7c01f75d58fadc2cd1109d5baac1925ed131e05925d840b1b49363c794d1c4db?context=explore)yet ? ", "I do not have a need for this image, I was only letting you know it's unavailable.\r\n\r\nFeel free to close if there's no plan to release 2.4.4 on docker hub.", "@tomzx ! Thanks for responding . Closing this issue now.", "Are you satisfied with the resolution of your issue?\n<a href=\"https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&entry.2137816233=https://github.com/tensorflow/tensorflow/issues/53214\">Yes</a>\n<a href=\"https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&entry.2137816233=https://github.com/tensorflow/tensorflow/issues/53214\">No</a>\n"]}, {"number": 53213, "title": "TF-TRT Enable native segment fallback test with TRT 8", "body": "In case there is an error during TRT ICudaEngine engine creation, TF-TRT falls back to native segment (TF function) execution. Previously it was only possible to test this with TRT 7 or earlier, because the method to trigger the error was specific to TRT version < 8.0. \r\n\r\nThis PR introduces an environment variable `TF_TRT_ABORT_CUDA_ENGINE_BUILD`, which can be used  test this fallback mechanism with TRT 8 and later versions.\r\n\r\nAdditionally `DebugString(ITensorProxyPtr)` is corrected for the case when the object is `SimpleITensor`.\r\n\r\nTagging @bixia1 for review and @DEKHTIARJonathan for visibility.", "comments": ["Thanks @Gabomfim and @bixia1 for the review, I have corrected the inconsistency. "]}, {"number": 53211, "title": "Validation split does not take into account the shuffle=True argument of the tuner search method.", "body": "https://github.com/tensorflow/tensorflow/blob/80117da12365720167632761a61e0e32e4db2dcc/tensorflow/python/keras/engine/training.py#L1130\r\n\r\nI believe I spotted a mistake in the keras tuner code. While shuffle=True is indeed the default argument, it is not taken into account when creating the train and validation set.\r\n\r\nHope this helps for people to come.", "comments": ["@cevheck ,\r\nWe see that the issue [template](https://github.com/tensorflow/tensorflow/issues/new/choose) has not been filled, could you please do so as it helps us analyse the issue. Can you please elaborate about the statement. Also, please specify the Use Cases for this statement. Thanks!", "This issue has been automatically marked as stale because it has no recent activity. It will be closed if no further activity occurs. Thank you.\n", "Closing as stale. Please reopen if you'd like to work on this further.\n"]}, {"number": 53210, "title": "Cannot build via pip on macOS ARM64 M1 Apple Silicon", "body": "I am running macOS 11, python 3.9, and am using ARM64 hardware (Apple Silicon M1). It's a MacBook Air.\r\n\r\nTrying to install tensor flow via pip\r\n`pip3.9 install tensorflow-macos==2.6.0`\r\n\r\nresults in the following error:\r\n\r\n```\r\nERROR: Could not find a version that satisfies the requirement h5py~=3.1.0 (from tensorflow-macos) (from versions: 2.2.1, 2.3.0b1, 2.3.0, 2.3.1, 2.4.0b1, 2.4.0, 2.5.0, 2.6.0, 2.7.0rc2, 2.7.0, 2.7.1, 2.8.0rc1, 2.8.0, 2.9.0rc1, 2.9.0, 2.10.0, 3.0.0rc1, 3.0.0, 3.1.0, 3.2.0, 3.2.1, 3.3.0, 3.4.0, 3.5.0, 3.6.0)\r\nERROR: No matching distribution found for h5py~=3.1.0\r\n```\r\n\r\nh5py doesn't currently have a wheel available. I can install from source, for example, by installing using home-brew and the following command:\r\n`HDF5_DIR=/opt/homebrew/Cellar/hdf5/1.12.1 pip3.9 install --no-binary=h5py h5py==3.1.0`\r\nThis just installs without the binary.\r\n\r\nHowever, there's no way for me to specify this in the tensor flowinstallation via pip, so it won't work.\r\n\r\nHow can we resolve this issue?", "comments": ["Hi @KTRosenberg ! Could you refer these [thread ](https://developer.apple.com/metal/tensorflow-plugin/)for installation. I suggest for 2.5 branch as  2.6 branch is having some issues during model creation in MacOS. You can also build from source referring  this [link](https://www.tensorflow.org/install/source). Thanks!", "Oh I see. So does this absolutely require conda? I'm in a challenging situation in which a few libraries I depend on entirely have to install tensorflow, so it's not simple to migrate to using conda instead of basic pip, as some of those libraries don't behave under conda.\r\nIn other words, the problem isn't just tensorflow. I'm sure the solutions you linked are great standalone. The library interop is not likely to work though for something like this.\r\n\r\nFor what it's worth, I am using Spacy, which is seemingly having its own trouble with getting transformers-based models and installations working, and I am also attempting to use a library called \"coreferee,\" which seems much less aware of the Apple Silicon changes required. It's a little bit of a mess.\r\n\r\nDo you anticipate the basic pip installation being usable again sometime in the near future? I imagine things are still transitioning over.\r\nIf that's the case, I could hang on a bit longer on an intel-based machine. Hopefully fixes are on the order of a couple of months max? Do you have a sense of how things are coming along?\r\n", "@KTRosenberg !It is always advised to test the ongoing work in virtual environments  to avoid library conflicts . But you can create virtual environment without Conda too. Attaching relevant [thread](https://www.tensorflow.org/install/pip#ubuntu) for reference .Thanks!", "Yes, I understand.\r\n\r\nAre the tensorflow people going to work on a simpler installation process using just pip eventually? Not everyone likes conda.", " @KTRosenberg ! I feel positive about that too. Feel free to close this issue if it helped. Thanks!  ", "Are you satisfied with the resolution of your issue?\n<a href=\"https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&entry.2137816233=https://github.com/tensorflow/tensorflow/issues/53210\">Yes</a>\n<a href=\"https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&entry.2137816233=https://github.com/tensorflow/tensorflow/issues/53210\">No</a>\n"]}, {"number": 53208, "title": "cmake: NNAPI delegate uses fp16_headers", "body": null, "comments": ["@terryheo Can you please review this PR ? Thanks!"]}, {"number": 53207, "title": "Does TF now support neural network inferring on DSP \uff0cusing snapdragon 865 equipped with hexagon698", "body": "When i run benchmark on snapdragon 865, it didn't work and said :\"Could not create Hexagon delegate: platform may not support delegate or required libraries are missing\". Then i checked my chip information, it was equipped with hexagon698. I read the [document](https://www.tensorflow.org/lite/performance/hexagon_delegate) that tensorflow-lite supports hexagon 690 and others, so I want to know whether it supports 698.\r\n```sh\r\nSTARTING!\r\nLog parameter values verbosely: [0]\r\nNum threads: [4]\r\nGraph: [models/resnetv1_50_quant.tflite]\r\nInput layers: [input]\r\nInput shapes: [1,224,224,3]\r\nEnable op profiling: [1]\r\n#threads used for CPU inference: [4]\r\nUse Hexagon: [1]\r\nHexagon profiling: [1]\r\nLoaded model models/resnetv1_50_quant.tflite\r\nloaded libcdsprpc.so\r\nCould not create Hexagon delegate: platform may not support delegate or required libraries are missing\r\nTensor # 0 is named input_1 but flags call it input\r\nThe input model file size (MB): 26.2023\r\nInitialized session in 65.973ms.\r\nRunning benchmark for at least 1 iterations and at least 0.5 seconds but terminate if exceeding 150 seconds.\r\ncount=6 first=100521 curr=80282 min=79211 max=100521 avg=83420.5 std=7670\r\n\r\nRunning benchmark for at least 50 iterations and at least 1 seconds but terminate if exceeding 150 seconds.\r\ncount=50 first=78236 curr=79387 min=76850 max=84289 avg=79728.5 std=1611\r\n```", "comments": ["@dxxhjk ,\r\nIn order to expedite the trouble-shooting process, could you please provide a minimal code snippet and the TensorFlow version you are using.", "I compiled the .so files and benchmark_model file from the latest code yesterday, run benchmark on my android device.", "In fact, I now change my device into a mobile phone with snapdargon 855 chip and run benchmark again. The result was still not good, Hexagon delegate created successfully, but it said: \"Though Hexagon delegate is explicitly applied, the model graph will not be executed by the delegate.\"\r\n```sh\r\nSTARTING!\r\nLog parameter values verbosely: [0]\r\nNum threads: [4]\r\nGraph: [models/resnetv1_50_quant.tflite]\r\nInput layers: [input]\r\nInput shapes: [1,224,224,3]\r\nEnable op profiling: [1]\r\n#threads used for CPU inference: [4]\r\nUse Hexagon: [1]\r\nHexagon profiling: [1]\r\nLoaded model models/resnetv1_50_quant.tflite\r\nloaded libcdsprpc.so\r\nHexagon delegate created.\r\nThough Hexagon delegate is explicitly applied, the model graph will not be executed by the delegate.\r\nTensor # 0 is named input_1 but flags call it input\r\nThe input model file size (MB): 26.2023\r\nInitialized session in 69.282ms.\r\nRunning benchmark for at least 1 iterations and at least 0.5 seconds but terminate if exceeding 150 seconds.\r\ncount=10 first=133134 curr=42337 min=42148 max=133134 avg=53368.5 std=26750\r\n\r\nRunning benchmark for at least 50 iterations and at least 1 seconds but terminate if exceeding 150 seconds.\r\ncount=50 first=42322 curr=42725 min=42218 max=42725 avg=42393.8 std=102\r\n```\r\nSo how can I run neural network inferring with hexagon?", "For Snapdragon 855 it should be Hexagon 690 which is the listed supported device in the documentation.\r\n", "1) For the unsupported case, can you run this \r\nadb shell cat /sys/devices/soc0/soc_id\r\nand share the result\r\n\r\n2) Is it possible to share the model you're testing ? I'd like to have a look.\r\n\r\nThanks", "This issue has been automatically marked as stale because it has no recent activity. It will be closed if no further activity occurs. Thank you.\n", "Closing as stale. Please reopen if you'd like to work on this further.\n"]}, {"number": 53204, "title": "Keras Nadam optimizer behaves different to `ApplyAdamOp` with `use_nesterov` option", "body": "**System information**\r\n- Have I written custom code (as opposed to using a stock example script provided in TensorFlow): No\r\n- OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux Ubuntu 16.04 (but irrelevant)\r\n- Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: No\r\n- TensorFlow installed from (source or binary): binary (but irrelevant)\r\n- TensorFlow version (use command below): 2.3, 2.7.0, current master\r\n- Python version: 3.7\r\n- Bazel version (if compiling from source): -\r\n- GCC/Compiler version (if compiling from source): -\r\n- CUDA/cuDNN version: -\r\n- GPU model and memory: -\r\n\r\n**Describe the current behavior**\r\n\r\nNadam as implemented in the kernel via the `use_nesterov` option (`tensorflow/tensorflow/core/kernels/training_ops_gpu.cu.cc`) behaves different to `tf.keras.optimizers.Nadam`.\r\n\r\nWe observed this problem (here: https://github.com/rwth-i6/returnn/issues/766#issuecomment-979216833) where the model converged in TF 1 with the old Nadam and does not anymore with TF 2 with the new Nadam.\r\n\r\nSpecifically, in the kernel, you have this code:\r\n```cpp\r\nconst T mul_factor = (*lr_) * sqrt(static_cast<T>(1.0) - (*beta2_power_)) /\r\n                     (static_cast<T>(1.0) - (*beta1_power_));\r\n\r\n...\r\n\r\nauto m_i = m[i];\r\nauto g_i = grad[i];\r\nauto v_i = v[i];\r\n\r\nm_i += one_minus_beta1 * (g_i - m_i);\r\nv_i += one_minus_beta2 * (g_i * g_i - v_i);\r\nif (use_nesterov) {\r\n  var[i] -= mul_factor * (m_i * beta1 + one_minus_beta1 * g_i) /\r\n            (epsilon + sqrt(v_i));\r\n} else {\r\n  var[i] -= mul_factor * m_i / (epsilon + sqrt(v_i));\r\n}\r\n\r\nm[i] = m_i;\r\nv[i] = v_i;\r\n```\r\nAnd in the Keras Nadam optimizer, we have this code:\r\n```\r\ng_prime = grad / coefficients['one_minus_m_schedule_new']\r\nm_t = (coefficients['beta_1_t'] * m +\r\n       coefficients['one_minus_beta_1_t'] * grad)\r\nm_t = tf.compat.v1.assign(m, m_t, use_locking=self._use_locking)\r\nm_t_prime = m_t / coefficients['one_minus_m_schedule_next']\r\nv_t = (coefficients['beta_2_t'] * v +\r\n       coefficients['one_minus_beta_2_t'] * tf.square(grad))\r\nv_t = tf.compat.v1.assign(v, v_t, use_locking=self._use_locking)\r\nv_t_prime = v_t / coefficients['v_t_prime_denominator']\r\nm_t_bar = (coefficients['one_minus_m_t'] * g_prime +\r\n           coefficients['m_t_1'] * m_t_prime)\r\nvar_t = var - coefficients['lr_t'] * m_t_bar / (\r\n    tf.sqrt(v_t_prime) + coefficients['epsilon'])\r\n```\r\n\r\nThere are differences is the calculation of `m_t` and `v_t`. While mathematically the same, the variant in the kernel is probably numerically more stable.\r\n\r\nAnother difference is `mul_factor` vs `lr`.\r\n\r\n**Describe the expected behavior**\r\n\r\nI would expect that Nadam as implemented in the kernel via the `use_nesterov` option (`tensorflow/tensorflow/core/kernels/training_ops_gpu.cu.cc`, available since TF 1, also still in current master), which could be used via `tensorflow.contrib.opt.NadamOptimizer` in TF 1, is conceptually the same as `tf.keras.optimizers.Nadam`.\r\n", "comments": ["@albertz Could you please let us know if we can close this issue as we see the [PR](https://github.com/rwth-i6/returnn/pull/768) is merged? Thanks!", "> @albertz Could you please let us know if we can close this issue as we see the [PR](https://github.com/rwth-i6/returnn/pull/768) is merged? Thanks!\r\n\r\nNo, this is just our workaround to avoid the Keras Nadam optimizer by copying the old Nadam optimizer code from TF 1.\r\n\r\nMaybe you could do the same in TF 2, i.e. replace the current Keras Nadam optimizer by the old TF 1 Nadam optimizer?\r\n", "First of all, it should be clarified what variant is better:\r\n\r\n```cpp\r\nm_i = m_i + one_minus_beta1 * (g_i - m_i);\r\n```\r\nvs\r\n```cpp\r\nm_i = beta1 * m_i + one_minus_beta1 * g_i;\r\n```\r\n\r\nI think the first variant is better here. So this can be just adopted in the Keras code.\r\n", "Then, there is this difference in behavior on how `var[i]` (`var_t`) is calculated. This looks really different to me (or I oversee something). So maybe this is wrong in Keras? This should be clarified.\r\n\r\nIf this is not wrong, it should at least be clearly documented. And then there should maybe be an option to be able to use the old behavior (because in our case, the old behavior seems to work better).\r\n", "But also further, the old TF 1 Nadam optimizer used the native TF ops (`ApplyAdamOp` etc) directly. This is probably a bit more efficient than the pure TF code in the Keras Nadam optimizer. So why not use them?\r\n", "@albertz \r\nPlease post this issue on [keras-team/keras repo.](https://github.com/keras-team/keras/issues)\r\nTo know more see;\r\n[https://discuss.tensorflow.org/t/keras-project-moved-to-new-repository-in-https-github-com-keras-team-keras/1999](https://discuss.tensorflow.org/t/keras-project-moved-to-new-repository-in-https-github-com-keras-team-keras/1999)\r\nThank you!", "Well, yes, I can do that (**edit** reported here: https://github.com/keras-team/keras/issues/15710). However, this is only one aspect of the issue here.\r\n\r\nMaybe Keras Nadam was anyway always different and the Keras team decides to not change the Keras Nadam to what TF 1 had before. In that case, this stays a TF problem: Because what I need in any case is the Nadam optimizer from TF 1.\r\n\r\nAlso, the TF op for that is anyway still there.\r\n", "@albertz Thank you for the update! We see that you have mentioned the issue in [keras repo](https://github.com/keras-team/keras/issues/15710) . Could you please move this ticket  to closed status as we will track the other one there? Thanks!", "I'm not exactly sure how the Keras team decides on this. If they decide that the Keras Nadam optimizer should not be changed, then this issue stays relevant for TensorFlow itself and should not be closed.\r\n", "The above linked keras issue was discussed in the keras meeting and you can track the progress there and you can close this issue. Thanks!", "Thanks!", "Are you satisfied with the resolution of your issue?\n<a href=\"https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&entry.2137816233=https://github.com/tensorflow/tensorflow/issues/53204\">Yes</a>\n<a href=\"https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&entry.2137816233=https://github.com/tensorflow/tensorflow/issues/53204\">No</a>\n"]}, {"number": 53203, "title": "Feature request: tensorflow.keras layer to let us reorder the channels on a specific dimension of a tensor", "body": "<em>Please make sure that this is a feature request. As per our [GitHub Policy](https://github.com/tensorflow/tensorflow/blob/master/ISSUES.md), we only address code/doc bugs, performance issues, feature requests and build/installation issues on GitHub. tag:feature_template</em>\r\n\r\n**System information**\r\n- TensorFlow version (you are using): w.7\r\n- Are you willing to contribute it (Yes/No):\r\n- Yes, thou I don't know in how much time I would be able to ship it due to day job.\r\n\r\n**Describe the feature and the current behavior/state.**\r\nThe feature is a `tf.keras` layer to let us reorder the channels of a specific dimension on during the feedforward operation without having to rely on custom implementation. This would be nice to finetune and deploy models with RGB and BGR without having to change the software that calls the TF Serving API. \r\n\r\nIt would be something like\r\n```python\r\nrgb2bgr_layer = tf.keras.layers.ReorderChannel(axis=-1, order[2, 1, 0])\r\n```\r\n\r\n**Will this change the current api? How?**\r\nYes. It would add a new `tf.keras` layer such as the following:\r\n\r\n```python\r\nrgb2bgr_layer = tf.keras.layers.ReorderChannel(axis=-1, order[2, 1, 0])\r\n```\r\n\r\n**Who will benefit with this feature?**\r\nEveryone who wants to try and deploy different models without changing the software that calls the TF Serving API. \r\n\r\n**Any Other info.**\r\nWe can still to something like that-ish with a lambda layer:\r\n```python\r\ntf.keras.layers.Lambda(lambda i: i[..., ::-1])\r\n````\r\n\r\nBut that just does not seem right. Also, with a native layer things could be done faster on prediction time, which might be a must for some people.", "comments": ["For instance, if we can do that on TF python API I can do that almost surely. \r\n", "Just opened a PR on keras: https://github.com/keras-team/keras/pull/15707 .", "@piEsposito ,\r\nPlease feel free to close this issue here as it has been raised in Keras repo to avoid the duplicacy.Thanks!"]}, {"number": 53201, "title": "Refactor SparseSplit kernel into a device-specific functor", "body": "This is in preparation for adding a GPU implementation.\r\nAlso adds a test case for empty input tensors.\r\nNo functional change besides the added test.\r\n\r\ncc @nluehr ", "comments": []}, {"number": 53200, "title": "Can't use an estimator.BoostedTreesClassifier converted with TFLite", "body": "### 1. System information\r\n\r\n- OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux Ubuntu 20.04\r\n- TensorFlow installation (pip package or built from source): pip\r\n- TensorFlow library (version, if pip package or github SHA, if built from source): 2.7\r\n\r\n### 2. Code\r\n\r\nProvide code to help us reproduce your issues using one of the following options:\r\n\r\n\r\n\r\n#### Option B: Paste your code here or provide a link to a custom end-to-end colab\r\n\r\n```\r\nimport pandas as pd\r\nimport numpy as np\r\nimport pylab as pl\r\nimport tensorflow as tf\r\nfrom IPython.display import clear_output\r\n\r\n# features_with_effort is the list of features we want to use in the model, all of them are floats\r\nX_train = df_train[features_with_effort]\r\nX_test = df_test[features_with_effort]\r\ny_train = df_train[target]\r\ny_test = df_test[target]\r\n\r\nfeature_columns = []\r\nfor feat in features_with_effort:\r\n    feature_columns.append(fc.numeric_column(feat,\r\n                                           dtype=tf.float32))\r\n\r\nNUM_EXAMPLES = len(y_train)\r\n\r\ndef make_input_fn(X, y, n_epochs=None, shuffle=True):\r\n    def input_fn():\r\n        dataset = tf.data.Dataset.from_tensor_slices((dict(X), y))\r\n        if shuffle:\r\n            dataset = dataset.shuffle(NUM_EXAMPLES)\r\n        # For training, cycle thru dataset as many times as need (n_epochs=None).\r\n        dataset = dataset.repeat(n_epochs)\r\n        # In memory training doesn't use batching.\r\n        dataset = dataset.batch(NUM_EXAMPLES)\r\n        return dataset\r\n    return input_fn\r\n\r\n# Training and evaluation input functions.\r\ntrain_input_fn = make_input_fn(X_train, y_train)\r\neval_input_fn = make_input_fn(X_test, y_test, shuffle=False, n_epochs=1)\r\n\r\n# Defining and training the estimator\r\nn_batches = 1\r\nest = tf.estimator.BoostedTreesClassifier(feature_columns,\r\n                                          n_batches_per_layer=n_batches)\r\nest.train(train_input_fn, max_steps=10)\r\n\r\n# Eval.\r\nresult = est.evaluate(eval_input_fn)\r\nclear_output()\r\nprint(pd.Series(result))\r\n\r\n# Saving it\r\ndict_columns = {col.key : tf.Variable([], dtype=col.dtype) \r\n                       for col in feature_columns}\r\nserving_input_receiver_fn = tf.estimator.export.build_raw_serving_input_receiver_fn(\r\n    dic_catego_columns, default_batch_size=None\r\n)\r\nestimator_dir =\"some_dir_name\"\r\npath_to_saved_model = est.export_saved_model(estimator_dir,\r\n                      serving_input_receiver_fn=serving_input_receiver_fn)\r\nclear_output()\r\nTFLITE_FILE_PATH = 'boosted_trees.tflite'\r\nconverter = tf.lite.TFLiteConverter.from_saved_model(path_to_saved_model)\r\nconverter.allow_custom_ops = True\r\ntflite_model = converter.convert()\r\nwith open(TFLITE_FILE_PATH, 'wb') as f:\r\n    f.write(tflite_model)\r\n\r\n###  trying, and failing to use the tflite model\r\n\r\ninterpreter = tf.lite.Interpreter(TFLITE_FILE_PATH)\r\ninterpreter.allocate_tensors()\r\n\r\n# Get input and output tensors.\r\ninput_details = interpreter.get_input_details()\r\noutput_details = interpreter.get_output_details()\r\n\r\n# Test the model on random input data.\r\ninput_shape = input_details[0]['shape']\r\ninput_data = np.array(np.random.random_sample(input_shape), dtype=np.float32)\r\ninterpreter.set_tensor(input_details[0]['index'], input_data)\r\ninterpreter.invoke()\r\ninterpreter.get_tensor(output_details[0][\"index\"])\r\n```\r\n\r\n### 3. Failure after conversion\r\nThe conversion seems successful at least there are no errors . When I am trying to use this model with an Interpreter I get this error: \r\n```\r\n\r\nRuntimeError                              Traceback (most recent call last)\r\n<ipython-input-63-8b884bfb46b3> in <module>\r\n      2 \r\n      3 interpreter = tf.lite.Interpreter(TFLITE_FILE_PATH)\r\n----> 4 interpreter.allocate_tensors()\r\n      5 \r\n      6 # Get input and output tensors.\r\n\r\n~/Work/venvs/tf-env/lib/python3.8/site-packages/tensorflow/lite/python/interpreter.py in allocate_tensors(self)\r\n    421   def allocate_tensors(self):\r\n    422     self._ensure_safe()\r\n--> 423     return self._interpreter.AllocateTensors()\r\n    424 \r\n    425   def _safe_to_run(self):\r\n\r\nRuntimeError: Encountered unresolved custom op: BoostedTreesEnsembleResourceHandleOp.Node number 0 (BoostedTreesEnsembleResourceHandleOp) failed to prepare.\r\n```\r\n \r\nI dont understand what I am doing wrong or if it is possible.\r\n\r\n\r\n", "comments": ["@LouisDacquet `Estimators` are not recommended for new code. [BoostedTreesClassifier](https://www.tensorflow.org/api_docs/python/tf/estimator/BoostedTreesEstimator) Estimators run `v1.Session-style` code which is more difficult to write correctly, and can behave unexpectedly, especially when combined with TF 2 code.For more details please see [migration guide](https://www.tensorflow.org/guide/migrate).Please have a look at the attached links and let us know if it helps? Thank you!", "@sushreebarsa Thank you for your answer. Is there a recommended way to use boosted trees with tensorflow 2 ?", "@LouisDacquet Please have a look at the source [code](https://github.com/tensorflow/estimator/blob/master/tensorflow_estimator/python/estimator/canned/boosted_trees.py#L2256-L2381) and [migration](https://www.tensorflow.org/guide/migrate) document .Thank you!", "This issue has been automatically marked as stale because it has no recent activity. It will be closed if no further activity occurs. Thank you.\n", "Closing as stale. Please reopen if you'd like to work on this further.\n", "Are you satisfied with the resolution of your issue?\n<a href=\"https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&entry.2137816233=https://github.com/tensorflow/tensorflow/issues/53200\">Yes</a>\n<a href=\"https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&entry.2137816233=https://github.com/tensorflow/tensorflow/issues/53200\">No</a>\n"]}, {"number": 53199, "title": "ERROR: tensorflow-2.8.0-cp39-cp39-macosx_11_0_x86_64.whl is not a supported wheel on this platform.", "body": "<em>Please make sure that this is a build/installation issue. As per our [GitHub Policy](https://github.com/tensorflow/tensorflow/blob/master/ISSUES.md), we only address code/doc bugs, performance issues, feature requests and build/installation issues on GitHub. tag:build_template</em>\r\n\r\n**System information**\r\n- OS Platform and Distribution (e.g., Linux Ubuntu 16.04): MacOs BigSur 11.1\r\n- Python version: 3.9.9\r\n- Bazel version (if compiling from source): bazel 3.7.2\r\n\r\n\r\n\r\n\r\n**Describe the problem**\r\nI decided to install tensorflow from source as I had the AVX2 FMA instruction problem and read that one (the only) way to fix it is to have Tensorflow from source. <br>\r\nI followed the guide on the tensorflow site for installing tensorflow from source. \r\nI have performed almost all the steps and they have been successful, I miss the last one of the installation of the package. <br>\r\n\r\n**Provide the exact sequence of commands / steps that you executed before running into the problem** <br>\r\nThis is the command that provides me the error:\r\n` pip install /tmp/tensorflow_pkg/tensorflow-2.8.0-cp39-cp39-macosx_11_0_x86_64.whl`\r\nand this is the ERROR that returned me:\r\n`ERROR: tensorflow-2.8.0-cp39-cp39-macosx_11_0_x86_64.whl is not a supported wheel on this platform.`\r\n<br>\r\nHow can I solve this problem?\r\n", "comments": ["Did you try installing from this [source](https://pypi.org/project/tensorflow-macos/2.6.0/#files).\r\nAlso, refer [this](https://developer.apple.com/forums/thread/683757) discussion in Apple Developer forum.", "@sachinprasadhs  Yes but also this `pip install tensorflow-macos==2.6.0` I can't install. I need to execute this command `pip install /tmp/tensorflow_pkg/tensorflow-2.8.0-cp39-cp39-macosx_11_0_x86_64.whl` (is the command above in my question) to complete the tensorflow source installation.", "Could you please post this issue in the dedicated Apple developer forum https://developer.apple.com/forums/ . Thanks!", "This issue has been automatically marked as stale because it has no recent activity. It will be closed if no further activity occurs. Thank you.\n", "Closing as stale. Please reopen if you'd like to work on this further.\n", "Are you satisfied with the resolution of your issue?\n<a href=\"https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&entry.2137816233=https://github.com/tensorflow/tensorflow/issues/53199\">Yes</a>\n<a href=\"https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&entry.2137816233=https://github.com/tensorflow/tensorflow/issues/53199\">No</a>\n"]}, {"number": 53198, "title": "Tested TF Object Detection Models for Jetson Nano", "body": "Hi,\r\n\r\nI'm currently working on an AI project using an NVIDIA Jetson Nano (4GB) and TensorFlow 2 where we were planning on using a Faster R-CNN Inception ResNet V2 640x640 model. We tried using TF-TRT to reduce the network, but it seems to be too big to fit in, the vRAM memory is not big enough and using Swap doesn't solve the issue.\r\n\r\nWe have done several tests and, for the moment, the heaviest network from the TensorFlow Model Zoo we managed to get working is the SSD MobileNet V2 FPNLite 640x640.\r\n\r\nI've been searching for a list of networks that have been tested on this device for TF2, but I can't seem to find it. I know of the existence of [this list](https://github.com/NVIDIA-AI-IOT/tf_to_trt_image_classification/#models), but it is for TF1 and doesn't involve the TF2 Model Zoo models.\r\n\r\nIs there any chance that a list of working models with their speed, memory usage and mAP tested on a common dataset (COCO or similar) will be developed? This would be specially interesting regarding the different methods available to deploy a model, either via CPU, optimized CPU with TFLite, GPU, optimized GPU with TF-TRT, fully optimized with pure TensorRT or any other possible option that I haven't considered.\r\n\r\nThank you in advance.\r\n", "comments": ["Hi @franferraz98! Could you check out these threads for answer? [link1](https://github.com/NVIDIA-AI-IOT/tf_trt_models),[link2](https://gilberttanner.com/blog/run-tensorflow-on-the-jetson-nano),[link3](https://docs.nvidia.com/deeplearning/frameworks/tf-trt-user-guide/index.html). For further assistance , Please raise an query either in [TF forum](https://discuss.tensorflow.org/) as there will be larger community to address this issue.", "Thanks for the quick response. I will open a new topic on the forum, but I'm guessing that I'll need to check myself if the [supported operators](https://docs.nvidia.com/deeplearning/frameworks/tf-trt-user-guide/index.html#supported-ops) match each model and try the pure TensorRT option.", "Hi @franferraz98 !Thanks for confirming the same! Did you check the models in  [link1](https://github.com/NVIDIA-AI-IOT/tf_trt_models) too?", "This issue has been automatically marked as stale because it has no recent activity. It will be closed if no further activity occurs. Thank you.\n", "Closing as stale. Please reopen if you'd like to work on this further.\n", "Are you satisfied with the resolution of your issue?\n<a href=\"https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&entry.2137816233=https://github.com/tensorflow/tensorflow/issues/53198\">Yes</a>\n<a href=\"https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&entry.2137816233=https://github.com/tensorflow/tensorflow/issues/53198\">No</a>\n"]}]