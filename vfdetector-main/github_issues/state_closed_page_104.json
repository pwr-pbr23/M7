[{"number": 51973, "title": "Fix tf.pad crashes with large paddings", "body": "This PR tries to address the issue raised in #51908 where\r\ntf.pad crashes with large paddings.\r\nIn any case, instead of a crash with undefined behavior,\r\ntensorflow should return an error gracefully.\r\n\r\nThis PR fixes the issue by adding the necessary checks.\r\n\r\nThis PR fixes #51908.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>", "comments": ["Should be handled already by d81b1351da3e8c884ff836b64458d94e4a157c15"]}, {"number": 51972, "title": "Added a check", "body": "Fixes #49225 ", "comments": ["\nThanks for your pull request. It looks like this may be your first contribution to a Google open source project (if not, look below for help). Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).\n\n:memo: **Please visit <https://cla.developers.google.com/> to sign.**\n\nOnce you've signed (or fixed any issues), please reply here with `@googlebot I signed it!` and we'll verify it.\n\n----\n\n#### What to do if you already signed the CLA\n\n##### Individual signers\n\n*   It's possible we don't have your GitHub username or you're using a different email address on your commit. Check [your existing CLA data](https://cla.developers.google.com/clas) and verify that your [email is set on your git commits](https://help.github.com/articles/setting-your-email-in-git/).\n\n##### Corporate signers\n\n*   Your company has a Point of Contact who decides which employees are authorized to participate. Ask your POC to be added to the group of authorized contributors. If you don't know who your Point of Contact is, direct the Google project maintainer to [go/cla#troubleshoot](http://go/cla#troubleshoot) ([Public version](https://opensource.google/docs/cla/#troubleshoot)).\n*   The email used to register you as an authorized contributor must be the email used for the Git commit. Check [your existing CLA data](https://cla.developers.google.com/clas) and verify that your [email is set on your git commits](https://help.github.com/articles/setting-your-email-in-git/).\n*   The email used to register you as an authorized contributor must also be [attached to your GitHub account](https://github.com/settings/emails).\n\t\t\n\n\u2139\ufe0f **Googlers: [Go here](https://goto.google.com/prinfo/https%3A%2F%2Fgithub.com%2Ftensorflow%2Ftensorflow%2Fpull%2F51972) for more info**.\n\n<!-- need_sender_cla -->", "@googlebot I signed it!", "This does not seem to be fixing the issue.", "@lostmsu Ok. Can you explain me more about what is expected? I am contributing for the first time to tensorflow, any help would be highly appreciated!", "@mdanatg May I ask why `Windows Bazel` test failed?", "The windows build seems broken atm. We'll need to wait a bit until it gets fixed.", "Should I delete this branch?", "Yep, it's merged so it should be safe to delete.", "@mdanatg Thank you for helping me through my first PR!"]}, {"number": 51971, "title": "Fix crash with tf.image.resize--cherrypick to r2.4", "body": "PiperOrigin-RevId: 391409572\r\nChange-Id: I027c4901c9717ae7ee8266e5f57baba950b3e1e3", "comments": ["\nThanks for your pull request. It looks like this may be your first contribution to a Google open source project (if not, look below for help). Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).\n\n:memo: **Please visit <https://cla.developers.google.com/> to sign.**\n\nOnce you've signed (or fixed any issues), please reply here with `@googlebot I signed it!` and we'll verify it.\n\n----\n\n#### What to do if you already signed the CLA\n\n##### Individual signers\n\n*   It's possible we don't have your GitHub username or you're using a different email address on your commit. Check [your existing CLA data](https://cla.developers.google.com/clas) and verify that your [email is set on your git commits](https://help.github.com/articles/setting-your-email-in-git/).\n\n##### Corporate signers\n\n*   Your company has a Point of Contact who decides which employees are authorized to participate. Ask your POC to be added to the group of authorized contributors. If you don't know who your Point of Contact is, direct the Google project maintainer to [go/cla#troubleshoot](http://go/cla#troubleshoot) ([Public version](https://opensource.google/docs/cla/#troubleshoot)).\n*   The email used to register you as an authorized contributor must be the email used for the Git commit. Check [your existing CLA data](https://cla.developers.google.com/clas) and verify that your [email is set on your git commits](https://help.github.com/articles/setting-your-email-in-git/).\n*   The email used to register you as an authorized contributor must also be [attached to your GitHub account](https://github.com/settings/emails).\n\t\t\n\n\u2139\ufe0f **Googlers: [Go here](https://goto.google.com/prinfo/https%3A%2F%2Fgithub.com%2Ftensorflow%2Ftensorflow%2Fpull%2F51971) for more info**.\n\n<!-- need_sender_cla -->", "@pranve Can you please sign CLA. Thanks!", "@googlebot I signed it!"]}, {"number": 51969, "title": "Fix crash with tf.image.resize--cherrypick to r2.5", "body": "PiperOrigin-RevId: 391409572\r\nChange-Id: I027c4901c9717ae7ee8266e5f57baba950b3e1e3", "comments": ["\nThanks for your pull request. It looks like this may be your first contribution to a Google open source project (if not, look below for help). Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).\n\n:memo: **Please visit <https://cla.developers.google.com/> to sign.**\n\nOnce you've signed (or fixed any issues), please reply here with `@googlebot I signed it!` and we'll verify it.\n\n----\n\n#### What to do if you already signed the CLA\n\n##### Individual signers\n\n*   It's possible we don't have your GitHub username or you're using a different email address on your commit. Check [your existing CLA data](https://cla.developers.google.com/clas) and verify that your [email is set on your git commits](https://help.github.com/articles/setting-your-email-in-git/).\n\n##### Corporate signers\n\n*   Your company has a Point of Contact who decides which employees are authorized to participate. Ask your POC to be added to the group of authorized contributors. If you don't know who your Point of Contact is, direct the Google project maintainer to [go/cla#troubleshoot](http://go/cla#troubleshoot) ([Public version](https://opensource.google/docs/cla/#troubleshoot)).\n*   The email used to register you as an authorized contributor must be the email used for the Git commit. Check [your existing CLA data](https://cla.developers.google.com/clas) and verify that your [email is set on your git commits](https://help.github.com/articles/setting-your-email-in-git/).\n*   The email used to register you as an authorized contributor must also be [attached to your GitHub account](https://github.com/settings/emails).\n\t\t\n\n\u2139\ufe0f **Googlers: [Go here](https://goto.google.com/prinfo/https%3A%2F%2Fgithub.com%2Ftensorflow%2Ftensorflow%2Fpull%2F51969) for more info**.\n\n<!-- need_sender_cla -->", "@pranve Can you please sign CLA. Thanks!", "@googlebot I signed it!"]}, {"number": 51968, "title": "Add label broadcasting to `cross_entropy_with_logits` and `weighted_cross_entropy_with_logits`", "body": "Fixes #51967.", "comments": ["What is the use-case for automatic broadcasting here? It does make the scalar case in the bug report look nicer than explicit broadcasting, but it could also allow some very serious silent bugs, e.g. forget to reduce along an axis of `logits` and end up with a garbage loss.\r\n\r\nGiven that `tf.broadcast_to` exists, it's not hard to add broadcasting for things that do need it. So I think there would need to be significant benefits to offset the potential bugs.", "@allenlavoie \r\n\r\nThe usecase is pretty obvious, I think\r\n1. Usage convenience\r\n2. No out of the blue errors like in the example I gave above.\r\n3.  API uniformity \r\n\r\nI am not sure I see the dangers of the  bugs you are afraid of. Can you please be more specific?\r\n\r\n\r\n\r\nCan you please be more specific about ", "@allenlavoie \r\n\r\nThe usecase is pretty obvious, I think\r\n1. Usage convenience\r\n2. No out of the blue errors like in the example I gave above.\r\n3.  API uniformity \r\n\r\nI am not sure I see the dangers of the  bugs you are afraid of. Can you please be more specific?\r\n\r\nP. S.\r\nThe point about reducing is totally unclear to me. The function does not reduce anything. \r\n", "Example issue:\r\n\r\n```\r\nmulti_head_attention = ...  # [batch size, num_heads, internal]\r\n# Oops, should have reshaped to [batch size, num_heads * internal] first\r\nlogits = dense(multi_head_attention)  # -> [batch size, num_heads, num_classes]\r\nloss = tf.nn.cross_entropy_with_logits(labels=...  # [batch size, num_classes], logits=logits)\r\nloss = tf.reduce_sum(loss)\r\n```\r\n\r\nIf num_classes == num_heads, you silently get nonsense.\r\n\r\nI agree that lots of other TF symbols do broadcasting, I'm just trying to figure out whether the benefits to real models outweigh the costs to real models. I don't immediately see a practical use for the single scalar label idea, which is why I was asking about the use-case.", "Thanks @allenlavoie \r\n\r\nI sort of anticipated such surprises, therefore I limited the broadcasting in the PR. Instead of general broadcasting of `labels` i only allow them to be be broadcasted to the shape of `logits`. Namely, the result is always the same shape as the shape of `logits`. \r\n\r\nP. S.\r\nPlease note that is it not limited to the scalar case only. For example `labels` can be of shape `(m, 1)`, whereas `logits`  `(m, n)`\r\n\r\nP. P. S.\r\nYou example shows the usual behavior of broadcasting. The very same problem arises whenever broadcasting happens (even simple `a+b`). Why this particular function should be different? \r\n", "@allenlavoie \r\n\r\nSorry for being slow. After reading your example again, I do not think that there will be any broadcasting at all.....\r\nWhat I meant in my previous post, when I spoke about surprising results due to broadcasting was something like this:\r\n\r\n```\r\na = tf.random.uniform((5, 1))\r\nb = tf.random.uniform((5,))\r\na + b  # this one has shape  (5,5), not (5,1) !!!\r\n```", "@allenlavoie \r\nFriendly ping.\r\n", "I still don't think adding broadcasting here is a good idea. For general math ops it is a source of bugs but also has quite a bit of utility. I just don't see the utility for these loss functions, and I think the potential bugs outweigh the consistency argument. \r\n\r\nYou're free to seek another opinion.", "It's a pity. One of the reasons why TF looses its ground to PyTorch in my view.\r\nA bunch of unrelated to each other architectural decisions  which brings a lot of \"surprises\" to the users. \r\n", "@eli-osherovich Can you please resolve conflicts? Thanks!", "@gbaned \r\nAre you referring to the conflicting files?\r\nWhat is the point to fix it if this PR is not gonna be accepted?\r\n", "@allenlavoie Can you please assist on above comments from @eli-osherovich. Thanks!", "I've switched teams, please find a different reviewer. (Or close the PR)", "@eli-osherovich Can you please resolve conflicts? Thanks!", "@gbaned \r\nPlease confirm first that this PR will be merged.", "@eli-osherovich Can you please resolve conflicts? Thanks!", "@eli-osherovich Can you please resolve conflicts? Thanks!", "Closing the PR as it doesn't look like it is something we want to do.", "@mihaimaruseac \r\nSure. If you hate your users. ", "This is a keras broadcasting semantics question. Lets follow up on the keras bug you opened and they should specify the broadcasting semantics they would like to offer. From there, its an implementation question - keras can easily call tf.broadcast_to and make it uniform before calling TF's low level API which expects not to broadcast (we can make it clear in documentation that this API doesn't do broadcasting)\r\n\r\nFrom TF's perspective, we don't see the benefit of adding broadcasting to a low level API. The potential cons outweigh the pros. TF is a more general purpose library than Keras and we have a broader set of use cases to consider."]}, {"number": 51966, "title": "Fixes NaNs in weighted_moments with all-zeros weights.", "body": "Fixes #51792", "comments": ["@mihaimaruseac \r\nFriendly ping.", "ANY reply?\r\n", "@gbaned ?", "Sorry, was OOO", "Thanks @mihaimaruseac \r\nIt seems there were several tests that failed due to unrelated issues...\r\nShould these be re-run?\r\n\r\n", "Hi.\r\n\r\nThe failing tests are optional for merging the PR (as they're flaky, we have an internal version of them that behaves better and roadmap work to make external tests be similar).\r\n\r\nThis is now waiting on internal review and after that passes it should automerge.\r\n\r\nThank you for the PR", "This is being rolled back due to tests failing. Can you provide a test that fails without this PR and this Pr fixes and then I can take it internally and discuss with other folks to see which scenario is more important / come up with a fix that handles both scenarios?\r\n\r\nUnfortunately, cannot share internal test.", "@mihaimaruseac \r\nDo we really need a test to confirm some basic common sense? A linear combination of all zeros must produce zero. Not NaN.", "Reciprocal is not a linear operation.", "Of course, reciprocal is not linear. We are not fixing it...\r\nWeighted sum is linear though. I think most people would expect a zero when all weights are zeros, not a NaN.\r\n"]}, {"number": 51965, "title": "B51792", "body": "Fixes #51792 ", "comments": ["All (the pull request submitter and all commit authors) CLAs are signed, **but** one or more commits were authored or co-authored by someone other than the pull request submitter.\n\nWe need to confirm that all authors are ok with their commits being contributed to this project.  Please have them confirm that by leaving a comment that contains only `@googlebot I consent.` in this pull request.\n\n*Note to project maintainer:* There may be cases where the author cannot leave a comment, or the comment is not properly detected as consent.  In those cases, you can manually confirm consent of the commit author(s), and set the `cla` label to `yes` (if enabled on your project).\n\n\u2139\ufe0f **Googlers: [Go here](https://goto.google.com/prinfo/https%3A%2F%2Fgithub.com%2Ftensorflow%2Ftensorflow%2Fpull%2F51965) for more info**.\n\n<!-- need_author_consent -->", "Something wrong with Github -- why does it add a bunch of upstream commits???"]}, {"number": 51964, "title": "Add a initial_best parameter in ModelCheckpoint Callback", "body": "Add a initial_best parameter in ModelCheckpoint that is stored as self.best. If a session is stopped and rerun or kernel dies, then the best value of metric is taken as np.inf or -np.inf and the model is saved after the first epoch without taking into consideration the initial performance of model. So modelweights are overwritten even if the previous model performance was better than the current model.\r\nUnit testing notebook can be found [here](https://colab.research.google.com/drive/1MpennD9t136peziuCjef7TwbVendMZcS?usp=sharing)\r\n\r\nCc: @gbaned can  you please take a look at this ", "comments": ["@old-school-kid  It looks like your PR relates to the Keras component. Please submit it to the [github.com/keras-team/keras](github.com/keras-team/keras) repository instead. Thankyou.\r\n@fchollet, @qlzh727"]}, {"number": 51963, "title": "How to use tensorflow.experimental.numpy in tensorflow?", "body": "I have known `tensorflow.experimental.numpy` in tensorflow, but I don't know how to assign a value to a numpy NDarry, just like this.\r\n`\r\n    def get_dct_filter(self, tile_size_x, tile_size_y, mapper_x, mapper_y, channel):\r\n        dct_numpy_filter = np.zeros(shape=(tile_size_y, tile_size_x, channel), dtype=np.float32)\r\n        c_part = channel // len(mapper_x)\r\n\r\n        for i, (u_x, u_y) in enumerate(zip(mapper_x, mapper_y)):\r\n            for t_x in range(tile_size_x):\r\n                for t_y in range(tile_size_y):\r\n                    dct_numpy_filter[t_y, t_x, i * c_part: (i + 1) * c_part] = self.build_filter(t_x, u_x,\r\n                                                                                                 tile_size_x) * \\\r\n                                                                               self.build_filter(t_y, u_y, tile_size_y)\r\n        return dct_numpy_filter\r\n\r\n    def build_filter(self, pos, frequency, POS):\r\n        result = np.cos(np.pi * frequency * (pos + 0.5) / POS) / np.sqrt(POS)\r\n        if frequency == 0:\r\n            return result\r\n        else:\r\n            return result * np.sqrt(2)\r\n`\r\n\r\nWhen I use `tensorflow.experimental.numpy` do **dct_numpy_filter[t_y, t_x, i * c_part: (i + 1) * c_part] = self.build_filter(t_x, u_x, tile_size_x) * self.build_filter(t_y, u_y, tile_size_y)**, error has occured which told me tensor can't assign. I have used `np.experimental_enable_numpy_behavior(prefer_float32=True)` in code, but it not working, I don't know how to use the mechanism in deep learning training.", "comments": ["@jiayugedede In order to reproduce the issue reported here, could you please provide the complete code and the dataset , tensorflow version you are using. Thanks!", "Thank you very much.\r\nI use tensorflow 2.5.0. I use this function to classify cassava leaf disease, link:https://www.kaggle.com/c/cassava-leaf-disease-classification. Below is my code:\r\n```\r\nclass MultiSpectralDCTLayer(layers.Layer):\r\n    def __init__(self, name, channel, height, width, frequency, **kwargs):\r\n        super(MultiSpectralDCTLayer, self).__init__(name=name)\r\n        self.channel = channel\r\n        self.height = height\r\n        self.width = width\r\n        self.frequency = frequency\r\n        super(MultiSpectralDCTLayer, self).__init__(**kwargs)\r\n\r\n    def build(self, input_shape):\r\n        _, w, h, c = input_shape\r\n        self.mapper_x, self.mapper_y = self.get_freq_indices(self.frequency)\r\n        mapper_x = [temp_x * (h // 7) for temp_x in self.mapper_x]\r\n        mapper_y = [temp_y * (w // 7) for temp_y in self.mapper_y]\r\n        self.dynamic_weight = tf.constant(\r\n            self.get_dct_filter(self.height, self.width, mapper_x, mapper_y, channel=self.channel))\r\n        super().build(input_shape)\r\n\r\n    def get_config(self):\r\n        base_config = super(MultiSpectralDCTLayer, self).get_config()\r\n        config = {\r\n            'channel': self.channel,\r\n            'height': self.height,\r\n            \"width\": self.width,\r\n            \"frequency\": self.frequency,\r\n        }\r\n        return dict(list(base_config.items()) + list(config.items()))\r\n\r\n    def get_freq_indices(self, methods):\r\n        assert methods in ['top1', 'top2', 'top4', 'top8', 'top16', 'top32',\r\n                           'bot1', 'bot2', 'bot4', 'bot8', 'bot16', 'bot32',\r\n                           'low1', 'low2', 'low4', 'low8', 'low16', 'low32']\r\n        num_freq = int(methods[3:])\r\n        if 'top' in methods:\r\n            all_top_indices_x = [0, 0, 6, 0, 0, 1, 1, 4, 5, 1, 3, 0, 0, 0, 3, 2, 4, 6, 3, 5, 5, 2, 6, 5, 5, 3, 3, 4, 2,\r\n                                 2,\r\n                                 6, 1]\r\n            all_top_indices_y = [0, 1, 0, 5, 2, 0, 2, 0, 0, 6, 0, 4, 6, 3, 5, 2, 6, 3, 3, 3, 5, 1, 1, 2, 4, 2, 1, 1, 3,\r\n                                 0,\r\n                                 5, 3]\r\n            mapper_x = all_top_indices_x[:num_freq]\r\n            mapper_y = all_top_indices_y[:num_freq]\r\n        elif 'low' in methods:\r\n            all_low_indices_x = [0, 0, 1, 1, 0, 2, 2, 1, 2, 0, 3, 4, 0, 1, 3, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 6, 1,\r\n                                 2,\r\n                                 3, 4]\r\n            all_low_indices_y = [0, 1, 0, 1, 2, 0, 1, 2, 2, 3, 0, 0, 4, 3, 1, 5, 4, 3, 2, 1, 0, 6, 5, 4, 3, 2, 1, 0, 6,\r\n                                 5,\r\n                                 4, 3]\r\n\r\n            mapper_x = all_low_indices_x[:num_freq]\r\n            mapper_y = all_low_indices_y[:num_freq]\r\n\r\n        elif 'bot' in methods:\r\n            all_bot_indices_x = [6, 1, 3, 3, 2, 4, 1, 2, 4, 4, 5, 1, 4, 6, 2, 5, 6, 1, 6, 2, 2, 4, 3, 3, 5, 5, 6, 2, 5,\r\n                                 5,\r\n                                 3, 6]\r\n            all_bot_indices_y = [6, 4, 4, 6, 6, 3, 1, 4, 4, 5, 6, 5, 2, 2, 5, 1, 4, 3, 5, 0, 3, 1, 1, 2, 4, 2, 1, 1, 5,\r\n                                 3,\r\n                                 3, 3]\r\n            mapper_x = all_bot_indices_x[:num_freq]\r\n            mapper_y = all_bot_indices_y[:num_freq]\r\n        else:\r\n            raise NotImplementedError\r\n        return mapper_x, mapper_y\r\n\r\n    def get_dct_filter(self, tile_size_x, tile_size_y, mapper_x, mapper_y, channel):\r\n        dct_numpy_filter = np.zeros(shape=(tile_size_y, tile_size_x, channel), dtype=np.float32)\r\n        c_part = channel // len(mapper_x)\r\n\r\n        for i, (u_x, u_y) in enumerate(zip(mapper_x, mapper_y)):\r\n            for t_x in range(tile_size_x):\r\n                for t_y in range(tile_size_y):\r\n                    dct_numpy_filter[t_y, t_x, i * c_part: (i + 1) * c_part] = self.build_filter(t_x, u_x,\r\n                                                                                                 tile_size_x) * self.build_filter(\r\n                        t_y, u_y, tile_size_y)\r\n        return dct_numpy_filter\r\n\r\n    def build_filter(self, pos, frequency, POS):\r\n        result = np.cos(np.pi * frequency * (pos + 0.5) / POS) / np.sqrt(POS)\r\n        if frequency == 0:\r\n            return result\r\n        else:\r\n            return result * np.sqrt(2)\r\n\r\n    def call(self, inputs, training=None):\r\n        assert len(inputs.shape) == 4, 'x must been 4 dimensions, but got ' + str(len(inputs.shape))\r\n        x = inputs * self.dynamic_weight\r\n        result = tf.math.reduce_sum(x, axis=[1, 2], keepdims=True)\r\n        return result\r\n\r\n\r\nclass MultiSpectralAttentionLayer(layers.Layer):\r\n    def __init__(self, name, reduction=16, freq_sel_method='top16', **kwargs):\r\n        super(MultiSpectralAttentionLayer, self).__init__(name=name)\r\n        self.reduction = int(reduction)\r\n        self.freq_sel_method = freq_sel_method\r\n        super(MultiSpectralAttentionLayer, self).__init__(**kwargs)\r\n\r\n    def build(self, input_shape):\r\n        c2wh = dict([(256, 112), (512, 56), (1024, 28), (2048, 14)])\r\n        _, h, w, c = input_shape\r\n\r\n        self.dct_h = c2wh[c]\r\n        self.dct_w = c2wh[c]\r\n        self.channel = c\r\n\r\n        self.dct_layer = MultiSpectralDCTLayer(\"DCT\", self.channel, self.dct_h, self.dct_w, self.freq_sel_method)\r\n        self.fc1 = layers.Dense(self.channel // self.reduction, use_bias=True, activation='relu')\r\n        self.fc2 = layers.Dense(self.channel, use_bias=True, activation='sigmoid')\r\n        self.reshapeTensor = tf.keras.layers.Reshape((1, 1, c), name=f'Reshape_None_1_1_{c}')\r\n\r\n        super().build(input_shape)\r\n\r\n    def get_config(self):\r\n        base_config = super(MultiSpectralAttentionLayer, self).get_config()\r\n        config = {\r\n            \"reduction\": self.reduction,\r\n            \"freq_sel_method\": self.freq_sel_method,\r\n        }\r\n        return dict(list(base_config.items()) + list(config.items()))\r\n\r\n    @tf.function\r\n    def call(self, inputs, training=None):\r\n        x = self.dct_layer(inputs)\r\n        x = self.fc1(x)\r\n        x = self.fc2(x)\r\n        x = self.reshapeTensor(x)\r\n        return inputs * x\r\n\r\n```\r\nIn order to implement this function, I replace tensorflow.experimental.numpy as numpy which works very well, however, compute very slow.", "@jiayugedede Could you please refer to the[ link](https://www.tensorflow.org/api_docs/python/tf/experimental/numpy) and let us know if it helps? Thanks!", "This link is helpless for me, part of the assignment in my code is the main problem which need broadcast operator in tensor assignment, this link don't have this.", "Many algorithm in pytorch has efficient solution, however, we re-implement that in tensorflow which performance not satisfaction for us. This is the biggest block between pytorch and tensorflow 2.X.", "@jiayugedede I tried to run your code on Colab using TF **v2.6**, **tf-nightly** and didn't face any error .Could you please find the gist [here](https://colab.research.google.com/gist/sushreebarsa/16ac35caf23156b1fcdeae6c751364f7/untitled203.ipynb#scrollTo=44-a43xJwwZJ) for reference and confirm the same ? Thank you!", "> @jiayugedede I tried to run your code on Colab using TF **v2.6**, **tf-nightly** and didn't face any error .Could you please find the gist [here](https://colab.research.google.com/gist/sushreebarsa/16ac35caf23156b1fcdeae6c751364f7/untitled203.ipynb#scrollTo=44-a43xJwwZJ) for reference and confirm the same ? Thank you!\r\n\r\nI have saw the gist, I will find the way to solute it, all is well, never mind.", "@jiayugedede Thanks for the update! Could you please let us know if this issue has been resolved ? Thank you!\r\n", "This issue has been automatically marked as stale because it has no recent activity. It will be closed if no further activity occurs. Thank you.\n", "Closing as stale. Please reopen if you'd like to work on this further.\n", "Are you satisfied with the resolution of your issue?\n<a href=\"https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&entry.2137816233=https://github.com/tensorflow/tensorflow/issues/51963\">Yes</a>\n<a href=\"https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&entry.2137816233=https://github.com/tensorflow/tensorflow/issues/51963\">No</a>\n"]}, {"number": 51962, "title": "Avoid buffer overflow when loading tensors--cherrypick to r2.4", "body": "PiperOrigin-RevId: 392971286\r\nChange-Id: If2073b36d4d5eedd386329f56729395fd7effee1", "comments": ["\nThanks for your pull request. It looks like this may be your first contribution to a Google open source project (if not, look below for help). Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).\n\n:memo: **Please visit <https://cla.developers.google.com/> to sign.**\n\nOnce you've signed (or fixed any issues), please reply here with `@googlebot I signed it!` and we'll verify it.\n\n----\n\n#### What to do if you already signed the CLA\n\n##### Individual signers\n\n*   It's possible we don't have your GitHub username or you're using a different email address on your commit. Check [your existing CLA data](https://cla.developers.google.com/clas) and verify that your [email is set on your git commits](https://help.github.com/articles/setting-your-email-in-git/).\n\n##### Corporate signers\n\n*   Your company has a Point of Contact who decides which employees are authorized to participate. Ask your POC to be added to the group of authorized contributors. If you don't know who your Point of Contact is, direct the Google project maintainer to [go/cla#troubleshoot](http://go/cla#troubleshoot) ([Public version](https://opensource.google/docs/cla/#troubleshoot)).\n*   The email used to register you as an authorized contributor must be the email used for the Git commit. Check [your existing CLA data](https://cla.developers.google.com/clas) and verify that your [email is set on your git commits](https://help.github.com/articles/setting-your-email-in-git/).\n*   The email used to register you as an authorized contributor must also be [attached to your GitHub account](https://github.com/settings/emails).\n\t\t\n\n\u2139\ufe0f **Googlers: [Go here](https://goto.google.com/prinfo/https%3A%2F%2Fgithub.com%2Ftensorflow%2Ftensorflow%2Fpull%2F51962) for more info**.\n\n<!-- need_sender_cla -->", "@pranve Can you please sign CLA. Thanks!", "@googlebot I signed it!"]}, {"number": 51961, "title": "Avoid buffer overflow when loading tensors --cherrypick to r2.5", "body": "PiperOrigin-RevId: 392971286\r\nChange-Id: If2073b36d4d5eedd386329f56729395fd7effee1", "comments": ["\nThanks for your pull request. It looks like this may be your first contribution to a Google open source project (if not, look below for help). Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).\n\n:memo: **Please visit <https://cla.developers.google.com/> to sign.**\n\nOnce you've signed (or fixed any issues), please reply here with `@googlebot I signed it!` and we'll verify it.\n\n----\n\n#### What to do if you already signed the CLA\n\n##### Individual signers\n\n*   It's possible we don't have your GitHub username or you're using a different email address on your commit. Check [your existing CLA data](https://cla.developers.google.com/clas) and verify that your [email is set on your git commits](https://help.github.com/articles/setting-your-email-in-git/).\n\n##### Corporate signers\n\n*   Your company has a Point of Contact who decides which employees are authorized to participate. Ask your POC to be added to the group of authorized contributors. If you don't know who your Point of Contact is, direct the Google project maintainer to [go/cla#troubleshoot](http://go/cla#troubleshoot) ([Public version](https://opensource.google/docs/cla/#troubleshoot)).\n*   The email used to register you as an authorized contributor must be the email used for the Git commit. Check [your existing CLA data](https://cla.developers.google.com/clas) and verify that your [email is set on your git commits](https://help.github.com/articles/setting-your-email-in-git/).\n*   The email used to register you as an authorized contributor must also be [attached to your GitHub account](https://github.com/settings/emails).\n\t\t\n\n\u2139\ufe0f **Googlers: [Go here](https://goto.google.com/prinfo/https%3A%2F%2Fgithub.com%2Ftensorflow%2Ftensorflow%2Fpull%2F51961) for more info**.\n\n<!-- need_sender_cla -->", "@pranve Can you please sign CLA. Thanks!", "@googlebot I signed it!\r\n"]}, {"number": 51960, "title": "Avoid buffer overflow when loading tensors--cherrypick to r2.6", "body": "PiperOrigin-RevId: 392971286\r\nChange-Id: If2073b36d4d5eedd386329f56729395fd7effee1", "comments": ["\nThanks for your pull request. It looks like this may be your first contribution to a Google open source project (if not, look below for help). Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).\n\n:memo: **Please visit <https://cla.developers.google.com/> to sign.**\n\nOnce you've signed (or fixed any issues), please reply here with `@googlebot I signed it!` and we'll verify it.\n\n----\n\n#### What to do if you already signed the CLA\n\n##### Individual signers\n\n*   It's possible we don't have your GitHub username or you're using a different email address on your commit. Check [your existing CLA data](https://cla.developers.google.com/clas) and verify that your [email is set on your git commits](https://help.github.com/articles/setting-your-email-in-git/).\n\n##### Corporate signers\n\n*   Your company has a Point of Contact who decides which employees are authorized to participate. Ask your POC to be added to the group of authorized contributors. If you don't know who your Point of Contact is, direct the Google project maintainer to [go/cla#troubleshoot](http://go/cla#troubleshoot) ([Public version](https://opensource.google/docs/cla/#troubleshoot)).\n*   The email used to register you as an authorized contributor must be the email used for the Git commit. Check [your existing CLA data](https://cla.developers.google.com/clas) and verify that your [email is set on your git commits](https://help.github.com/articles/setting-your-email-in-git/).\n*   The email used to register you as an authorized contributor must also be [attached to your GitHub account](https://github.com/settings/emails).\n\t\t\n\n\u2139\ufe0f **Googlers: [Go here](https://goto.google.com/prinfo/https%3A%2F%2Fgithub.com%2Ftensorflow%2Ftensorflow%2Fpull%2F51960) for more info**.\n\n<!-- need_sender_cla -->", "@pranve Can you please sign CLA. Thanks!", "@googlebot I signed it!"]}, {"number": 51959, "title": "Fix crash with tf.range when start is large/negative--cherrypick to r2.4", "body": "PiperOrigin-RevId: 393844345\r\nChange-Id: I2a72193d4416b8b009bc0b21489a42061f164203", "comments": ["\nThanks for your pull request. It looks like this may be your first contribution to a Google open source project (if not, look below for help). Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).\n\n:memo: **Please visit <https://cla.developers.google.com/> to sign.**\n\nOnce you've signed (or fixed any issues), please reply here with `@googlebot I signed it!` and we'll verify it.\n\n----\n\n#### What to do if you already signed the CLA\n\n##### Individual signers\n\n*   It's possible we don't have your GitHub username or you're using a different email address on your commit. Check [your existing CLA data](https://cla.developers.google.com/clas) and verify that your [email is set on your git commits](https://help.github.com/articles/setting-your-email-in-git/).\n\n##### Corporate signers\n\n*   Your company has a Point of Contact who decides which employees are authorized to participate. Ask your POC to be added to the group of authorized contributors. If you don't know who your Point of Contact is, direct the Google project maintainer to [go/cla#troubleshoot](http://go/cla#troubleshoot) ([Public version](https://opensource.google/docs/cla/#troubleshoot)).\n*   The email used to register you as an authorized contributor must be the email used for the Git commit. Check [your existing CLA data](https://cla.developers.google.com/clas) and verify that your [email is set on your git commits](https://help.github.com/articles/setting-your-email-in-git/).\n*   The email used to register you as an authorized contributor must also be [attached to your GitHub account](https://github.com/settings/emails).\n\t\t\n\n\u2139\ufe0f **Googlers: [Go here](https://goto.google.com/prinfo/https%3A%2F%2Fgithub.com%2Ftensorflow%2Ftensorflow%2Fpull%2F51959) for more info**.\n\n<!-- need_sender_cla -->", "@pranve Can you please sign CLA. Thanks!", "@googlebot I signed it!"]}, {"number": 51958, "title": "Fix crash with tf.range when start is large/negative--cherrypick to r2.5", "body": "PiperOrigin-RevId: 393844345\r\nChange-Id: I2a72193d4416b8b009bc0b21489a42061f164203", "comments": ["\nThanks for your pull request. It looks like this may be your first contribution to a Google open source project (if not, look below for help). Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).\n\n:memo: **Please visit <https://cla.developers.google.com/> to sign.**\n\nOnce you've signed (or fixed any issues), please reply here with `@googlebot I signed it!` and we'll verify it.\n\n----\n\n#### What to do if you already signed the CLA\n\n##### Individual signers\n\n*   It's possible we don't have your GitHub username or you're using a different email address on your commit. Check [your existing CLA data](https://cla.developers.google.com/clas) and verify that your [email is set on your git commits](https://help.github.com/articles/setting-your-email-in-git/).\n\n##### Corporate signers\n\n*   Your company has a Point of Contact who decides which employees are authorized to participate. Ask your POC to be added to the group of authorized contributors. If you don't know who your Point of Contact is, direct the Google project maintainer to [go/cla#troubleshoot](http://go/cla#troubleshoot) ([Public version](https://opensource.google/docs/cla/#troubleshoot)).\n*   The email used to register you as an authorized contributor must be the email used for the Git commit. Check [your existing CLA data](https://cla.developers.google.com/clas) and verify that your [email is set on your git commits](https://help.github.com/articles/setting-your-email-in-git/).\n*   The email used to register you as an authorized contributor must also be [attached to your GitHub account](https://github.com/settings/emails).\n\t\t\n\n\u2139\ufe0f **Googlers: [Go here](https://goto.google.com/prinfo/https%3A%2F%2Fgithub.com%2Ftensorflow%2Ftensorflow%2Fpull%2F51958) for more info**.\n\n<!-- need_sender_cla -->", "@pranve Can you please sign CLA. Thanks!", "@googlebot I signed it!"]}, {"number": 51957, "title": "Fix crash with tf.range when start is large/negative-cherrypick to r2.6", "body": "PiperOrigin-RevId: 393844345\r\nChange-Id: I2a72193d4416b8b009bc0b21489a42061f164203", "comments": ["\nThanks for your pull request. It looks like this may be your first contribution to a Google open source project (if not, look below for help). Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).\n\n:memo: **Please visit <https://cla.developers.google.com/> to sign.**\n\nOnce you've signed (or fixed any issues), please reply here with `@googlebot I signed it!` and we'll verify it.\n\n----\n\n#### What to do if you already signed the CLA\n\n##### Individual signers\n\n*   It's possible we don't have your GitHub username or you're using a different email address on your commit. Check [your existing CLA data](https://cla.developers.google.com/clas) and verify that your [email is set on your git commits](https://help.github.com/articles/setting-your-email-in-git/).\n\n##### Corporate signers\n\n*   Your company has a Point of Contact who decides which employees are authorized to participate. Ask your POC to be added to the group of authorized contributors. If you don't know who your Point of Contact is, direct the Google project maintainer to [go/cla#troubleshoot](http://go/cla#troubleshoot) ([Public version](https://opensource.google/docs/cla/#troubleshoot)).\n*   The email used to register you as an authorized contributor must be the email used for the Git commit. Check [your existing CLA data](https://cla.developers.google.com/clas) and verify that your [email is set on your git commits](https://help.github.com/articles/setting-your-email-in-git/).\n*   The email used to register you as an authorized contributor must also be [attached to your GitHub account](https://github.com/settings/emails).\n\t\t\n\n\u2139\ufe0f **Googlers: [Go here](https://goto.google.com/prinfo/https%3A%2F%2Fgithub.com%2Ftensorflow%2Ftensorflow%2Fpull%2F51957) for more info**.\n\n<!-- need_sender_cla -->", "@pranve Can you please sign CLA. Thanks!", "@googlebot I signed it!"]}, {"number": 51956, "title": "Add BuildTensorSlice for building from unvalidated TensorSliceProtos-cherrypick to r2.4", "body": "This avoids several sources of crashes and undefined behavior when loading\r\ninvalid checkpoints.\r\n\r\nPiperOrigin-RevId: 392785704\r\nChange-Id: Icd9713c768b882f3b58b427eddac376060696833", "comments": ["\nThanks for your pull request. It looks like this may be your first contribution to a Google open source project (if not, look below for help). Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).\n\n:memo: **Please visit <https://cla.developers.google.com/> to sign.**\n\nOnce you've signed (or fixed any issues), please reply here with `@googlebot I signed it!` and we'll verify it.\n\n----\n\n#### What to do if you already signed the CLA\n\n##### Individual signers\n\n*   It's possible we don't have your GitHub username or you're using a different email address on your commit. Check [your existing CLA data](https://cla.developers.google.com/clas) and verify that your [email is set on your git commits](https://help.github.com/articles/setting-your-email-in-git/).\n\n##### Corporate signers\n\n*   Your company has a Point of Contact who decides which employees are authorized to participate. Ask your POC to be added to the group of authorized contributors. If you don't know who your Point of Contact is, direct the Google project maintainer to [go/cla#troubleshoot](http://go/cla#troubleshoot) ([Public version](https://opensource.google/docs/cla/#troubleshoot)).\n*   The email used to register you as an authorized contributor must be the email used for the Git commit. Check [your existing CLA data](https://cla.developers.google.com/clas) and verify that your [email is set on your git commits](https://help.github.com/articles/setting-your-email-in-git/).\n*   The email used to register you as an authorized contributor must also be [attached to your GitHub account](https://github.com/settings/emails).\n\t\t\n\n\u2139\ufe0f **Googlers: [Go here](https://goto.google.com/prinfo/https%3A%2F%2Fgithub.com%2Ftensorflow%2Ftensorflow%2Fpull%2F51956) for more info**.\n\n<!-- need_sender_cla -->", "@pranve Can you please sign CLA. Thanks!", "@googlebot I signed it!"]}, {"number": 51955, "title": "Add BuildTensorSlice for building from unvalidated TensorSliceProtos -cherrypick to r2.5", "body": "This avoids several sources of crashes and undefined behavior when loading\r\ninvalid checkpoints.\r\n\r\nPiperOrigin-RevId: 392785704\r\nChange-Id: Icd9713c768b882f3b58b427eddac376060696833", "comments": ["\nThanks for your pull request. It looks like this may be your first contribution to a Google open source project (if not, look below for help). Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).\n\n:memo: **Please visit <https://cla.developers.google.com/> to sign.**\n\nOnce you've signed (or fixed any issues), please reply here with `@googlebot I signed it!` and we'll verify it.\n\n----\n\n#### What to do if you already signed the CLA\n\n##### Individual signers\n\n*   It's possible we don't have your GitHub username or you're using a different email address on your commit. Check [your existing CLA data](https://cla.developers.google.com/clas) and verify that your [email is set on your git commits](https://help.github.com/articles/setting-your-email-in-git/).\n\n##### Corporate signers\n\n*   Your company has a Point of Contact who decides which employees are authorized to participate. Ask your POC to be added to the group of authorized contributors. If you don't know who your Point of Contact is, direct the Google project maintainer to [go/cla#troubleshoot](http://go/cla#troubleshoot) ([Public version](https://opensource.google/docs/cla/#troubleshoot)).\n*   The email used to register you as an authorized contributor must be the email used for the Git commit. Check [your existing CLA data](https://cla.developers.google.com/clas) and verify that your [email is set on your git commits](https://help.github.com/articles/setting-your-email-in-git/).\n*   The email used to register you as an authorized contributor must also be [attached to your GitHub account](https://github.com/settings/emails).\n\t\t\n\n\u2139\ufe0f **Googlers: [Go here](https://goto.google.com/prinfo/https%3A%2F%2Fgithub.com%2Ftensorflow%2Ftensorflow%2Fpull%2F51955) for more info**.\n\n<!-- need_sender_cla -->", "@pranve Can you please sign CLA. Thanks!", "@googlebot I signed it!"]}, {"number": 51954, "title": "GPU Delegate Issue !", "body": "### System information\r\n\r\n-   **Have I written custom code (as opposed to using a stock example script\r\n    provided in TensorFlow)**: No\r\n-   **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Android OS Oreo (API Level 27)\r\n-   **Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue\r\n    happens on a mobile device**: Surveillance Camera with QCS605 Qualcomm ship.\r\n-   **TensorFlow installed from (source or binary)**: binary\r\n-   **TensorFlow version (use command below)**: 2.5\r\n-   **Python version**: 3.8\r\n-   **Bazel version (if compiling from source)**:\r\n-   **GCC/Compiler version (if compiling from source)**:\r\n-   **CUDA/cuDNN version**:\r\n-   **GPU model and memory**: Adreno GPU 615\r\n-   **Exact command to reproduce**:\r\n-       final Interpreter.Options options = new Interpreter.Options();\r\n        CompatibilityList compatList = new CompatibilityList();\r\n\r\n        if (compatList.isDelegateSupportedOnThisDevice()) {\r\n            // if the device has a supported GPU, add the GPU delegate\r\n            GpuDelegate.Options delegateOptions = compatList.getBestOptionsForThisDevice();\r\n            GpuDelegate gpuDelegate = new GpuDelegate(delegateOptions);\r\n            options.addDelegate(gpuDelegate);\r\n            Log.i(LOGTAG, \"-----------Running using GPU Delegate-----------\");\r\n        } else {\r\n            // if the GPU is not supported, run on numThreads threads\r\n            options.setNumThreads(numThreads)\r\n                    .setAllowFp16PrecisionForFp32(allowFp16PrecisionForFp32)\r\n                    .setUseNNAPI(useNNAPI);\r\n            Log.i(LOGTAG, \"------------Running using CPU Delegate---------\");\r\n        }\r\n\r\n### Describe the problem\r\n\r\nTrying to run [Movinet ](https://tfhub.dev/google/collections/movinet) tflite model on a vendor camera with Adreno GPU 615. \r\n\r\nThe network runs on the CPU without any issues. But it can't be run on the GPU.  \r\n\r\nI'm using Java TFLite run time with version 2.5. I tried the nightly version but didn't work also. \r\n\r\n\r\n### Source code / logs\r\nI/Adreno: QUALCOMM build                   : e3ea17d, I2eff518144\r\nI/Adreno: Build Config                     : S L 4.0.10 AArch64\r\nI/zygote64: android::hardware::configstore::V1_0::ISurfaceFlingerConfigs::hasWideColorDisplay retrieved: 0\r\nE/libEGL: call to OpenGL ES API with no current context (logged once per thread)", "comments": ["Given\r\n\r\n> E/libEGL: call to OpenGL ES API with no current context (logged once per thread)\r\n\r\nI have the impression you are using a separate thread to asynchronously initialize and speed up things.  You cannot do that with OpenGL because GL context is bound to the thread.", "@impjdi The only option i have now is to run the model inference part in background android service . Do you have any suggestions for workarounds  in order to make the GPU delegate run in background service  ?", "Hm, I'm not familiar with background services in Android, but as long as you use the **same thread**, it should be okay.  I'm not up to date with asynchronous programming in Java, but if you don't rely on fancy language structures that take care of the async execution behind your back (and thus has a chance to run your stuff in a different thread), you should be fine.  In other words, have a dedicated thread in which you initialize TFLite GPU and run inference.", "@impjdi Thanks for your feedback. I rechecked my app and found that i was running the GPU inference part in a different thread than the main app thread. ", "Are you satisfied with the resolution of your issue?\n<a href=\"https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&entry.2137816233=https://github.com/tensorflow/tensorflow/issues/51954\">Yes</a>\n<a href=\"https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&entry.2137816233=https://github.com/tensorflow/tensorflow/issues/51954\">No</a>\n"]}, {"number": 51953, "title": "Add BuildTensorSlice for building  cherrypickr2.6", "body": "This avoids several sources of crashes and undefined behavior when loading\r\ninvalid checkpoints.\r\n\r\nPiperOrigin-RevId: 392785704\r\nChange-Id: Icd9713c768b882f3b58b427eddac376060696833", "comments": ["\nThanks for your pull request. It looks like this may be your first contribution to a Google open source project (if not, look below for help). Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).\n\n:memo: **Please visit <https://cla.developers.google.com/> to sign.**\n\nOnce you've signed (or fixed any issues), please reply here with `@googlebot I signed it!` and we'll verify it.\n\n----\n\n#### What to do if you already signed the CLA\n\n##### Individual signers\n\n*   It's possible we don't have your GitHub username or you're using a different email address on your commit. Check [your existing CLA data](https://cla.developers.google.com/clas) and verify that your [email is set on your git commits](https://help.github.com/articles/setting-your-email-in-git/).\n\n##### Corporate signers\n\n*   Your company has a Point of Contact who decides which employees are authorized to participate. Ask your POC to be added to the group of authorized contributors. If you don't know who your Point of Contact is, direct the Google project maintainer to [go/cla#troubleshoot](http://go/cla#troubleshoot) ([Public version](https://opensource.google/docs/cla/#troubleshoot)).\n*   The email used to register you as an authorized contributor must be the email used for the Git commit. Check [your existing CLA data](https://cla.developers.google.com/clas) and verify that your [email is set on your git commits](https://help.github.com/articles/setting-your-email-in-git/).\n*   The email used to register you as an authorized contributor must also be [attached to your GitHub account](https://github.com/settings/emails).\n\t\t\n\n\u2139\ufe0f **Googlers: [Go here](https://goto.google.com/prinfo/https%3A%2F%2Fgithub.com%2Ftensorflow%2Ftensorflow%2Fpull%2F51953) for more info**.\n\n<!-- need_sender_cla -->", "@pranve Can you please sign CLA. Thanks!", "@googlebot I signed it!"]}, {"number": 51952, "title": "Add a initial_best parameter in ModelCheckpoint Callback", "body": "Add a initial_best parameter in ModelCheckpoint that is stored as self.best. If a session is stopped and rerun or kernel dies, then the best value of metric is taken as np.inf or -np.inf and the model is saved after the first epoch without taking into consideration the initial performance of model. So modelweights are overwritten even if the previous model performance was better than the current model.\r\n\r\nUnit testing notebook can be found [here](https://colab.research.google.com/drive/1MpennD9t136peziuCjef7TwbVendMZcS?usp=sharing) . \r\n\r\nCc: @qlzh727 can you give it a look please?", "comments": ["Please send this PR to keras-team/keras and make the code change there. Thanks."]}, {"number": 51950, "title": "ValueError: Protocol message object_detection.protos.StringIntLabelMapItem has no non-repeated field \"frequency\"", "body": "\r\n**System information**\r\n- OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Windows 10\r\n- TensorFlow installed from (source or binary): pip install tensorflow==1.15 (anaconda)\r\n- TensorFlow version (use command below): 1.15\r\n- Python version: 3.7.11\r\n\r\ni am trying to run the script: updated_old_example.py from a tutorial without errors (see source:https://github.com/Bengemon825/TF_Object_Detection2020)\r\n\r\nafter i selected the correct interpreter with **tensorflow 1.15** and **python 3.7** i got the first error: **AttributeError: module 'tensorflow' has no attribute 'GraphDef'.**\r\n\r\nSolution: **tf.compat.v1.GraphDef() + tf.compat.v2.io.gfile.GFile()**\r\n\r\nat the end i get this error message: **ValueError: Protocol message object_detection.protos.StringIntLabelMapItem has no non-repeated field \"frequency\"** , where i didn't find a solution.\r\n\r\nthanks for your help!\r\n", "comments": ["@Petros626 We see that you are using old version of tensorflow 1.15 which is not actively supported , We recommend that you upgrade to 2.6.0 and let us know if the issue still persists in newer versions. Thanks!", "\r\n@sushreebarsa hey thanks for your answer.\r\n\r\nthe funny thing is, before i had loaded an interpreter with **python 3.8** and **tensorflow 2.5**, there i got the error message that **Image** and **pyplot** would not contain a module. I think I could only install Image as a package the error for the Matplotlib remained, so I used an interpreter with tensorflow 1.15. finally the tutorial is also based on the older version :/\r\n\r\ni can try again with the other interpreter and report back what happens", "@sushreebarsa i was also not successful with tensorflow 2  unfortunately i get other error messages which i could partially fix but the script remains unworkable.\r\n\r\nwith tensorflow 1 I have in any case the error because of the matplotlib and image no longer, also is marking in the code at tf.Graphdef() and tf.gfile.Gfile() disappeared, but still the error: AttributeError: module 'tensorflow' has no attribute 'GraphDef'\r\n\r\n![gfile](https://user-images.githubusercontent.com/62354721/132981325-07d020d1-813c-47da-af3f-c3c448cf19b2.JPG)\r\n\r\n", "@Petros626 Thanks for the update! Could you please provide the updated 2.x colab gist or notebook link to reproduce the issue reported here ?Thanks!", "@sushreebarsa  hey sorry i was very busy.. if i understand you correctly, you want the link to run the tutorial on jupyter notebook?\r\n\r\nor you mean the python script to run it on your pc ?", "@Petros626  Can you please execute your code using Latest Version (2.6.0) and let us know if the issue still persists?  If so please provide the code snippet or colab gist in order to reproduce the issue . Thanks!", "This issue has been automatically marked as stale because it has no recent activity. It will be closed if no further activity occurs. Thank you.\n", "@sushreebarsa hey sorry mate I can't use my laptop because my PC is currently calculating a neural network ", "Are you satisfied with the resolution of your issue?\n<a href=\"https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&entry.2137816233=https://github.com/tensorflow/tensorflow/issues/51950\">Yes</a>\n<a href=\"https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&entry.2137816233=https://github.com/tensorflow/tensorflow/issues/51950\">No</a>\n", "> @Petros626 Can you please execute your code using Latest Version (2.6.0) and let us know if the issue still persists? If so please provide the code snippet or colab gist in order to reproduce the issue . Thanks!\r\n\r\nI use tf 2.6 as I mentioned before but it doesn't solve the error. Look above I describe what's happens if I use tf 2.6", "AttributeError: module 'tensorflow' has no attribute 'GraphDef'\r\nplease refer to [link](https://stackoverflow.com/questions/57614436/od-graph-def-tf-graphdef-attributeerror-module-tensorflow-has-no-attribut),[link2](https://githubmemory.com/repo/nikitakit/self-attentive-parser/issues/57)\r\n", "@sushreebarsa you can also write me privately by email to ask your expectation/question there?", "> \r\n> \r\n> AttributeError: module 'tensorflow' has no attribute 'GraphDef' please refer to [link](https://stackoverflow.com/questions/57614436/od-graph-def-tf-graphdef-attributeerror-module-tensorflow-has-no-attribut),[link2](https://githubmemory.com/repo/nikitakit/self-attentive-parser/issues/57)\r\n\r\ni think i have tried these two sources once, but i will check again to see if they are of any use.", "This issue has been automatically marked as stale because it has no recent activity. It will be closed if no further activity occurs. Thank you.\n", "Closing as stale. Please reopen if you'd like to work on this further.\n", "Are you satisfied with the resolution of your issue?\n<a href=\"https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&entry.2137816233=https://github.com/tensorflow/tensorflow/issues/51950\">Yes</a>\n<a href=\"https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&entry.2137816233=https://github.com/tensorflow/tensorflow/issues/51950\">No</a>\n"]}, {"number": 51949, "title": "include abseil/base/attributes.h instead of macos.h", "body": "ABSL_DEPRECATED is defined in atributes.h", "comments": []}, {"number": 51948, "title": "NotImplementedError: quantile is not implemented: StudentT", "body": "Hi, all\r\n\r\n**System information**\r\n- OS Platform and Distribution: Linux Ubuntu 20.04\r\n- Tensorflow version : 2.6.0\r\n- Tensorflow probability version: 0.13.0\r\n- Python version: 3.8.10\r\n\r\nWhen trying to compute the [well documented](https://www.tensorflow.org/probability/api_docs/python/tfp/distributions/StudentT) quantile of a Student's T distribution, the following error shows in console: `NotImplementedError: quantile is not implemented: StudentT\r\n`\r\n\r\nHere is a MWE:\r\n\r\n ``` python\r\nfrom tensorflow_probability import distributions as d \r\n\r\nt = d.StudentT(4.13, 0.0, 1.0)\r\nt.quantile(0.2)\r\n```\r\nI think this issue is very similar to [20208](https://github.com/tensorflow/tensorflow/issues/20208) and [1259](https://github.com/tensorflow/probability/issues/1259).\r\n\r\nIs there something I am missing?\r\n\r\nThanks in advance!\r\n", "comments": ["@mpkuperman ,\r\nThis issue is more suitable for tensorflow/probability repo.Please feel free to close this issue and post in respective repo from [here](https://github.com/tensorflow/probability/issues).Thanks!\r\n", "Are you satisfied with the resolution of your issue?\n<a href=\"https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&entry.2137816233=https://github.com/tensorflow/tensorflow/issues/51948\">Yes</a>\n<a href=\"https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&entry.2137816233=https://github.com/tensorflow/tensorflow/issues/51948\">No</a>\n"]}, {"number": 51947, "title": "[tf.data] move `StructuredFunctionWrapper` into a separate module", "body": "This PR refactors `dataset_ops.py` by moving the `StructuredFunctionWrapper` class into a `common` module. This enables further refactoring of function-specific `Dataset`s.\r\n\r\n**side note for future PR's:** after further examination of the function-specific `Dataset` classes (for ex: `MapDataset`), I see that they inherit from `UnaryDataset` which itself inherits from `DatasetV2`. And since the `DatasetV2` class itself needs `MapDataset` for the `def map()` functionality, this poses a circular dependency challenge even if we split the classes into different files. Thus, lazy loading would be imminent and the files might get a bit messy.\r\n\r\ncc: @aaudiber What do you think?", "comments": ["@aaudiber I have the changes to the current PR. Please take a look.\r\n\r\nP.S: Thanks for the suggestions related to the future PRs.\r\n", "@aaudiber any updates on this? Please let me know if any changes are required. Thanks!"]}, {"number": 51946, "title": "cherrypickr2.4", "body": "PiperOrigin-RevId: 392769882\r\nChange-Id: Id1f7ae7fcf8142193556af47abfda81b13d3cce4", "comments": ["\nThanks for your pull request. It looks like this may be your first contribution to a Google open source project (if not, look below for help). Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).\n\n:memo: **Please visit <https://cla.developers.google.com/> to sign.**\n\nOnce you've signed (or fixed any issues), please reply here with `@googlebot I signed it!` and we'll verify it.\n\n----\n\n#### What to do if you already signed the CLA\n\n##### Individual signers\n\n*   It's possible we don't have your GitHub username or you're using a different email address on your commit. Check [your existing CLA data](https://cla.developers.google.com/clas) and verify that your [email is set on your git commits](https://help.github.com/articles/setting-your-email-in-git/).\n\n##### Corporate signers\n\n*   Your company has a Point of Contact who decides which employees are authorized to participate. Ask your POC to be added to the group of authorized contributors. If you don't know who your Point of Contact is, direct the Google project maintainer to [go/cla#troubleshoot](http://go/cla#troubleshoot) ([Public version](https://opensource.google/docs/cla/#troubleshoot)).\n*   The email used to register you as an authorized contributor must be the email used for the Git commit. Check [your existing CLA data](https://cla.developers.google.com/clas) and verify that your [email is set on your git commits](https://help.github.com/articles/setting-your-email-in-git/).\n*   The email used to register you as an authorized contributor must also be [attached to your GitHub account](https://github.com/settings/emails).\n\t\t\n\n\u2139\ufe0f **Googlers: [Go here](https://goto.google.com/prinfo/https%3A%2F%2Fgithub.com%2Ftensorflow%2Ftensorflow%2Fpull%2F51946) for more info**.\n\n<!-- need_sender_cla -->", "@pranve Can you please sign CLA. Thanks!", "@googlebot I signed it!"]}, {"number": 51945, "title": "cherrypick2.5", "body": "PiperOrigin-RevId: 391529518\r\nChange-Id: Ie3db4ae6d3c0f3dc88404e1dbdc22f7d03cbeb3b", "comments": ["\nThanks for your pull request. It looks like this may be your first contribution to a Google open source project (if not, look below for help). Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).\n\n:memo: **Please visit <https://cla.developers.google.com/> to sign.**\n\nOnce you've signed (or fixed any issues), please reply here with `@googlebot I signed it!` and we'll verify it.\n\n----\n\n#### What to do if you already signed the CLA\n\n##### Individual signers\n\n*   It's possible we don't have your GitHub username or you're using a different email address on your commit. Check [your existing CLA data](https://cla.developers.google.com/clas) and verify that your [email is set on your git commits](https://help.github.com/articles/setting-your-email-in-git/).\n\n##### Corporate signers\n\n*   Your company has a Point of Contact who decides which employees are authorized to participate. Ask your POC to be added to the group of authorized contributors. If you don't know who your Point of Contact is, direct the Google project maintainer to [go/cla#troubleshoot](http://go/cla#troubleshoot) ([Public version](https://opensource.google/docs/cla/#troubleshoot)).\n*   The email used to register you as an authorized contributor must be the email used for the Git commit. Check [your existing CLA data](https://cla.developers.google.com/clas) and verify that your [email is set on your git commits](https://help.github.com/articles/setting-your-email-in-git/).\n*   The email used to register you as an authorized contributor must also be [attached to your GitHub account](https://github.com/settings/emails).\n\t\t\n\n\u2139\ufe0f **Googlers: [Go here](https://goto.google.com/prinfo/https%3A%2F%2Fgithub.com%2Ftensorflow%2Ftensorflow%2Fpull%2F51945) for more info**.\n\n<!-- need_sender_cla -->", "@pranve Can you please sign CLA. Thanks!", "@googlebot I signed it!"]}, {"number": 51944, "title": "Init node head/predictions/class_string_lookup/table_init/LookupTableImportV2 doesn't exist in graph", "body": "<em>Please make sure that this is a bug. As per our\r\n[GitHub Policy](https://github.com/tensorflow/tensorflow/blob/master/ISSUES.md),\r\nwe only address code/doc bugs, performance issues, feature requests and\r\nbuild/installation issues on GitHub. tag:bug_template</em>\r\n\r\n**System information**\r\n- Have I written custom code (as opposed to using a stock example script provided in TensorFlow):No\r\n- OS Platform and Distribution (e.g., Linux Ubuntu 16.04):debian 10\r\n- Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device:\r\n- TensorFlow installed from (source or binary):binary\r\n- TensorFlow version (use command below):2.6.0\r\n- Python version:3.6.9\r\n- Bazel version (if compiling from source):\r\n- GCC/Compiler version (if compiling from source):\r\n- CUDA/cuDNN version:\r\n- GPU model and memory:\r\n\r\nYou can collect some of this information using our environment capture\r\n[script](https://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh)\r\nYou can also obtain the TensorFlow version with:\r\n1. TF 1.0: `python -c \"import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)\"`\r\n2. TF 2.0: `python -c \"import tensorflow as tf; print(tf.version.GIT_VERSION, tf.version.VERSION)\"`\r\n\r\n**Describe the current behavior**\r\n```\r\n2021-09-11 12:21:06.193462: W tensorflow/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcudart.so.11.0'; dlerror: libcudart.so.11.0: cannot open shared object file: No such file or directory\r\n2021-09-11 12:21:06.193522: I tensorflow/stream_executor/cuda/cudart_stub.cc:29] Ignore above cudart dlerror if you do not have a GPU set up on your machine.\r\n2021-09-11 12:21:09.808281: W tensorflow/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcuda.so.1'; dlerror: libcuda.so.1: cannot open shared object file: No such file or directory\r\n2021-09-11 12:21:09.808359: W tensorflow/stream_executor/cuda/cuda_driver.cc:269] failed call to cuInit: UNKNOWN ERROR (303)\r\n2021-09-11 12:21:09.808396: I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:156] kernel driver does not appear to be running on this host (penguin): /proc/driver/nvidia/version does not exist\r\n2021-09-11 12:21:09.808686: I tensorflow/core/platform/cpu_feature_guard.cc:142] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 FMA\r\nTo enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.\r\n2021-09-11 12:21:10.927031: I tensorflow/compiler/mlir/mlir_graph_optimization_pass.cc:185] None of the MLIR Optimization Passes are enabled (registered 2)\r\n2021-09-11 12:21:11.938166: I tensorflow/core/grappler/devices.cc:66] Number of eligible GPUs (core count >= 8, compute capability >= 0.0): 0\r\n2021-09-11 12:21:11.938620: I tensorflow/core/grappler/clusters/single_machine.cc:357] Starting new session\r\n2021-09-11 12:21:11.961714: E tensorflow/core/grappler/grappler_item_builder.cc:669] Init node head/predictions/class_string_lookup/table_init/LookupTableImportV2 doesn't exist in graph\r\nTraceback (most recent call last):\r\n  File \"tflite.py\", line 29, in <module>\r\n    model = converter.convert()\r\n  File \"/home/fsx950223/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/lite/python/lite.py\", line 1396, in convert\r\n    return super(TFLiteConverterV2, self).convert()\r\n  File \"/home/fsx950223/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/lite/python/lite.py\", line 729, in wrapper\r\n    return self._convert_and_export_metrics(convert_func, *args, **kwargs)\r\n  File \"/home/fsx950223/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/lite/python/lite.py\", line 715, in _convert_and_export_metrics\r\n    result = convert_func(self, *args, **kwargs)\r\n  File \"/home/fsx950223/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/lite/python/lite.py\", line 1201, in convert\r\n    self._freeze_concrete_function())\r\n  File \"/home/fsx950223/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/lite/python/convert_phase.py\", line 218, in wrapper\r\n    raise error from None  # Re-throws the exception.\r\n  File \"/home/fsx950223/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/lite/python/convert_phase.py\", line 208, in wrapper\r\n    return func(*args, **kwargs)\r\n  File \"/home/fsx950223/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/lite/python/lite.py\", line 1177, in _freeze_concrete_function\r\n    self._funcs[0], lower_control_flow=False))\r\n  File \"/home/fsx950223/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/framework/convert_to_constants.py\", line 1229, in convert_variables_to_constants_v2_as_graph\r\n    aggressive_inlining=aggressive_inlining)\r\n  File \"/home/fsx950223/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/framework/convert_to_constants.py\", line 809, in __init__\r\n    aggressive_inlining)\r\n  File \"/home/fsx950223/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/framework/convert_to_constants.py\", line 1043, in _run_inline_graph_optimization\r\n    return tf_optimizer.OptimizeGraph(config, meta_graph)\r\n  File \"/home/fsx950223/anaconda3/envs/venv/lib/python3.6/site-packages/tensorflow/python/grappler/tf_optimizer.py\", line 58, in OptimizeGraph\r\n    graph_id, strip_default_attributes)\r\nValueError: Failed to import metagraph, check error log for more info.\r\n```\r\n**Describe the expected behavior**\r\nWorks same as ```converter = tf.lite.TFLiteConverter.from_saved_model('./saved_model', signature_keys=[tf.saved_model.DEFAULT_SERVING_SIGNATURE_DEF_KEY])```\r\n**[Contributing](https://www.tensorflow.org/community/contribute)**\r\n\r\n- Do you want to contribute a PR? (yes/no):\r\n- Briefly describe your candidate solution(if contributing):\r\n\r\n**Standalone code to reproduce the issue**\r\nProvide a reproducible test case that is the bare minimum necessary to generate\r\nthe problem. If possible, please share a link to Colab/Jupyter/any notebook.\r\n```python\r\nimport tensorflow as tf\r\nimport tensorflow_text as text\r\nmodel = tf.saved_model.load('./saved_model')\r\nconcrete_func = model.signatures[\r\n    tf.saved_model.DEFAULT_SERVING_SIGNATURE_DEF_KEY]\r\nconcrete_func.inputs[0].set_shape([1])\r\nconverter = tf.lite.TFLiteConverter.from_concrete_functions([concrete_func])\r\n# converter = tf.lite.TFLiteConverter.from_saved_model('./saved_model', signature_keys=[tf.saved_model.DEFAULT_SERVING_SIGNATURE_DEF_KEY])\r\nconverter.optimizations=[tf.lite.Optimize.DEFAULT]\r\nconverter.inference_type=tf.float32\r\nconverter.target_spec.supported_ops=[tf.lite.OpsSet.TFLITE_BUILTINS, tf.lite.OpsSet.SELECT_TF_OPS]\r\nmodel = converter.convert()\r\ntf.io.write_file('guesslang.tflite', model)\r\n```\r\n**Other info / logs** Include any logs or source code that would be helpful to\r\ndiagnose the problem. If including tracebacks, please include the full\r\ntraceback. Large logs and files should be attached.\r\nSaved model: [saved_model.zip](https://github.com/tensorflow/tensorflow/files/7147206/saved_model.zip)\r\n", "comments": ["Please try out the tf-nightly version. The newer version already fixed this problem.", "Are you satisfied with the resolution of your issue?\n<a href=\"https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&entry.2137816233=https://github.com/tensorflow/tensorflow/issues/51944\">Yes</a>\n<a href=\"https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&entry.2137816233=https://github.com/tensorflow/tensorflow/issues/51944\">No</a>\n", "Noted that you need to provide the model object as well in the tf-nightly version.\r\n```converter = tf.lite.TFLiteConverter.from_concrete_functions([concrete_func], model)```"]}, {"number": 51943, "title": "cherrypick for 2.5", "body": "PiperOrigin-RevId: 392769882\r\nChange-Id: Id1f7ae7fcf8142193556af47abfda81b13d3cce4", "comments": ["\nThanks for your pull request. It looks like this may be your first contribution to a Google open source project (if not, look below for help). Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).\n\n:memo: **Please visit <https://cla.developers.google.com/> to sign.**\n\nOnce you've signed (or fixed any issues), please reply here with `@googlebot I signed it!` and we'll verify it.\n\n----\n\n#### What to do if you already signed the CLA\n\n##### Individual signers\n\n*   It's possible we don't have your GitHub username or you're using a different email address on your commit. Check [your existing CLA data](https://cla.developers.google.com/clas) and verify that your [email is set on your git commits](https://help.github.com/articles/setting-your-email-in-git/).\n\n##### Corporate signers\n\n*   Your company has a Point of Contact who decides which employees are authorized to participate. Ask your POC to be added to the group of authorized contributors. If you don't know who your Point of Contact is, direct the Google project maintainer to [go/cla#troubleshoot](http://go/cla#troubleshoot) ([Public version](https://opensource.google/docs/cla/#troubleshoot)).\n*   The email used to register you as an authorized contributor must be the email used for the Git commit. Check [your existing CLA data](https://cla.developers.google.com/clas) and verify that your [email is set on your git commits](https://help.github.com/articles/setting-your-email-in-git/).\n*   The email used to register you as an authorized contributor must also be [attached to your GitHub account](https://github.com/settings/emails).\n\t\t\n\n\u2139\ufe0f **Googlers: [Go here](https://goto.google.com/prinfo/https%3A%2F%2Fgithub.com%2Ftensorflow%2Ftensorflow%2Fpull%2F51943) for more info**.\n\n<!-- need_sender_cla -->", "@pranve Can you please sign CLA. Thanks!", "@googlebot I signed it!"]}, {"number": 51942, "title": "cherrypick to r2.6", "body": "PiperOrigin-RevId: 392769882\r\nChange-Id: Id1f7ae7fcf8142193556af47abfda81b13d3cce4", "comments": ["\nThanks for your pull request. It looks like this may be your first contribution to a Google open source project (if not, look below for help). Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).\n\n:memo: **Please visit <https://cla.developers.google.com/> to sign.**\n\nOnce you've signed (or fixed any issues), please reply here with `@googlebot I signed it!` and we'll verify it.\n\n----\n\n#### What to do if you already signed the CLA\n\n##### Individual signers\n\n*   It's possible we don't have your GitHub username or you're using a different email address on your commit. Check [your existing CLA data](https://cla.developers.google.com/clas) and verify that your [email is set on your git commits](https://help.github.com/articles/setting-your-email-in-git/).\n\n##### Corporate signers\n\n*   Your company has a Point of Contact who decides which employees are authorized to participate. Ask your POC to be added to the group of authorized contributors. If you don't know who your Point of Contact is, direct the Google project maintainer to [go/cla#troubleshoot](http://go/cla#troubleshoot) ([Public version](https://opensource.google/docs/cla/#troubleshoot)).\n*   The email used to register you as an authorized contributor must be the email used for the Git commit. Check [your existing CLA data](https://cla.developers.google.com/clas) and verify that your [email is set on your git commits](https://help.github.com/articles/setting-your-email-in-git/).\n*   The email used to register you as an authorized contributor must also be [attached to your GitHub account](https://github.com/settings/emails).\n\t\t\n\n\u2139\ufe0f **Googlers: [Go here](https://goto.google.com/prinfo/https%3A%2F%2Fgithub.com%2Ftensorflow%2Ftensorflow%2Fpull%2F51942) for more info**.\n\n<!-- need_sender_cla -->", "@pranve Can you please sign CLA. Thanks!", "@googlebot I signed it!"]}, {"number": 51941, "title": "cherrypick to r2.5", "body": null, "comments": ["\nThanks for your pull request. It looks like this may be your first contribution to a Google open source project (if not, look below for help). Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).\n\n:memo: **Please visit <https://cla.developers.google.com/> to sign.**\n\nOnce you've signed (or fixed any issues), please reply here with `@googlebot I signed it!` and we'll verify it.\n\n----\n\n#### What to do if you already signed the CLA\n\n##### Individual signers\n\n*   It's possible we don't have your GitHub username or you're using a different email address on your commit. Check [your existing CLA data](https://cla.developers.google.com/clas) and verify that your [email is set on your git commits](https://help.github.com/articles/setting-your-email-in-git/).\n\n##### Corporate signers\n\n*   Your company has a Point of Contact who decides which employees are authorized to participate. Ask your POC to be added to the group of authorized contributors. If you don't know who your Point of Contact is, direct the Google project maintainer to [go/cla#troubleshoot](http://go/cla#troubleshoot) ([Public version](https://opensource.google/docs/cla/#troubleshoot)).\n*   The email used to register you as an authorized contributor must be the email used for the Git commit. Check [your existing CLA data](https://cla.developers.google.com/clas) and verify that your [email is set on your git commits](https://help.github.com/articles/setting-your-email-in-git/).\n*   The email used to register you as an authorized contributor must also be [attached to your GitHub account](https://github.com/settings/emails).\n\t\t\n\n\u2139\ufe0f **Googlers: [Go here](https://goto.google.com/prinfo/https%3A%2F%2Fgithub.com%2Ftensorflow%2Ftensorflow%2Fpull%2F51941) for more info**.\n\n<!-- need_sender_cla -->", "\nThanks for your pull request. It looks like this may be your first contribution to a Google open source project (if not, look below for help). Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).\n\n:memo: **Please visit <https://cla.developers.google.com/> to sign.**\n\nOnce you've signed (or fixed any issues), please reply here with `@googlebot I signed it!` and we'll verify it.\n\n----\n\n#### What to do if you already signed the CLA\n\n##### Individual signers\n\n*   It's possible we don't have your GitHub username or you're using a different email address on your commit. Check [your existing CLA data](https://cla.developers.google.com/clas) and verify that your [email is set on your git commits](https://help.github.com/articles/setting-your-email-in-git/).\n\n##### Corporate signers\n\n*   Your company has a Point of Contact who decides which employees are authorized to participate. Ask your POC to be added to the group of authorized contributors. If you don't know who your Point of Contact is, direct the Google project maintainer to [go/cla#troubleshoot](http://go/cla#troubleshoot) ([Public version](https://opensource.google/docs/cla/#troubleshoot)).\n*   The email used to register you as an authorized contributor must be the email used for the Git commit. Check [your existing CLA data](https://cla.developers.google.com/clas) and verify that your [email is set on your git commits](https://help.github.com/articles/setting-your-email-in-git/).\n*   The email used to register you as an authorized contributor must also be [attached to your GitHub account](https://github.com/settings/emails).\n\t\t\n\n\u2139\ufe0f **Googlers: [Go here](https://goto.google.com/prinfo/https%3A%2F%2Fgithub.com%2Ftensorflow%2Ftensorflow%2Fpull%2F51941) for more info**.\n\n<!-- need_sender_cla -->"]}]