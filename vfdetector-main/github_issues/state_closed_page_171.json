[{"number": 49645, "title": "Fix memory corruption issue with `tf.raw_ops.DrawBoundingBoxesV2`.", "body": "PiperOrigin-RevId: 372033910\nChange-Id: I8a9f4efc1c8ddaacbc26ec1fbe4bfdd6791c226d", "comments": []}, {"number": 49644, "title": "Fix memory corruption issue with `tf.raw_ops.DrawBoundingBoxesV2`.", "body": "PiperOrigin-RevId: 372033910\nChange-Id: I8a9f4efc1c8ddaacbc26ec1fbe4bfdd6791c226d", "comments": []}, {"number": 49643, "title": "Fix memory corruption issue with `tf.raw_ops.DrawBoundingBoxesV2`.", "body": "PiperOrigin-RevId: 372033910\nChange-Id: I8a9f4efc1c8ddaacbc26ec1fbe4bfdd6791c226d", "comments": []}, {"number": 49642, "title": "test build issue", "body": "<em>Please make sure that this is a build/installation issue. As per our [GitHub Policy](https://github.com/tensorflow/tensorflow/blob/master/ISSUES.md), we only address code/doc bugs, performance issues, feature requests and build/installation issues on GitHub. tag:build_template</em>\r\n\r\n**System information**\r\n- OS Platform and Distribution (e.g., Linux Ubuntu 16.04):\r\n- Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device:\r\n- TensorFlow installed from (source or binary):\r\n- TensorFlow version:\r\n- Python version:\r\n- Installed using virtualenv? pip? conda?:\r\n- Bazel version (if compiling from source):\r\n- GCC/Compiler version (if compiling from source):\r\n- CUDA/cuDNN version:\r\n- GPU model and memory:\r\n\r\n\r\n\r\n**Describe the problem**\r\n\r\n**Provide the exact sequence of commands / steps that you executed before running into the problem**\r\n\r\n\r\n**Any other info / logs**\r\nInclude any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached.\r\n", "comments": ["Are you satisfied with the resolution of your issue?\n<a href=\"https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&entry.2137816233=https://github.com/tensorflow/tensorflow/issues/49642\">Yes</a>\n<a href=\"https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&entry.2137816233=https://github.com/tensorflow/tensorflow/issues/49642\">No</a>\n"]}, {"number": 49641, "title": "Fix memory corruption issue with `tf.raw_ops.DrawBoundingBoxesV2`.", "body": "PiperOrigin-RevId: 372033910\nChange-Id: I8a9f4efc1c8ddaacbc26ec1fbe4bfdd6791c226d", "comments": []}, {"number": 49640, "title": "Fix out of bound read in requantization_range_op.cc", "body": "PiperOrigin-RevId: 372129031\nChange-Id: Ie684ab98a3840c5186ead3eafffc0e0ed0e8030d", "comments": []}, {"number": 49639, "title": "Fix out of bound read in requantization_range_op.cc", "body": "PiperOrigin-RevId: 372129031\nChange-Id: Ie684ab98a3840c5186ead3eafffc0e0ed0e8030d", "comments": []}, {"number": 49638, "title": "Fix out of bound read in requantization_range_op.cc", "body": "PiperOrigin-RevId: 372129031\nChange-Id: Ie684ab98a3840c5186ead3eafffc0e0ed0e8030d", "comments": []}, {"number": 49637, "title": "Fix out of bound read in requantization_range_op.cc", "body": "PiperOrigin-RevId: 372129031\nChange-Id: Ie684ab98a3840c5186ead3eafffc0e0ed0e8030d", "comments": []}, {"number": 49636, "title": "Fix heap buffer overflow", "body": "PiperOrigin-RevId: 372132844\nChange-Id: Idef9895efaf145f2b1c23d31983601ec980cd5e4", "comments": []}, {"number": 49635, "title": "Add option to print the src and dest files from project generation script.", "body": "This can be useful for external integrations that want to manage copies on their own.\n\nSee http://b/183229719#comment3 for more context.\n", "comments": ["Thanks for contributing to TensorFlow Lite Micro.\n\nTo keep this process moving along, we'd like to make sure that you have completed the items on this list:\n   * Read the [contributing guidelines for TensorFlow Lite Micro](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/lite/micro/CONTRIBUTING.md)\n   * Created a [TF Lite Micro Github issue](https://github.com/tensorflow/tensorflow/issues/new?labels=comp%3Amicro&template=70-tflite-micro-issue.md)\n   * Linked to the issue from the PR description\n   \n\nWe would like to have a discussion on the Github issue first to determine the best path forward, and then proceed to the PR review.\n"]}, {"number": 49634, "title": "Fix heap buffer overflow", "body": "PiperOrigin-RevId: 372132844\nChange-Id: Idef9895efaf145f2b1c23d31983601ec980cd5e4", "comments": []}, {"number": 49633, "title": "Fix heap buffer overflow", "body": "PiperOrigin-RevId: 372132844\nChange-Id: Idef9895efaf145f2b1c23d31983601ec980cd5e4", "comments": []}, {"number": 49632, "title": "Fix heap buffer overflow", "body": "PiperOrigin-RevId: 372132844\nChange-Id: Idef9895efaf145f2b1c23d31983601ec980cd5e4", "comments": []}, {"number": 49631, "title": "Fix heap-buffer-overflow issue with `tf.raw_ops.SparseDenseCwiseMul`.", "body": "PiperOrigin-RevId: 372054410\nChange-Id: Ifcce0491e2e3816838c87e73be30a1e61b65174d", "comments": []}, {"number": 49630, "title": "Fix heap-buffer-overflow issue with `tf.raw_ops.SparseDenseCwiseMul`.", "body": "PiperOrigin-RevId: 372054410\nChange-Id: Ifcce0491e2e3816838c87e73be30a1e61b65174d", "comments": []}, {"number": 49629, "title": "Fix heap-buffer-overflow issue with `tf.raw_ops.SparseDenseCwiseMul`.", "body": "PiperOrigin-RevId: 372054410\nChange-Id: Ifcce0491e2e3816838c87e73be30a1e61b65174d", "comments": []}, {"number": 49628, "title": "Fix heap-buffer-overflow issue with `tf.raw_ops.SparseDenseCwiseMul`.", "body": "PiperOrigin-RevId: 372054410\nChange-Id: Ifcce0491e2e3816838c87e73be30a1e61b65174d", "comments": []}, {"number": 49627, "title": "2.4.0 docs", "body": "When clicking on r2.4 here https://www.tensorflow.org/versions it directs to v2.5.0 instead.", "comments": ["@MarkDaoust  Looks like the issue still exists. Can you please take a look?", "I'm sending a fix for this."]}, {"number": 49626, "title": "RET_CHECK failure: operand != nullptr  when trying to run with TPU", "body": "Hello,\r\n\r\nI am trying to train my model with TPU on Google Colab. On GPU everything worked but was too slow for my workflows.\r\nNow, after i have finished the initial setup I get the following error:\r\n\r\n```\r\nInternalError                             Traceback (most recent call last)\r\n<ipython-input-14-9d78cb65fe31> in <module>()\r\n    244 with tpu_strategy.scope():\r\n    245     # Start the process\r\n--> 246     out_label_all, true_label_all, features, test_labels, acc =                         start_session(log_dir, dsparams, hparams, eparams, mparams)\r\n    247 results[\"ACC\"] = acc\r\n\r\n15 frames\r\n<ipython-input-14-9d78cb65fe31> in start_session(log_dir, dsparams, hparams, eparams, mparams)\r\n    235                     create_dir(run_dir)\r\n    236 \r\n--> 237             results = run(run_dir, dsparams, hparams, eparams)\r\n    238 \r\n    239     return results\r\n\r\n<ipython-input-14-9d78cb65fe31> in run(run_dir, dsparams, hparams, eparams)\r\n    165             tf.summary.scalar('accuracy', results[-1], step=1)\r\n    166     else:\r\n--> 167         results = train_model(run_dir, dsparams, hparams, eparams)\r\n    168 \r\n    169     return results\r\n\r\n<ipython-input-14-9d78cb65fe31> in train_model(run_dir, dsparams, hparams, eparams)\r\n    121                 validation_data=ds_test,\r\n    122                 verbose=eparams[\"VERBOSE\"],\r\n--> 123                 callbacks=callbacks\r\n    124             )\r\n    125 \r\n\r\n/usr/local/lib/python3.7/dist-packages/tensorflow/python/keras/engine/training.py in fit(self, x, y, batch_size, epochs, verbose, callbacks, validation_split, validation_data, shuffle, class_weight, sample_weight, initial_epoch, steps_per_epoch, validation_steps, validation_batch_size, validation_freq, max_queue_size, workers, use_multiprocessing)\r\n   1186               logs = tmp_logs  # No error, now safe to assign to logs.\r\n   1187               end_step = step + data_handler.step_increment\r\n-> 1188               callbacks.on_train_batch_end(end_step, logs)\r\n   1189               if self.stop_training:\r\n   1190                 break\r\n\r\n/usr/local/lib/python3.7/dist-packages/tensorflow/python/keras/callbacks.py in on_train_batch_end(self, batch, logs)\r\n    455     \"\"\"\r\n    456     if self._should_call_train_batch_hooks:\r\n--> 457       self._call_batch_hook(ModeKeys.TRAIN, 'end', batch, logs=logs)\r\n    458 \r\n    459   def on_test_batch_begin(self, batch, logs=None):\r\n\r\n/usr/local/lib/python3.7/dist-packages/tensorflow/python/keras/callbacks.py in _call_batch_hook(self, mode, hook, batch, logs)\r\n    315       self._call_batch_begin_hook(mode, batch, logs)\r\n    316     elif hook == 'end':\r\n--> 317       self._call_batch_end_hook(mode, batch, logs)\r\n    318     else:\r\n    319       raise ValueError('Unrecognized hook: {}'.format(hook))\r\n\r\n/usr/local/lib/python3.7/dist-packages/tensorflow/python/keras/callbacks.py in _call_batch_end_hook(self, mode, batch, logs)\r\n    335       self._batch_times.append(batch_time)\r\n    336 \r\n--> 337     self._call_batch_hook_helper(hook_name, batch, logs)\r\n    338 \r\n    339     if len(self._batch_times) >= self._num_batches_for_timing_check:\r\n\r\n/usr/local/lib/python3.7/dist-packages/tensorflow/python/keras/callbacks.py in _call_batch_hook_helper(self, hook_name, batch, logs)\r\n    370       start_time = time.time()\r\n    371 \r\n--> 372     logs = self._process_logs(logs, is_batch_hook=True)\r\n    373     for callback in self.callbacks:\r\n    374       hook = getattr(callback, hook_name)\r\n\r\n/usr/local/lib/python3.7/dist-packages/tensorflow/python/keras/callbacks.py in _process_logs(self, logs, is_batch_hook)\r\n    290     if is_batch_hook and self._batch_hooks_support_tf_logs:\r\n    291       return logs\r\n--> 292     return tf_utils.sync_to_numpy_or_python_type(logs)\r\n    293 \r\n    294   def append(self, callback):\r\n\r\n/usr/local/lib/python3.7/dist-packages/tensorflow/python/keras/utils/tf_utils.py in sync_to_numpy_or_python_type(tensors)\r\n    517     return t  # Don't turn ragged or sparse tensors to NumPy.\r\n    518 \r\n--> 519   return nest.map_structure(_to_single_numpy_or_python_type, tensors)\r\n    520 \r\n    521 \r\n\r\n/usr/local/lib/python3.7/dist-packages/tensorflow/python/util/nest.py in map_structure(func, *structure, **kwargs)\r\n    865 \r\n    866   return pack_sequence_as(\r\n--> 867       structure[0], [func(*x) for x in entries],\r\n    868       expand_composites=expand_composites)\r\n    869 \r\n\r\n/usr/local/lib/python3.7/dist-packages/tensorflow/python/util/nest.py in <listcomp>(.0)\r\n    865 \r\n    866   return pack_sequence_as(\r\n--> 867       structure[0], [func(*x) for x in entries],\r\n    868       expand_composites=expand_composites)\r\n    869 \r\n\r\n/usr/local/lib/python3.7/dist-packages/tensorflow/python/keras/utils/tf_utils.py in _to_single_numpy_or_python_type(t)\r\n    513   def _to_single_numpy_or_python_type(t):\r\n    514     if isinstance(t, ops.Tensor):\r\n--> 515       x = t.numpy()\r\n    516       return x.item() if np.ndim(x) == 0 else x\r\n    517     return t  # Don't turn ragged or sparse tensors to NumPy.\r\n\r\n/usr/local/lib/python3.7/dist-packages/tensorflow/python/framework/ops.py in numpy(self)\r\n   1092     \"\"\"\r\n   1093     # TODO(slebedev): Consider avoiding a copy for non-CPU or remote tensors.\r\n-> 1094     maybe_arr = self._numpy()  # pylint: disable=protected-access\r\n   1095     return maybe_arr.copy() if isinstance(maybe_arr, np.ndarray) else maybe_arr\r\n   1096 \r\n\r\n/usr/local/lib/python3.7/dist-packages/tensorflow/python/framework/ops.py in _numpy(self)\r\n   1060       return self._numpy_internal()\r\n   1061     except core._NotOkStatusException as e:  # pylint: disable=protected-access\r\n-> 1062       six.raise_from(core._status_to_exception(e.code, e.message), None)  # pylint: disable=protected-access\r\n   1063 \r\n   1064   @property\r\n\r\n/usr/local/lib/python3.7/dist-packages/six.py in raise_from(value, from_value)\r\n```\r\n\r\n```\r\nInternalError: 9 root error(s) found.\r\n  (0) Internal: {{function_node __inference_train_function_19610}} RET_CHECK failure (third_party/tensorflow/compiler/xla/service/dynamic_dimension_inference.cc:1597) operand != nullptr \r\n\t [[{{node TPUReplicate/_compile/_16180436139931446061/_4}}]]\r\n\t [[TPUReplicate/_compile/_16180436139931446061/_4/_256]]\r\n  (1) Internal: {{function_node __inference_train_function_19610}} RET_CHECK failure (third_party/tensorflow/compiler/xla/service/dynamic_dimension_inference.cc:1597) operand != nullptr \r\n\t [[{{node TPUReplicate/_compile/_16180436139931446061/_4}}]]\r\n\t [[tpu_compile_succeeded_assert/_6288160498006010166/_5/_273]]\r\n  (2) Internal: {{function_node __inference_train_function_19610}} RET_CHECK failure (third_party/tensorflow/compiler/xla/service/dynamic_dimension_inference.cc:1597) operand != nullptr \r\n\t [[{{node TPUReplicate/_compile/_16180436139931446061/_4}}]]\r\n\t [[TPUReplicate/_compile/_16180436139931446061/_4/_242]]\r\n  (3) Internal: {{function_node __inference_train_function_19610}} RET_CHECK failure (third_party/tensorflow/compiler/xla/service/dynamic_dimension_inference.cc:1597) operand != nullptr \r\n\t [[{{node TPUReplicate/_compile/_16180436139931446061/_4}}]]\r\n\t [[cluster_train_function/control_after/_1/_325]]\r\n  (4) Internal: {{function_node __inference_train_function_19610}} RET_CHECK failure (third_party/tensorflow/compiler/xla/service/dynamic_dimension_inference.cc:1597) operand != nullptr \r\n\t [[{{node TPUReplicate/_compile/_16180436139931446061/_4}}]]\r\n\t [[tpu_compile_succeeded_assert/_6288160498006010166/_5/_217]]\r\n  (5) Internal: {{function_node __inference_train_function_19610}} RET_CHECK failure (third_party/tensorflow/compiler/xla/service/dynamic_dimension_inference.cc:1597) operand != nullptr \r\n\t [[{{node TPUReplicate/_compile/_16180436139931446061/_4}}]]\r\n\t [[TPUReplicate/_compile/_16180436139931446061/_4/_200]]\r\n  (6) Internal: {{function_node __inference_train_function_19610}} RET_CHECK failure (third_party/tensorflow/compiler/xla/service/dynamic_dimension_inference.cc:1597) operand != nullptr \r\n\t [[{{node TPUReplicate/_compile/_16180436139931446061/_4}}]]\r\n\t [[tpu_compile_succeeded_assert/_6288160498006010166/_5/_231]]\r\n  (7) Internal: {{function_node __inference_train_function_19610}} RET_CHECK failure (third_party/tensorflow/compiler/xla/service/dynamic_dimension_inference.cc:1597) operand != nullptr \r\n\t [[{{node TPUReplicate/_compile/_16180436139931446061/_4}}]]\r\n\t [[TPUReplicate/_compile/_16180436139931446061/_4/_186]]\r\n  (8) Internal: {{function_node __inference_train_function_19610}} RET_CHECK failure (third_party/tensorflow/compiler/xla/service/dynamic_dimension_inference.cc:1597) operand != nullptr \r\n\t [[{{node TPUReplicate/_compile/_16180436139931446061/_4}}]]\r\n0 successful operations.\r\n0 derived errors ignored.\r\n```\r\n\r\nI found out that the failure is related to this custom RNN-Cell when training is enabled. And if i just return the old values everything is working. The trainable parameters are w_in, w_rec and decay.\r\n\r\n```\r\ndef call(self, input_at_t, states_at_t):\r\n        old_v, old_z = states_at_t\r\n        dim = tf.reduce_prod(tf.shape(input_at_t)[1:])\r\n        new_input = tf.reshape(input_at_t, [-1, dim])\r\n        i_t = tf.matmul(new_input, self.w_in) + tf.matmul(old_z, self.w_rec)\r\n        i_reset = activation_functions.reset_by_threshold(old_z, self.decay, old_v, self.threshold)\r\n        new_v = self.decay * old_v + (1.0 - self.decay) * i_t - i_reset\r\n        new_z = activation_functions.spike_function(new_v/self.threshold)\r\n\r\n        #return (new_z, new_v), (old_v, old_z)   # If I return this here everything works fine .. but that's wrong of course\r\n        return (new_z, new_v), (new_v, new_z) # This doesn't work\r\n```\r\n\r\nI think that the problem is the second return value. If i return tensors on which operations should be performed, the error occurs.\r\nTherefor I am searching a way to modify and return the tensor without any errors.\r\n\r\nEnvironment:\r\n- Google Colab Pro with TPU\r\n- Tensorflow 2.5.0 (also tried with 2.4.1)", "comments": ["@simon-berger \r\nThis seems to be a Colab-specific [issue](https://github.com/googlecolab/colabtools/blob/main/notebooks/colab-github-demo.ipynb) . Could you please open the issue [here](https://github.com/googlecolab/colabtools/issues).\r\n\r\nand also please refer similar issues [#954](https://github.com/googlecolab/colabtools/issues/954), [#1](https://github.com/huan/tensorflow-handbook-tpu/issues/1).Thanks", "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you.\n", "Closing as stale. Please reopen if you'd like to work on this further.\n", "Are you satisfied with the resolution of your issue?\n<a href=\"https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=Yes&entry.2137816233=https://github.com/tensorflow/tensorflow/issues/49626\">Yes</a>\n<a href=\"https://docs.google.com/forms/d/e/1FAIpQLSfaP12TRhd9xSxjXZjcZFNXPGk4kc1-qMdv3gc6bEP90vY1ew/viewform?entry.85265664=No&entry.2137816233=https://github.com/tensorflow/tensorflow/issues/49626\">No</a>\n"]}, {"number": 49625, "title": "Fix breakage in parameterized_truncated_normal_op.cc", "body": "PiperOrigin-RevId: 372041718\nChange-Id: Iff79e77a2bb27032423eefcb84211627b27dfe81", "comments": []}, {"number": 49624, "title": "Fix breakage in parameterized_truncated_normal_op.cc", "body": "PiperOrigin-RevId: 372041718\nChange-Id: Iff79e77a2bb27032423eefcb84211627b27dfe81", "comments": []}, {"number": 49623, "title": "Fix breakage in parameterized_truncated_normal_op.cc", "body": "PiperOrigin-RevId: 372041718\nChange-Id: Iff79e77a2bb27032423eefcb84211627b27dfe81", "comments": []}, {"number": 49622, "title": "Fix breakage in parameterized_truncated_normal_op.cc", "body": "PiperOrigin-RevId: 372041718\nChange-Id: Iff79e77a2bb27032423eefcb84211627b27dfe81", "comments": []}, {"number": 49621, "title": "Update configure", "body": " Instagram/node-gcm  Update  Instagram/node-tensorflow  Update Instagram/nodetensorflow", "comments": ["\nThanks for your pull request. It looks like this may be your first contribution to a Google open source project (if not, look below for help). Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).\n\n:memo: **Please visit <https://cla.developers.google.com/> to sign.**\n\nOnce you've signed (or fixed any issues), please reply here with `@googlebot I signed it!` and we'll verify it.\n\n----\n\n#### What to do if you already signed the CLA\n\n##### Individual signers\n\n*   It's possible we don't have your GitHub username or you're using a different email address on your commit. Check [your existing CLA data](https://cla.developers.google.com/clas) and verify that your [email is set on your git commits](https://help.github.com/articles/setting-your-email-in-git/).\n\n##### Corporate signers\n\n*   Your company has a Point of Contact who decides which employees are authorized to participate. Ask your POC to be added to the group of authorized contributors. If you don't know who your Point of Contact is, direct the Google project maintainer to [go/cla#troubleshoot](http://go/cla#troubleshoot) ([Public version](https://opensource.google/docs/cla/#troubleshoot)).\n*   The email used to register you as an authorized contributor must be the email used for the Git commit. Check [your existing CLA data](https://cla.developers.google.com/clas) and verify that your [email is set on your git commits](https://help.github.com/articles/setting-your-email-in-git/).\n*   The email used to register you as an authorized contributor must also be [attached to your GitHub account](https://github.com/settings/emails).\n\t\t\n\n\u2139\ufe0f **Googlers: [Go here](https://goto.google.com/prinfo/https%3A%2F%2Fgithub.com%2Ftensorflow%2Ftensorflow%2Fpull%2F49621) for more info**.\n\n<!-- need_sender_cla -->", "@gabrielferrazduque Can you please sign CLA. Thanks!"]}, {"number": 49620, "title": "Add missing validations in dillation ops.", "body": "PiperOrigin-RevId: 372037158\nChange-Id: I4ee304c84a02550c030288a6534000b934fc1599", "comments": []}, {"number": 49619, "title": "Add missing validations in dillation ops.", "body": "PiperOrigin-RevId: 372037158\nChange-Id: I4ee304c84a02550c030288a6534000b934fc1599", "comments": []}, {"number": 49618, "title": "Add missing validations in dillation ops.", "body": "PiperOrigin-RevId: 372037158\nChange-Id: I4ee304c84a02550c030288a6534000b934fc1599", "comments": []}, {"number": 49617, "title": "Add missing validations in dillation ops.", "body": "PiperOrigin-RevId: 372037158\nChange-Id: I4ee304c84a02550c030288a6534000b934fc1599", "comments": []}, {"number": 49616, "title": "Replace TOSA ReluN with Clamp", "body": "Remove ReluN to align with TOSA spec. Replaced by Clamp.\r\n\r\nSigned-off-by: Kevin Cheng <kevin.cheng@arm.com>", "comments": ["Tagging @stellaraccident and @rsuderman for review request.", "Thanks Rob. Just uploaded another commit based on your feedback."]}]