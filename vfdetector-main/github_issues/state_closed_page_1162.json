[{"number": 18343, "title": "iOS Demo can't run", "body": "iOS Demo run crash in interpreter.h line 221 if (tensor_ptr->type == typeToTfLiteType<T>()) ,How can I solve this problem?\r\n\r\nHave I written custom code : NO\r\nOS Platform and Distribution: High Sierra 10.13.4,  iOS 11.3 on iPhoneX,iOS11.0.3 on iPhone6\r\nTensorFlow installed from : https://github.com/tensorflow/tensorflow\r\nTensorFlow version : 1.7.0\r\nExact command to reproduce  : Followed instructions at https://www.tensorflow.org/mobile/tflite/demo_ios", "comments": ["Same issue running TensorFlow Lite iOS Demo App. Followed all directions on https://www.tensorflow.org/mobile/tflite/demo_ios, build succeeds on my iPhone but error at runtime as shown below. iPhone screen remains black, or with camera (no classifications) and unresponsive 'Freeze Frame' below camera.\r\n\r\n- Xcode 9.3\r\n- MacOS High Sierra 10.13.4\r\n- iPhone 6s with iOS 11.3\r\n\r\n<img width=\"1418\" alt=\"screen shot 2018-04-09 at 3 35 51 pm\" src=\"https://user-images.githubusercontent.com/26833433/38515947-2c6d6218-3c0c-11e8-9107-da45cca249af.png\">\r\n", "Thank you for your post. We noticed you have not filled out the following field in the issue template. Could you update them if they are relevant in your case, or leave them as N/A? Thanks.\nHave I written custom code\nOS Platform and Distribution\nTensorFlow installed from\nTensorFlow version\nBazel version\nCUDA/cuDNN version\nGPU model and memory\nExact command to reproduce", "Have I written custom code - No\r\nOS Platform and Distribution - MacOS High Sierra 10.13.4, iOS 11.3 on iPhone\r\nTensorFlow installed from - git clone https://github.com/tensorflow/tensorflow\r\nTensorFlow version - 1.7.0\r\nBazel version - NA\r\nCUDA/cuDNN version - NA\r\nGPU model and memory - NA\r\nExact command to reproduce - Followed instructions at  https://www.tensorflow.org/mobile/tflite/demo_ios ", "Same issue.\r\n\r\nHave I written custom code - No\r\nOS Platform and Distribution - MacOS High Sierra 10.13.0, iOS 11.0.1 on iPhone 6s\r\nTensorFlow installed from - git clone https://github.com/tensorflow/tensorflow\r\nTensorFlow version - 1.7.0\r\nBazel version - NA\r\nCUDA/cuDNN version - NA\r\nGPU model and memory - NA\r\nExact command to reproduce - Followed instructions at https://github.com/tensorflow/tensorflow/blob/master/tensorflow/docs_src/mobile/tflite/demo_ios.md", "Same issue here. \r\nHave I written custom code - No\r\nOS Platform and Distribution - MacOS High Sierra 10.13.4, iOS 11.3.0 on iPhone X\r\nTensorFlow installed from - git clone https://github.com/tensorflow/tensorflow\r\nTensorFlow version - 1.7.0\r\nBazel version - NA\r\nCUDA/cuDNN version - NA\r\nGPU model and memory - NA\r\nExact command to reproduce - Followed instructions at https://github.com/tensorflow/tensorflow/blob/master/tensorflow/docs_src/mobile/tflite/demo_ios.md", "Sorry for the inconvenience. The fix is at pull request #18483. ", "The fix was already merged", "Same issue, but it does not load my own model:\r\n\r\n```\r\nnnapi error: unable to open library libneuralnetworks.so\r\nModel provided has model identifier 'Plac', should be 'TFL3'\r\n\r\n2018-07-02 12:03:14.951547+0200 Proba[8638:68521] Failed to mmap model model_tflite_graph.\r\n```\r\nWhen I run your demo tflite simple, it does work perfectly."]}, {"number": 18342, "title": "operation concat causes error when using toco converter", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:Y\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:16.04\r\n- **TensorFlow installed from (source or binary)**:source\r\n- **TensorFlow version (use command below)**:('v1.7.0-1116-g5d33c1e', '1.7.0')\r\n- **Python version**: 2.7\r\n- **Bazel version (if compiling from source)**:0.11.1\r\n- **GCC/Compiler version (if compiling from source)**:4.8.5\r\n- **CUDA/cuDNN version**:9.1/7.1\r\n- **GPU model and memory**: TITAN X (Pascal) \r\n\r\n\r\n\r\n### Describe the problem\r\n HI,I am trying to quantize ssd_mobilenet_v1 using tensorflow object detection api.First,I replace all the graph_hook_fn with tf.contrib.quantize.create_training_graph and enable fused batch norm in https://github.com/tensorflow/models/blob/b6bcc450b981eba721ee2760c92d87da86900988/research/object_detection/models/ssd_mobilenet_v1_feature_extractor.py#L114. After training, I manage to get the mobilenet_ssd.tflite with the commands below.Then,I deploy the tflite model file in  a SAMSUNG GALAXY Note 8 but failed with the following exception,which happens in:\r\nhttps://github.com/tensorflow/tensorflow/blob/3e0fd55ccec1f8ac5ca7d11f9999a16871a9198c/tensorflow/contrib/lite/java/src/main/native/nativeinterpreterwrapper_jni.cc#L410-L419\r\n\r\n>     java.lang.RuntimeException: java.lang.NullPointerException: Can not allocate memory for the interpreter at org.tensorflow.demo.TFLiteObjectDetectionAPIModel.create(TFLiteObjectDetectionAPIModel.java:181)\r\n        at org.tensorflow.demo.DetectorActivity.onPreviewSizeChosen(DetectorActivity.java:109)\r\n        at org.tensorflow.demo.CameraActivity.onPreviewFrame(CameraActivity.java:119)\r\n        at android.hardware.Camera$EventHandler.handleMessage(Camera.java:1162)\r\n        at android.os.Handler.dispatchMessage(Handler.java:102)\r\n        at android.os.Looper.loop(Looper.java:135)\r\n        at android.app.ActivityThread.main(ActivityThread.java:5232)\r\n        at java.lang.reflect.Method.invoke(Native Method)\r\n        at java.lang.reflect.Method.invoke(Method.java:372)\r\n        at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:904)\r\n        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:699)\r\n     Caused by: java.lang.NullPointerException: Can not allocate memory for the interpreter\r\n        at org.tensorflow.lite.NativeInterpreterWrapper.createInterpreter(Native Method)\r\n        at org.tensorflow.lite.NativeInterpreterWrapper.<init>(NativeInterpreterWrapper.java:50)\r\n        at org.tensorflow.lite.Interpreter.<init>(Interpreter.java:77)\r\n        at org.tensorflow.demo.TFLiteObjectDetectionAPIModel.create(TFLiteObjectDetectionAPIModel.java:179)\r\n        at org.tensorflow.demo.DetectorActivity.onPreviewSizeChosen(DetectorActivity.java:109)\u00a0\r\n        at org.tensorflow.demo.CameraActivity.onPreviewFrame(CameraActivity.java:119)\u00a0\r\n        at android.hardware.Camera$EventHandler.handleMessage(Camera.java:1162)\u00a0\r\n        at android.os.Handler.dispatchMessage(Handler.java:102)\u00a0\r\n        at android.os.Looper.loop(Looper.java:135)\u00a0\r\n        at android.app.ActivityThread.main(ActivityThread.java:5232)\u00a0\r\n        at java.lang.reflect.Method.invoke(Native Method)\u00a0\r\n        at java.lang.reflect.Method.invoke(Method.java:372)\u00a0\r\n        at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:904)\u00a0\r\n        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:699)\u00a0\r\n\r\nWhen I convert .tflite back to .pb format and check the inference graph in tensorboard,I find some relu6_unfused nodes are not quantized properly.What is the problem?\r\n**Before toco convert** \r\n![before](https://user-images.githubusercontent.com/37242917/38499663-e9870b50-3c3a-11e8-9993-431b392f3104.png)\r\n\r\n**After toco convert** \r\n![relu](https://user-images.githubusercontent.com/37242917/38499487-4c8a5212-3c3a-11e8-99d9-a7ad4910257d.png)\r\n![screenshot from 2018-04-10 10-51-35](https://user-images.githubusercontent.com/37242917/38533796-71355b52-3cad-11e8-91fa-66e0845de5bc.png)\r\n\r\nBy the way,if I use \"dummy-quantization\" to try out quantized inference on a float graph,the tflite model works fine in android,and the structure of Graph in GraphViz Dot format  just looks the same as  my quantized version.\r\n \r\n### Source code / logs\r\n\r\n>  #Strip out problematic nodes before even letting TOCO see the graphdef\r\nbazel run -c opt tensorflow/python/tools/optimize_for_inference -- \\\r\n--input=$DETECT_PB  --output=$STRIPPED_PB --frozen_graph=True \\\r\n--input_names=Preprocessor/sub --output_names=concat,concat_1 \\\r\n--alsologtostderr\r\n\r\n \r\n\r\n> #Run TOCO conversion.\r\nIMAGE_SIZE=300\r\nbazel run tensorflow/contrib/lite/toco:toco -- \\\r\n  --input_file=$STRIPPED_PB \\\r\n  --output_file=$DETECT_FB \\\r\n  --input_format=TENSORFLOW_GRAPHDEF \\\r\n  --output_format=TFLITE \\\r\n  --input_shapes=1,${IMAGE_SIZE},${IMAGE_SIZE},3 \\\r\n  --input_arrays=Preprocessor/sub \\\r\n  --output_arrays=concat,concat_1 \\\r\n  --inference_type=QUANTIZED_UINT8 \\\r\n  --mean_values=128 \\\r\n  --std_values=127 \\\r\n  --dump_graphviz=/tmp\r\n\r\n\r\n", "comments": ["Thank you for your post. We noticed you have not filled out the following field in the issue template. Could you update them if they are relevant in your case, or leave them as N/A? Thanks.\nExact command to reproduce", "Passing to @andrewharp for further triage.  I can't tell who maintains these models, if anyone.", "Hi, @coutner , \r\nI used your steps  to quantize the  ssd_mobilenet_v1, but I had not succeeded in getting the .tflite model.\r\nThere are the following errors:\r\n1. when running optimize_for_inference, some warning had arisen. \r\n```\r\n$ bazel run -c opt tensorflow/python/tools/optimize_for_inference -- \\\r\n>     --input=$DETECT_PB --output=$STRIPPED_PB --frozen_graph=True \\\r\n>     --input_names=Preprocessor/sub --output_names=concat,concat_1 \\\r\n>     --toco_compatible=True \\\r\n>     --alsologtostderr\r\nWARNING:tensorflow:Didn't find expected Conv2D input to 'FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_1_depthwise/BatchNorm/FusedBatchNorm'\r\nWARNING:tensorflow:Didn't find expected Conv2D input to 'FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_2_depthwise/BatchNorm/FusedBatchNorm'\r\nWARNING:tensorflow:Didn't find expected Conv2D input to 'FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_3_depthwise/BatchNorm/FusedBatchNorm'\r\nWARNING:tensorflow:Didn't find expected Conv2D input to 'FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_4_depthwise/BatchNorm/FusedBatchNorm'\r\nWARNING:tensorflow:Didn't find expected Conv2D input to 'FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_5_depthwise/BatchNorm/FusedBatchNorm'\r\nWARNING:tensorflow:Didn't find expected Conv2D input to 'FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_6_depthwise/BatchNorm/FusedBatchNorm'\r\nWARNING:tensorflow:Didn't find expected Conv2D input to 'FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_7_depthwise/BatchNorm/FusedBatchNorm'\r\nWARNING:tensorflow:Didn't find expected Conv2D input to 'FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_8_depthwise/BatchNorm/FusedBatchNorm'\r\nWARNING:tensorflow:Didn't find expected Conv2D input to 'FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_9_depthwise/BatchNorm/FusedBatchNorm'\r\nWARNING:tensorflow:Didn't find expected Conv2D input to 'FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_10_depthwise/BatchNorm/FusedBatchNorm'\r\nWARNING:tensorflow:Didn't find expected Conv2D input to 'FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_11_depthwise/BatchNorm/FusedBatchNorm'\r\nWARNING:tensorflow:Didn't find expected Conv2D input to 'FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_12_depthwise/BatchNorm/FusedBatchNorm'\r\nWARNING:tensorflow:Didn't find expected Conv2D input to 'FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_13_depthwise/BatchNorm/FusedBatchNorm'\r\n\r\n```\r\n2. When Running toco,  \r\n```\r\n$ bazel run tensorflow/contrib/lite/toco:toco -- \r\n>   --input_file=$STRIPPED_PB \\\r\n>   --output_file=$DETECT_FB \\\r\n>   --input_format=TENSORFLOW_GRAPHDEF \\\r\n>   --output_format=TFLITE \\\r\n>   --inference_type=QUANTIZED_UINT8 \\\r\n>   --input_shapes=1,300,300,3 \\\r\n>   --input_arrays=Preprocessor/sub \\\r\n>   --output_arrays=concat,concat_1 \\\r\n>   --std_values=128 \\\r\n>   --mean_values=127 \\\r\n>   --dump_graphviz=/tmp\r\n2018-04-24 18:51:51.645315: I tensorflow/contrib/lite/toco/graph_transformations/graph_transformations.cc:39] Before Removing unused ops: 253 operators, 450 arrays (0 quantized)\r\n2018-04-24 18:51:51.686011: I tensorflow/contrib/lite/toco/graph_transformations/graph_transformations.cc:39] Before general graph transformations: 253 operators, 450 arrays (0 quantized)\r\n2018-04-24 18:51:51.774563: I tensorflow/contrib/lite/toco/graph_transformations/graph_transformations.cc:39] After general graph transformations pass 1: 62 operators, 169 arrays (1 quantized)\r\n2018-04-24 18:51:51.775525: I tensorflow/contrib/lite/toco/graph_transformations/graph_transformations.cc:39] Before pre-quantization graph transformations: 62 operators, 169 arrays (1 quantized)\r\n2018-04-24 18:51:51.776094: F tensorflow/contrib/lite/toco/tooling_util.cc:1464] Array FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_0/Relu6, which is an input to the DepthwiseConv operator producing the output array FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_1_depthwise/Relu6, is lacking min/max data, which is necessary for quantization. Either target a non-quantized output format, or change the input graph to contain min/max information, or pass --default_ranges_min= and --default_ranges_max= if you do not care about the accuracy of results.\r\nAborted (core dumped)\r\n```\r\nPlease help me to check!\r\n\r\nThanks!\r\n\r\n", "I think you need to check exporter.py and replace the graph_hook_fn too.\u4f60\u4e5f\u505a8bit\u561b\uff0c\u4ea4\u6d41\u4e00\u4e0b\u5457", "Hi, @coutner , \r\nThanks!\r\nI have replaced the graph_hook_fn = tf.contrib.quantize.create_eval_graph() in exporter.py.\r\nbut not graph_hook_fn = tf.contrib.quantize.create_training_graph(),  yes ?\r\n\r\n\u6211\u4eec\u52a0\u4e00\u4e0b\u5fae\u4fe1\u5427, OK?  \u6211\u7684\u5fae\u4fe1\u53f7\u662fliwg08\r\n", "Hi, @WenguoLi\r\nDo you success training a quantized model? I followed your method, but suffer a same problem."]}, {"number": 18341, "title": "Distributed Tensorflow stucks in multiple loss functions", "body": "Please go to Stack Overflow for help and support:\r\n\r\nhttps://stackoverflow.com/questions/tagged/tensorflow\r\n\r\nIf you open a GitHub issue, here is our policy:\r\n\r\n1. It must be a bug, a feature request, or a significant problem with documentation (for small docs fixes please send a PR instead).\r\n2. The form below must be filled out.\r\n3. It shouldn't be a TensorBoard issue. Those go [here](https://github.com/tensorflow/tensorboard/issues).\r\n\r\n**Here's why we have that policy**: TensorFlow developers respond to issues. We want to focus on work that benefits the whole community, e.g., fixing bugs and adding features. Support only helps individuals. GitHub also notifies thousands of people when issues are filed. We want them to see you communicating an interesting problem, rather than being redirected to Stack Overflow.\r\n\r\n------------------------\r\n\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:\r\nYes, I have implemented the code based on the official Distributed Tensorflow example and my non-distributed implementation\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:\r\nWindows 10\r\n- **TensorFlow installed from (source or binary)**:\r\nbinary, using \"pip install tensorflow-gpu\"\r\n- **TensorFlow version (use command below)**:\r\nTensorflow-GPU 1.7\r\n- **Python version**: \r\n3.6\r\n- **Bazel version (if compiling from source)**:\r\n- **GCC/Compiler version (if compiling from source)**:\r\n- **CUDA/cuDNN version**:\r\nCUDA_9.0.176 / cudnn-9.0\r\n- **GPU model and memory**:\r\n2X NVIDIA GeForce GTX 980 Ti / 6GB\r\n- **Exact command to reproduce**:\r\nsee the description of the problem\r\n\r\nYou can collect some of this information using our environment capture script:\r\n\r\nhttps://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh\r\n\r\nYou can obtain the TensorFlow version with\r\n\r\npython -c \"import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)\"\r\n\r\n### Describe the problem\r\nI am implementing our distributed-application based on the official example. We were using between-graph replication and synchronous training (tf.train.SyncReplicasOptimizer\r\n). The model we trained is a variational autoencoder plus GAN. In each iteration, it updates the coefficients with two loss functions -- one for the generator and one for the discriminator. The first loss function for the generator runs well, but the second one for the discriminator doesn't return. I tried swapping the loss functions, but the second one still stucks. \r\nI tried using the asynchronous training, this works. But I prefer the synchronous training which seems perform better in terms of throughput.\r\n\r\n### Source code / logs\r\nInclude any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached. Try to provide a reproducible test case that is the bare minimum necessary to generate the problem.\r\n", "comments": ["Is this still an issue?", "Nagging Assignee @tatatodd: It has been 14 days with no activity and this issue has an assignee. Please update the label and/or status accordingly.", "Automatically closing due to lack of recent activity. Please update the issue when new information becomes available, and we will reopen the issue. Thanks!\r\n"]}, {"number": 18340, "title": "Docs: Fix 'Unable to find source java class'", "body": "Fix error:\r\n>  Error:Execution failed for task ':compileDebugJavaWithJavac'.\r\n>  because it does not belong to any of the source dirs", "comments": []}, {"number": 18339, "title": "GPU support for macOS", "body": "Hi there, with the launch of version 10.13.4, now the macOS officially support eGPU(extend GPU). Though there does not have a official Nvidia GPU driver, users still can drive their Nvidia eGPU with the Nvidia Web Driver. So the use of CUDA and cuDNN on macOS become possible. \r\n\r\nFor now, without the official GPU-support binary package, eGPU users like me have to compile from source code, which is a really nasty work. I am appreciated if there could have an official GPU-support binary package for macOS users again.\r\n\r\nConsidering the reality, the feature I mentioned above may hard to implement.  But I think a more friendly compile process would be helpful. I tried six times to compile the r1.7 branch last night and all failed. \r\n\r\nAnyway, thanks for your effort and contribution :)", "comments": ["Thank you for your post. We noticed you have not filled out the following field in the issue template. Could you update them if they are relevant in your case, or leave them as N/A? Thanks.\nHave I written custom code\nOS Platform and Distribution\nTensorFlow installed from\nTensorFlow version\nBazel version\nCUDA/cuDNN version\nGPU model and memory\nExact command to reproduce", "Sorry for the trouble\r\n\r\nHave I written custom code: No\r\nOS Platform and Distribution: macOS 10.13.3\r\nTensorFlow installed from: Source code\r\nTensorFlow version: r1.7\r\nBazel version: 0.10.0\r\nCUDA/cuDNN version: 9.1 / 7.05\r\nGPU model and memory: extended Nvidia GTX 1070 (8G memory)\r\n\r\n**Following is my build process:**\r\nExact command to reproduce:\r\nFirst, \r\n```bash\r\n$ ./configure\r\nYou have bazel 0.10.0 installed.\r\nPlease specify the location of python. [Default is /Users/shian/anaconda3/envs/tf_r17/bin/python]:\r\n\r\n\r\nFound possible Python library paths:\r\n  /Users/shian/anaconda3/envs/tf_r17/lib/python3.6/site-packages\r\nPlease input the desired Python library path to use.  Default is [/Users/shian/anaconda3/envs/tf_r17/lib/python3.6/site-packages]\r\n\r\nDo you wish to build TensorFlow with Google Cloud Platform support? [Y/n]: N\r\nNo Google Cloud Platform support will be enabled for TensorFlow.\r\n\r\nDo you wish to build TensorFlow with Hadoop File System support? [Y/n]: N\r\nNo Hadoop File System support will be enabled for TensorFlow.\r\n\r\nDo you wish to build TensorFlow with Amazon S3 File System support? [Y/n]: N\r\nNo Amazon S3 File System support will be enabled for TensorFlow.\r\n\r\nDo you wish to build TensorFlow with Apache Kafka Platform support? [y/N]: N\r\nNo Apache Kafka Platform support will be enabled for TensorFlow.\r\n\r\nDo you wish to build TensorFlow with XLA JIT support? [y/N]: N\r\nNo XLA JIT support will be enabled for TensorFlow.\r\n\r\nDo you wish to build TensorFlow with GDR support? [y/N]: N\r\nNo GDR support will be enabled for TensorFlow.\r\n\r\nDo you wish to build TensorFlow with VERBS support? [y/N]: N\r\nNo VERBS support will be enabled for TensorFlow.\r\n\r\nDo you wish to build TensorFlow with OpenCL SYCL support? [y/N]: N\r\nNo OpenCL SYCL support will be enabled for TensorFlow.\r\n\r\nDo you wish to build TensorFlow with CUDA support? [y/N]: Y\r\nCUDA support will be enabled for TensorFlow.\r\n\r\nPlease specify the CUDA SDK version you want to use, e.g. 7.0. [Leave empty to default to CUDA 9.0]: 9.1\r\n\r\n\r\nPlease specify the location where CUDA 9.1 toolkit is installed. Refer to README.md for more details. [Default is /usr/local/cuda]:\r\n\r\n\r\nPlease specify the cuDNN version you want to use. [Leave empty to default to cuDNN 7.0]: 7.0.5\r\n\r\n\r\nPlease specify the location where cuDNN 7 library is installed. Refer to README.md for more details. [Default is /usr/local/cuda]:\r\n\r\n\r\nPlease specify a list of comma-separated Cuda compute capabilities you want to build with.\r\nYou can find the compute capability of your device at: https://developer.nvidia.com/cuda-gpus.\r\nPlease note that each additional compute capability significantly increases your build time and binary size. [Default is: 3.5,5.2]6.1\r\n\r\n\r\nDo you want to use clang as CUDA compiler? [y/N]: N\r\nnvcc will be used as CUDA compiler.\r\n\r\nPlease specify which gcc should be used by nvcc as the host compiler. [Default is /usr/bin/gcc]:\r\n\r\n\r\nDo you wish to build TensorFlow with MPI support? [y/N]: N\r\nNo MPI support will be enabled for TensorFlow.\r\n\r\nPlease specify optimization flags to use during compilation when bazel option \"--config=opt\" is specified [Default is -march=native]:\r\n\r\n\r\nWould you like to interactively configure ./WORKSPACE for Android builds? [y/N]: N\r\nNot configuring the WORKSPACE for Android builds.\r\n\r\nPreconfigured Bazel build configs. You can use any of the below by adding \"--config=<>\" to your build command. See tools/bazel.rc for more details.\r\n\t--config=mkl         \t# Build with MKL support.\r\n\t--config=monolithic  \t# Config for mostly static monolithic build.\r\nConfiguration finished\r\n```\r\n**I disable all support options, but leave CUDA support enabled.**\r\n\r\nThen, build\r\n```bash\r\n$ bazel build --config=opt --config=cuda //tensorflow/tools/pip_package:build_pip_package \r\n```\r\nFollowing is the ERROR info:\r\n```bash\r\nINFO: From Linking tensorflow/libtensorflow_framework.so [for host]:\r\nclang: warning: argument unused during compilation: '-pthread' [-Wunused-command-line-argument]\r\nINFO: From Linking tensorflow/python/gen_spectral_ops_py_wrappers_cc [for host]:\r\nclang: warning: argument unused during compilation: '-pthread' [-Wunused-command-line-argument]\r\nERROR: /Users/shian/tf_r17/tensorflow/tensorflow/python/BUILD:1531:1: Executing genrule //tensorflow/python:spectral_ops_pygenrule failed (Aborted): bash failed: error executing command\r\n  (cd /private/var/tmp/_bazel_shian/0eba6f6098a6503a904b53a8d6ef75da/execroot/org_tensorflow && \\\r\n  exec env - \\\r\n    CUDA_TOOLKIT_PATH=/usr/local/cuda \\\r\n    CUDNN_INSTALL_PATH=/usr/local/cuda \\\r\n    GCC_HOST_COMPILER_PATH=/usr/bin/gcc \\\r\n    PATH='/usr/local/cuda/lib:/usr/local/cuda/extras/CUPTI/lib:/Users/shian/anaconda3/envs/tf_r17/bin:/Users/shian/Downloads/google-cloud INFO: From Linking tensorflow/libtensorflow_framework.so [for host]:\r\nclang: warning: argument unused during compilation: '-pthread' [-Wunused-command-line-argument]\r\nINFO: From Linking tensorflow/python/gen_spectral_ops_py_wrappers_cc [for host]:\r\nclang: warning: argument unused during compilation: '-pthread' [-Wunused-command-line-argument]\r\nERROR: /Users/shian/tf_r17/tensorflow/tensorflow/python/BUILD:1531:1: Executing genrule //tensorflow/python:spectral_ops_pygenrule failed (Aborted): bash failed: error executing command\r\n  (cd /private/var/tmp/_bazel_shian/0eba6f6098a6503a904b53a8d6ef75da/execroot/org_tensorflow && \\\r\n  exec env - \\\r\n    CUDA_TOOLKIT_PATH=/usr/local/cuda \\\r\n    CUDNN_INSTALL_PATH=/usr/local/cuda \\\r\n    GCC_HOST_COMPILER_PATH=/usr/bin/gcc \\\r\n    PATH='/usr/local/cuda/lib:/usr/local/cuda/extras/CUPTI/lib:/Users/shian/anaconda3/envs/tf_r17/bin:/Users/shian/Downloads/google-cloud-sdk/bin:/Library/Frameworks/Python.framework/Versions/3.6/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Applications/VMware Fusion.app/Contents/Public:/Library/TeX/texbin:/usr/local/share/dotnet:/Library/Frameworks/Mono.framework/Versions/Current/Commands:/Applications/Xamarin Workbooks.app/Contents/SharedSupport/path-bin:/Users/shian/anaconda3/bin:/usr/bin:/bin:/usr/sbin:/sbin' \\\r\n    PYTHON_BIN_PATH=/Users/shian/anaconda3/envs/tf_r17/bin/python \\\r\n    PYTHON_LIB_PATH=/Users/shian/anaconda3/envs/tf_r17/lib/python3.6/site-packages \\\r\n    TF_CUDA_CLANG=0 \\\r\n    TF_CUDA_COMPUTE_CAPABILITIES=6.1 \\\r\n    TF_CUDA_VERSION=9.1 \\\r\n    TF_CUDNN_VERSION=7 \\\r\n    TF_NEED_CUDA=1 \\\r\n    TF_NEED_OPENCL_SYCL=0 \\\r\n  /bin/bash bazel-out/darwin-py3-opt/genfiles/tensorflow/python/spectral_ops_pygenrule.genrule_script.sh): bash failed: error executing command\r\n  (cd /private/var/tmp/_bazel_shian/0eba6f6098a6503a904b53a8d6ef75da/execroot/org_tensorflow && \\\r\n  exec env - \\\r\n    CUDA_TOOLKIT_PATH=/usr/local/cuda \\\r\n    CUDNN_INSTALL_PATH=/usr/local/cuda \\\r\n    GCC_HOST_COMPILER_PATH=/usr/bin/gcc \\\r\n    PATH='/usr/local/cuda/lib:/usr/local/cuda/extras/CUPTI/lib:/Users/shian/anaconda3/envs/tf_r17/bin:/Users/shian/Downloads/google-cloud-sdk/bin:/Library/Frameworks/Python.framework/Versions/3.6/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Applications/VMware Fusion.app/Contents/Public:/Library/TeX/texbin:/usr/local/share/dotnet:/Library/Frameworks/Mono.framework/Versions/Current/Commands:/Applications/Xamarin Workbooks.app/Contents/SharedSupport/path-bin:/Users/shian/anaconda3/bin:/usr/bin:/bin:/usr/sbin:/sbin' \\\r\n    PYTHON_BIN_PATH=/Users/shian/anaconda3/envs/tf_r17/bin/python \\\r\n    PYTHON_LIB_PATH=/Users/shian/anaconda3/envs/tf_r17/lib/python3.6/site-packages \\\r\n    TF_CUDA_CLANG=0 \\\r\n    TF_CUDA_COMPUTE_CAPABILITIES=6.1 \\\r\n    TF_CUDA_VERSION=9.1 \\\r\n    TF_CUDNN_VERSION=7 \\\r\n    TF_NEED_CUDA=1 \\\r\n    TF_NEED_OPENCL_SYCL=0 \\\r\n  /bin/bash bazel-out/darwin-py3-opt/genfiles/tensorflow/python/spectral_ops_pygenrule.genrule_script.sh)\r\ndyld: Library not loaded: @rpath/libcudart.9.1.dylib\r\n  Referenced from: /private/var/tmp/_bazel_shian/0eba6f6098a6503a904b53a8d6ef75da/execroot/org_tensorflow/bazel-out/host/bin/tensorflow/python/gen_spectral_ops_py_wrappers_cc\r\n  Reason: image not found\r\nbazel-out/darwin-py3-opt/genfiles/tensorflow/python/spectral_ops_pygenrule.genrule_script.sh: line 2: 34910 Abort trap: 6           bazel-out/host/bin/tensorflow/python/gen_spectral_ops_py_wrappers_cc $(dirname $(echo tensorflow/core/api_def/base_api/api_def_Abort.pbtxt tensorflow/core/api_def/base_api/api_def_Abs.pbtxt tensorflow/core/api_def/base_api/api_def_AccumulateNV2.pbtxt tensorflow/core/api_def/base_api/api_def_AccumulatorApplyGradient.pbtxt tensorflow/core/api_def/base_api/api_def_AccumulatorNumAccumulated.pbtxt tensorflow/core/api_def/base_api/api_def_AccumulatorSetGlobalStep.pbtxt tensorflow/core/api_def/base_api/api_def_AccumulatorTakeGradient.pbtxt tensorflow/core/api_def/base_api/api_def_Acos.pbtxt tensorflow/core/api_def/base_api/api_def_Acosh.pbtxt tensorflow/core/api_def/base_api/api_def_Add.pbtxt tensorflow/core/api_def/base_api/api_def_AddManySparseToTensorsMap.pbtxt tensorflow/core/api_def/base_api/api_def_AddN.pbtxt tensorflow/core/api_def/base_api/api_def_AddSparseToTensorsMap.pbtxt tensorflow/core/api_def/base_api/api_def_AddV2.pbtxt tensorflow/core/api_def/base_api/api_def_AdjustContrast.pbtxt tensorflow/core/api_def/base_api/api_def_AdjustContrastv2.pbtxt tensorflow/core/api_def/base_api/api_def_AdjustHue.pbtxt tensorflow/core/api_def/base_api/api_def_AdjustSaturation.pbtxt tensorflow/core/api_def/base_api/api_def_All.pbtxt tensorflow/core/api_def/base_api/api_def_AllCandidateSampler.pbtxt tensorflow/core/api_def/base_api/api_def_Angle.pbtxt tensorflow/core/api_def/base_api/api_def_Any.pbtxt tensorflow/core/api_def/base_api/api_def_ApplyAdadelta.pbtxt tensorflow/core/api_def/base_api/api_def_ApplyAdagrad.pbtxt tensorflow/core/api_def/base_api/api_def_ApplyAdagradDA.pbtxt tensorflow/core/api_def/base_api/api_def_ApplyAdam.pbtxt tensorflow/core/api_def/base_api/api_def_ApplyAddSign.pbtxt tensorflow/core/api_def/base_api/api_def_ApplyCenteredRMSProp.pbtxt tensorflow/core/api_def/base_api/api_def_ApplyFtrl.pbtxt tensorflow/core/api_def/base_api/api_def_ApplyFtrlV2.pbtxt tensorflow/core/api_def/base_api/api_def_ApplyGradientDescent.pbtxt tensorflow/core/api_def/base_api/api_def_ApplyMomentum.pbtxt tensorflow/core/api_def/base_api/api_def_ApplyPowerSign.pbtxt tensorflow/core/api_def/base_api/api_def_ApplyProximalAdagrad.pbtxt tensorflow/core/api_def/base_api/api_def_ApplyProximalGradientDescent.pbtxt tensorflow/core/api_def/base_api/api_def_ApplyRMSProp.pbtxt tensorflow/core/api_def/base_api/api_def_ApproximateEqual.pbtxt tensorflow/core/api_def/base_api/api_def_ArgMax.pbtxt tensorflow/core/api_def/base_api/api_def_ArgMin.pbtxt tensorflow/core/api_def/base_api/api_def_AsString.pbtxt tensorflow/core/api_def/base_api/api_def_Asin.pbtxt tensorflow/core/api_def/base_api/api_def_Asinh.pbtxt tensorflow/core/api_def/base_api/api_def_Assert.pbtxt tensorflow/core/api_def/base_api/api_def_Assign.pbtxt tensorflow/core/api_def/base_api/api_def_AssignAdd.pbtxt tensorflow/core/api_def/base_api/api_def_AssignAddVariableOp.pbtxt tensorflow/core/api_def/base_api/api_def_AssignSub.pbtxt tensorflow/core/api_def/base_api/api_def_AssignSubVariableOp.pbtxt tensorflow/core/api_def/base_api/api_def_AssignVariableOp.pbtxt tensorflow/core/api_def/base_api/api_def_Atan.pbtxt tensorflow/core/api_def/base_api/api_def_Atan2.pbtxt tensorflow/core/api_def/base_api/api_def_Atanh.pbtxt tensorflow/core/api_def/base_api/api_def_AudioSpectrogram.pbtxt tensorflow/core/api_def/base_api/api_def_AudioSummary.pbtxt tensorflow/core/api_def/base_api/api_def_AudioSummaryV2.pbtxt tensorflow/core/api_def/base_api/api_def_AvgPool.pbtxt tensorflow/core/api_def/base_api/api_def_AvgPool3D.pbtxt tensorflow/core/api_def/base_api/api_def_AvgPool3DGrad.pbtxt tensorflow/core/api_def/base_api/api_def_AvgPoolGrad.pbtxt tensorflow/core/api_def/base_api/api_def_Barrier.pbtxt tensorflow/core/api_def/base_api/api_def_BarrierClose.pbtxt tensorflow/core/api_def/base_api/api_def_BarrierIncompleteSize.pbtxt tensorflow/core/api_def/base_api/api_def_BarrierInsertMany.pbtxt tensorflow/core/api_def/base_api/api_def_BarrierReadySize.pbtxt tensorflow/core/api_def/base_api/api_def_BarrierTakeMany.pbtxt tensorflow/core/api_def/base_api/api_def_Batch.pbtxt tensorflow/core/api_def/base_api/api_def_BatchCholesky.pbtxt tensorflow/core/api_def/base_api/api_def_BatchCholeskyGrad.pbtxt tensorflow/core/api_def/base_api/api_def_BatchDataset.pbtxt tensorflow/core/api_def/base_api/api_def_BatchFFT.pbtxt tensorflow/core/api_def/base_api/api_def_BatchFFT2D.pbtxt tensorflow/core/api_def/base_api/api_def_BatchFFT3D.pbtxt tensorflow/core/api_def/base_api/api_def_BatchIFFT.pbtxt tensorflow/core/api_def/base_api/api_def_BatchIFFT2D.pbtxt tensorflow/core/api_def/base_api/api_def_BatchIFFT3D.pbtxt tensorflow/core/api_def/base_api/api_def_BatchMatMul.pbtxt tensorflow/core/api_def/base_api/api_def_BatchMatrixBandPart.pbtxt tensorflow/core/api_def/base_api/api_def_BatchMatrixDeterminant.pbtxt tensorflow/core/api_def/base_api/api_def_BatchMatrixDiag.pbtxt tensorflow/core/api_def/base_api/api_def_BatchMatrixDiagPart.pbtxt tensorflow/core/api_def/base_api/api_def_BatchMatrixInverse.pbtxt tensorflow/core/api_def/base_api/api_def_BatchMatrixSetDiag.pbtxt tensorflow/core/api_def/base_api/api_def_BatchMatrixSolve.pbtxt tensorflow/core/api_def/base_api/api_def_BatchMatrixSolveLs.pbtxt tensorflow/core/api_def/base_api/api_def_BatchMatrixTriangularSolve.pbtxt tensorflow/core/api_def/base_api/api_def_BatchNormWithGlobalNormalization.pbtxt tensorflow/core/api_def/base_api/api_def_BatchNormWithGlobalNormalizationGrad.pbtxt tensorflow/core/api_def/base_api/api_def_BatchSelfAdjointEig.pbtxt tensorflow/core/api_def/base_api/api_def_BatchSelfAdjointEigV2.pbtxt tensorflow/core/api_def/base_api/api_def_BatchSvd.pbtxt tensorflow/core/api_def/base_api/api_def_BatchToSpace.pbtxt tensorflow/core/api_def/base_api/api_def_BatchToSpaceND.pbtxt tensorflow/core/api_def/base_api/api_def_Betainc.pbtxt tensorflow/core/api_def/base_api/api_def_BiasAdd.pbtxt tensorflow/core/api_def/base_api/api_def_BiasAddGrad.pbtxt tensorflow/core/api_def/base_api/api_def_BiasAddV1.pbtxt tensorflow/core/api_def/base_api/api_def_Bincount.pbtxt tensorflow/core/api_def/base_api/api_def_Bitcast.pbtxt tensorflow/core/api_def/base_api/api_def_BitwiseAnd.pbtxt tensorflow/core/api_def/base_api/api_def_BitwiseOr.pbtxt tensorflow/core/api_def/base_api/api_def_BitwiseXor.pbtxt tensorflow/core/api_def/base_api/api_def_BroadcastArgs.pbtxt tensorflow/core/api_def/base_api/api_def_BroadcastGradientArgs.pbtxt tensorflow/core/api_def/base_api/api_def_Bucketize.pbtxt tensorflow/core/api_def/base_api/api_def_BytesProducedStatsDataset.pbtxt tensorflow/core/api_def/base_api/api_def_CTCBeamSearchDecoder.pbtxt tensorflow/core/api_def/base_api/api_def_CTCGreedyDecoder.pbtxt tensorflow/core/api_def/base_api/api_def_CTCLoss.pbtxt tensorflow/core/api_def/base_api/api_def_CacheDataset.pbtxt tensorflow/core/api_def/base_api/api_def_Cast.pbtxt tensorflow/core/api_def/base_api/api_def_Ceil.pbtxt tensorflow/core/api_def/base_api/api_def_CheckNumerics.pbtxt tensorflow/core/api_def/base_api/api_def_Cholesky.pbtxt tensorflow/core/api_def/base_api/api_def_CholeskyGrad.pbtxt tensorflow/core/api_def/base_api/api_def_CompareAndBitpack.pbtxt tensorflow/core/api_def/base_api/api_def_Complex.pbtxt tensorflow/core/api_def/base_api/api_def_ComplexAbs.pbtxt tensorflow/core/api_def/base_api/api_def_ComputeAccidentalHits.pbtxt tensorflow/core/api_def/base_api/api_def_Concat.pbtxt tensorflow/core/api_def/base_api/api_def_ConcatOffset.pbtxt tensorflow/core/api_def/base_api/api_def_ConcatV2.pbtxt tensorflow/core/api_def/base_api/api_def_ConcatenateDataset.pbtxt tensorflow/core/api_def/base_api/api_def_ConditionalAccumulator.pbtxt tensorflow/core/api_def/base_api/api_def_Conj.pbtxt tensorflow/core/api_def/base_api/api_def_ConjugateTranspose.pbtxt tensorflow/core/api_def/base_api/api_def_Const.pbtxt tensorflow/core/api_def/base_api/api_def_ConsumeMutexLock.pbtxt tensorflow/core/api_def/base_api/api_def_ControlTrigger.pbtxt tensorflow/core/api_def/base_api/api_def_Conv2D.pbtxt tensorflow/core/api_def/base_api/api_def_Conv2DBackpropFilter.pbtxt tensorflow/core/api_def/base_api/api_def_Conv2DBackpropInput.pbtxt tensorflow/core/api_def/base_api/api_def_Conv3D.pbtxt tensorflow/core/api_def/base_api/api_def_Conv3DBackpropFilter.pbtxt tensorflow/core/api_def/base_api/api_def_Conv3DBackpropFilterV2.pbtxt tensorflow/core/api_def/base_api/api_def_Conv3DBackpropInput.pbtxt tensorflow/core/api_def/base_api/api_def_Conv3DBackpropInputV2.pbtxt tensorflow/core/api_def/base_api/api_def_Cos.pbtxt tensorflow/core/api_def/base_api/api_def_Cosh.pbtxt tensorflow/core/api_def/base_api/api_def_CountUpTo.pbtxt tensorflow/core/api_def/base_api/api_def_CropAndResize.pbtxt tensorflow/core/api_def/base_api/api_def_CropAndResizeGradBoxes.pbtxt tensorflow/core/api_def/base_api/api_def_CropAndResizeGradImage.pbtxt tensorflow/core/api_def/base_api/api_def_Cross.pbtxt tensorflow/core/api_def/base_api/api_def_Cumprod.pbtxt tensorflow/core/api_def/base_api/api_def_Cumsum.pbtxt tensorflow/core/api_def/base_api/api_def_DataFormatDimMap.pbtxt tensorflow/core/api_def/base_api/api_def_DataFormatVecPermute.pbtxt tensorflow/core/api_def/base_api/api_def_DatasetToSingleElement.pbtxt tensorflow/core/api_def/base_api/api_def_DebugGradientIdentity.pbtxt tensorflow/core/api_def/base_api/api_def_DebugGradientRefIdentity.pbtxt tensorflow/core/api_def/base_api/api_def_DecodeAndCropJpeg.pbtxt tensorflow/core/api_def/base_api/api_def_DecodeBase64.pbtxt tensorflow/core/api_def/base_api/api_def_DecodeBmp.pbtxt tensorflow/core/api_def/base_api/api_def_DecodeCSV.pbtxt tensorflow/core/api_def/base_api/api_def_DecodeCompressed.pbtxt tensorflow/core/api_def/base_api/api_def_DecodeGif.pbtxt tensorflow/core/api_def/base_api/api_def_DecodeJSONExample.pbtxt tensorflow/core/api_def/base_api/api_def_DecodeJpeg.pbtxt tensorflow/core/api_def/base_api/api_def_DecodePng.pbtxt tensorflow/core/api_def/base_api/api_def_DecodeRaw.pbtxt tensorflow/core/api_def/base_api/api_def_DecodeWav.pbtxt tensorflow/core/api_def/base_api/api_def_DeleteSessionTensor.pbtxt tensorflow/core/api_def/base_api/api_def_DenseToDenseSetOperation.pbtxt tensorflow/core/api_def/base_api/api_def_DenseToSparseBatchDataset.pbtxt tensorflow/core/api_def/base_api/api_def_DenseToSparseSetOperation.pbtxt tensorflow/core/api_def/base_api/api_def_DepthToSpace.pbtxt tensorflow/core/api_def/base_api/api_def_DepthwiseConv2dNative.pbtxt tensorflow/core/api_def/base_api/api_def_DepthwiseConv2dNativeBackpropFilter.pbtxt tensorflow/core/api_def/base_api/api_def_DepthwiseConv2dNativeBackpropInput.pbtxt tensorflow/core/api_def/base_api/api_def_Dequantize.pbtxt tensorflow/core/api_def/base_api/api_def_DeserializeIterator.pbtxt tensorflow/core/api_def/base_api/api_def_DeserializeManySparse.pbtxt tensorflow/core/api_def/base_api/api_def_DeserializeSparse.pbtxt tensorflow/core/api_def/base_api/api_def_DestroyResourceOp.pbtxt tensorflow/core/api_def/base_api/api_def_DestroyTemporaryVariable.pbtxt tensorflow/core/api_def/base_api/api_def_Diag.pbtxt tensorflow/core/api_def/base_api/api_def_DiagPart.pbtxt tensorflow/core/api_def/base_api/api_def_Digamma.pbtxt tensorflow/core/api_def/base_api/api_def_Dilation2D.pbtxt tensorflow/core/api_def/base_api/api_def_Dilation2DBackpropFilter.pbtxt tensorflow/core/api_def/base_api/api_def_Dilation2DBackpropInput.pbtxt tensorflow/core/api_def/base_api/api_def_Div.pbtxt tensorflow/core/api_def/base_api/api_def_DrawBoundingBoxes.pbtxt tensorflow/core/api_def/base_api/api_def_DynamicPartition.pbtxt tensorflow/core/api_def/base_api/api_def_DynamicStitch.pbtxt tensorflow/core/api_def/base_api/api_def_EagerPyFunc.pbtxt tensorflow/core/api_def/base_api/api_def_EditDistance.pbtxt tensorflow/core/api_def/base_api/api_def_Elu.pbtxt tensorflow/core/api_def/base_api/api_def_EluGrad.pbtxt tensorflow/core/api_def/base_api/api_def_EmptyTensorList.pbtxt tensorflow/core/api_def/base_api/api_def_EncodeBase64.pbtxt tensorflow/core/api_def/base_api/api_def_EncodeJpeg.pbtxt tensorflow/core/api_def/base_api/api_def_EncodePng.pbtxt tensorflow/core/api_def/base_api/api_def_EncodeWav.pbtxt tensorflow/core/api_def/base_api/api_def_EnqueueInQueueDataset.pbtxt tensorflow/core/api_def/base_api/api_def_Enter.pbtxt tensorflow/core/api_def/base_api/api_def_Equal.pbtxt tensorflow/core/api_def/base_api/api_def_Erf.pbtxt tensorflow/core/api_def/base_api/api_def_Erfc.pbtxt tensorflow/core/api_def/base_api/api_def_Exit.pbtxt tensorflow/core/api_def/base_api/api_def_Exp.pbtxt tensorflow/core/api_def/base_api/api_def_ExpandDims.pbtxt tensorflow/core/api_def/base_api/api_def_Expm1.pbtxt tensorflow/core/api_def/base_api/api_def_ExtractGlimpse.pbtxt tensorflow/core/api_def/base_api/api_def_ExtractImagePatches.pbtxt tensorflow/core/api_def/base_api/api_def_ExtractJpegShape.pbtxt tensorflow/core/api_def/base_api/api_def_FFT.pbtxt tensorflow/core/api_def/base_api/api_def_FFT2D.pbtxt tensorflow/core/api_def/base_api/api_def_FFT3D.pbtxt tensorflow/core/api_def/base_api/api_def_FIFOQueue.pbtxt tensorflow/core/api_def/base_api/api_def_FIFOQueueV2.pbtxt tensorflow/core/api_def/base_api/api_def_Fact.pbtxt tensorflow/core/api_def/base_api/api_def_FakeQuantWithMinMaxArgs.pbtxt tensorflow/core/api_def/base_api/api_def_FakeQuantWithMinMaxArgsGradient.pbtxt tensorflow/core/api_def/base_api/api_def_FakeQuantWithMinMaxVars.pbtxt tensorflow/core/api_def/base_api/api_def_FakeQuantWithMinMaxVarsGradient.pbtxt tensorflow/core/api_def/base_api/api_def_FakeQuantWithMinMaxVarsPerChannel.pbtxt tensorflow/core/api_def/base_api/api_def_FakeQuantWithMinMaxVarsPerChannelGradient.pbtxt tensorflow/core/api_def/base_api/api_def_FakeQueue.pbtxt tensorflow/core/api_def/base_api/api_def_Fill.pbtxt tensorflow/core/api_def/base_api/api_def_FilterDataset.pbtxt tensorflow/core/api_def/base_api/api_def_FixedLengthRecordDataset.pbtxt tensorflow/core/api_def/base_api/api_def_FixedLengthRecordReader.pbtxt tensorflow/core/api_def/base_api/api_def_FixedLengthRecordReaderV2.pbtxt tensorflow/core/api_def/base_api/api_def_FixedUnigramCandidateSampler.pbtxt tensorflow/core/api_def/base_api/api_def_FlatMapDataset.pbtxt tensorflow/core/api_def/base_api/api_def_Floor.pbtxt tensorflow/core/api_def/base_api/api_def_FloorDiv.pbtxt tensorflow/core/api_def/base_api/api_def_FloorMod.pbtxt tensorflow/core/api_def/base_api/api_def_FractionalAvgPool.pbtxt tensorflow/core/api_def/base_api/api_def_FractionalAvgPoolGrad.pbtxt tensorflow/core/api_def/base_api/api_def_FractionalMaxPool.pbtxt tensorflow/core/api_def/base_api/api_def_FractionalMaxPoolGrad.pbtxt tensorflow/core/api_def/base_api/api_def_FusedBatchNorm.pbtxt tensorflow/core/api_def/base_api/api_def_FusedBatchNormGrad.pbtxt tensorflow/core/api_def/base_api/api_def_FusedBatchNormGradV2.pbtxt tensorflow/core/api_def/base_api/api_def_FusedBatchNormV2.pbtxt tensorflow/core/api_def/base_api/api_def_FusedPadConv2D.pbtxt tensorflow/core/api_def/base_api/api_def_FusedResizeAndPadConv2D.pbtxt tensorflow/core/api_def/base_api/api_def_Gather.pbtxt tensorflow/core/api_def/base_api/api_def_GatherNd.pbtxt tensorflow/core/api_def/base_api/api_def_GatherV2.pbtxt tensorflow/core/api_def/base_api/api_def_GenerateVocabRemapping.pbtxt tensorflow/core/api_def/base_api/api_def_GeneratorDataset.pbtxt tensorflow/core/api_def/base_api/api_def_GetSessionHandle.pbtxt tensorflow/core/api_def/base_api/api_def_GetSessionHandleV2.pbtxt tensorflow/core/api_def/base_api/api_def_GetSessionTensor.pbtxt tensorflow/core/api_def/base_api/api_def_Greater.pbtxt tensorflow/core/api_def/base_api/api_def_GreaterEqual.pbtxt tensorflow/core/api_def/base_api/api_def_GroupByWindowDataset.pbtxt tensorflow/core/api_def/base_api/api_def_GuaranteeConst.pbtxt tensorflow/core/api_def/base_api/api_def_HSVToRGB.pbtxt tensorflow/core/api_def/base_api/api_def_HashTable.pbtxt tensorflow/core/api_def/base_api/api_def_HashTableV2.pbtxt tensorflow/core/api_def/base_api/api_def_HistogramFixedWidth.pbtxt tensorflow/core/api_def/base_api/api_def_HistogramSummary.pbtxt tensorflow/core/api_def/base_api/api_def_IFFT.pbtxt tensorflow/core/api_def/base_api/api_def_IFFT2D.pbtxt tensorflow/core/api_def/base_api/api_def_IFFT3D.pbtxt tensorflow/core/api_def/base_api/api_def_IRFFT.pbtxt tensorflow/core/api_def/base_api/api_def_IRFFT2D.pbtxt tensorflow/core/api_def/base_api/api_def_IRFFT3D.pbtxt tensorflow/core/api_def/base_api/api_def_Identity.pbtxt tensorflow/core/api_def/base_api/api_def_IdentityN.pbtxt tensorflow/core/api_def/base_api/api_def_IdentityReader.pbtxt tensorflow/core/api_def/base_api/api_def_IdentityReaderV2.pbtxt tensorflow/core/api_def/base_api/api_def_Igamma.pbtxt tensorflow/core/api_def/base_api/api_def_Igammac.pbtxt tensorflow/core/api_def/base_api/api_def_Imag.pbtxt tensorflow/core/api_def/base_api/api_def_ImageSummary.pbtxt tensorflow/core/api_def/base_api/api_def_ImmutableConst.pbtxt tensorflow/core/api_def/base_api/api_def_InTopK.pbtxt tensorflow/core/api_def/base_api/api_def_InTopKV2.pbtxt tensorflow/core/api_def/base_api/api_def_InitializeTable.pbtxt tensorflow/core/api_def/base_api/api_def_InitializeTableFromTextFile.pbtxt tensorflow/core/api_def/base_api/api_def_InitializeTableFromTextFileV2.pbtxt tensorflow/core/api_def/base_api/api_def_InitializeTableV2.pbtxt tensorflow/core/api_def/base_api/api_def_InterleaveDataset.pbtxt tensorflow/core/api_def/base_api/api_def_Inv.pbtxt tensorflow/core/api_def/base_api/api_def_InvGrad.pbtxt tensorflow/core/api_def/base_api/api_def_Invert.pbtxt tensorflow/core/api_def/base_api/api_def_InvertPermutation.pbtxt tensorflow/core/api_def/base_api/api_def_IsFinite.pbtxt tensorflow/core/api_def/base_api/api_def_IsInf.pbtxt tensorflow/core/api_def/base_api/api_def_IsNan.pbtxt tensorflow/core/api_def/base_api/api_def_IsVariableInitialized.pbtxt tensorflow/core/api_def/base_api/api_def_Iterator.pbtxt tensorflow/core/api_def/base_api/api_def_IteratorFromStringHandle.pbtxt tensorflow/core/api_def/base_api/api_def_IteratorGetNext.pbtxt tensorflow/core/api_def/base_api/api_def_IteratorGetNextSync.pbtxt tensorflow/core/api_def/base_api/api_def_IteratorSetStatsAggregator.pbtxt tensorflow/core/api_def/base_api/api_def_IteratorToStringHandle.pbtxt tensorflow/core/api_def/base_api/api_def_L2Loss.pbtxt tensorflow/core/api_def/base_api/api_def_LMDBReader.pbtxt tensorflow/core/api_def/base_api/api_def_LRN.pbtxt tensorflow/core/api_def/base_api/api_def_LRNGrad.pbtxt tensorflow/core/api_def/base_api/api_def_LatencyStatsDataset.pbtxt tensorflow/core/api_def/base_api/api_def_LearnedUnigramCandidateSampler.pbtxt tensorflow/core/api_def/base_api/api_def_LeftShift.pbtxt tensorflow/core/api_def/base_api/api_def_Less.pbtxt tensorflow/core/api_def/base_api/api_def_LessEqual.pbtxt tensorflow/core/api_def/base_api/api_def_Lgamma.pbtxt tensorflow/core/api_def/base_api/api_def_LinSpace.pbtxt tensorflow/core/api_def/base_api/api_def_ListDiff.pbtxt tensorflow/core/api_def/base_api/api_def_LoadAndRemapMatrix.pbtxt tensorflow/core/api_def/base_api/api_def_Log.pbtxt tensorflow/core/api_def/base_api/api_def_Log1p.pbtxt tensorflow/core/api_def/base_api/api_def_LogMatrixDeterminant.pbtxt tensorflow/core/api_def/base_api/api_def_LogSoftmax.pbtxt tensorflow/core/api_def/base_api/api_def_LogUniformCandidateSampler.pbtxt tensorflow/core/api_def/base_api/api_def_LogicalAnd.pbtxt tensorflow/core/api_def/base_api/api_def_LogicalNot.pbtxt tensorflow/core/api_def/base_api/api_def_LogicalOr.pbtxt tensorflow/core/api_def/base_api/api_def_LookupTableExport.pbtxt tensorflow/core/api_def/base_api/api_def_LookupTableExportV2.pbtxt tensorflow/core/api_def/base_api/api_def_LookupTableFind.pbtxt tensorflow/core/api_def/base_api/api_def_LookupTableFindV2.pbtxt tensorflow/core/api_def/base_api/api_def_LookupTableImport.pbtxt tensorflow/core/api_def/base_api/api_def_LookupTableImportV2.pbtxt tensorflow/core/api_def/base_api/api_def_LookupTableInsert.pbtxt tensorflow/core/api_def/base_api/api_def_LookupTableInsertV2.pbtxt tensorflow/core/api_def/base_api/api_def_LookupTableSize.pbtxt tensorflow/core/api_def/base_api/api_def_LookupTableSizeV2.pbtxt tensorflow/core/api_def/base_api/api_def_LoopCond.pbtxt tensorflow/core/api_def/base_api/api_def_MakeIterator.pbtxt tensorflow/core/api_def/base_api/api_def_MapAndBatchDataset.pbtxt tensorflow/core/api_def/base_api/api_def_MapClear.pbtxt tensorflow/core/api_def/base_api/api_def_MapDataset.pbtxt tensorflow/core/api_def/base_api/api_def_MapIncompleteSize.pbtxt tensorflow/core/api_def/base_api/api_def_MapPeek.pbtxt tensorflow/core/api_def/base_api/api_def_MapSize.pbtxt tensorflow/core/api_def/base_api/api_def_MapStage.pbtxt tensorflow/core/api_def/base_api/api_def_MapUnstage.pbtxt tensorflow/core/api_def/base_api/api_def_MapUnstageNoKey.pbtxt tensorflow/core/api_def/base_api/api_def_MatMul.pbtxt tensorflow/core/api_def/base_api/api_def_MatchingFiles.pbtxt tensorflow/core/api_def/base_api/api_def_MatrixBandPart.pbtxt tensorflow/core/api_def/base_api/api_def_MatrixDeterminant.pbtxt tensorflow/core/api_def/base_api/api_def_MatrixDiag.pbtxt tensorflow/core/api_def/base_api/api_def_MatrixDiagPart.pbtxt tensorflow/core/api_def/base_api/api_def_MatrixExponential.pbtxt tensorflow/core/api_def/base_api/api_def_MatrixInverse.pbtxt tensorflow/core/api_def/base_api/api_def_MatrixLogarithm.pbtxt tensorflow/core/api_def/base_api/api_def_MatrixSetDiag.pbtxt tensorflow/core/api_def/base_api/api_def_MatrixSolve.pbtxt tensorflow/core/api_def/base_api/api_def_MatrixSolveLs.pbtxt tensorflow/core/api_def/base_api/api_def_MatrixTriangularSolve.pbtxt tensorflow/core/api_def/base_api/api_def_Max.pbtxt tensorflow/core/api_def/base_api/api_def_MaxPool.pbtxt tensorflow/core/api_def/base_api/api_def_MaxPool3D.pbtxt tensorflow/core/api_def/base_api/api_def_MaxPool3DGrad.pbtxt tensorflow/core/api_def/base_api/api_def_MaxPool3DGradGrad.pbtxt tensorflow/core/api_def/base_api/api_def_MaxPoolGrad.pbtxt tensorflow/core/api_def/base_api/api_def_MaxPoolGradGrad.pbtxt tensorflow/core/api_def/base_api/api_def_MaxPoolGradGradV2.pbtxt tensorflow/core/api_def/base_api/api_def_MaxPoolGradGradWithArgmax.pbtxt tensorflow/core/api_def/base_api/api_def_MaxPoolGradV2.pbtxt tensorflow/core/api_def/base_api/api_def_MaxPoolGradWithArgmax.pbtxt tensorflow/core/api_def/base_api/api_def_MaxPoolV2.pbtxt tensorflow/core/api_def/base_api/api_def_MaxPoolWithArgmax.pbtxt tensorflow/core/api_def/base_api/api_def_Maximum.pbtxt tensorflow/core/api_def/base_api/api_def_Mean.pbtxt tensorflow/core/api_def/base_api/api_def_Merge.pbtxt tensorflow/core/api_def/base_api/api_def_MergeSummary.pbtxt tensorflow/core/api_def/base_api/api_def_MergeV2Checkpoints.pbtxt tensorflow/core/api_def/base_api/api_def_Mfcc.pbtxt tensorflow/core/api_def/base_api/api_def_Min.pbtxt tensorflow/core/api_def/base_api/api_def_Minimum.pbtxt tensorflow/core/api_def/base_api/api_def_MirrorPad.pbtxt tensorflow/core/api_def/base_api/api_def_MirrorPadGrad.pbtxt tensorflow/core/api_def/base_api/api_def_Mod.pbtxt tensorflow/core/api_def/base_api/api_def_Mul.pbtxt tensorflow/core/api_def/base_api/api_def_Multinomial.pbtxt tensorflow/core/api_def/base_api/api_def_MutableDenseHashTable.pbtxt tensorflow/core/api_def/base_api/api_def_MutableDenseHashTableV2.pbtxt tensorflow/core/api_def/base_api/api_def_MutableHashTable.pbtxt tensorflow/core/api_def/base_api/api_def_MutableHashTableOfTensors.pbtxt tensorflow/core/api_def/base_api/api_def_MutableHashTableOfTensorsV2.pbtxt tensorflow/core/api_def/base_api/api_def_MutableHashTableV2.pbtxt tensorflow/core/api_def/base_api/api_def_MutexLock.pbtxt tensorflow/core/api_def/base_api/api_def_MutexV2.pbtxt tensorflow/core/api_def/base_api/api_def_Neg.pbtxt tensorflow/core/api_def/base_api/api_def_NegTrain.pbtxt tensorflow/core/api_def/base_api/api_def_NextIteration.pbtxt tensorflow/core/api_def/base_api/api_def_NoOp.pbtxt tensorflow/core/api_def/base_api/api_def_NonMaxSuppression.pbtxt tensorflow/core/api_def/base_api/api_def_NonMaxSuppressionV2.pbtxt tensorflow/core/api_def/base_api/api_def_NotEqual.pbtxt tensorflow/core/api_def/base_api/api_def_NthElement.pbtxt tensorflow/core/api_def/base_api/api_def_OneHot.pbtxt tensorflow/core/api_def/base_api/api_def_OneShotIterator.pbtxt tensorflow/core/api_def/base_api/api_def_OnesLike.pbtxt tensorflow/core/api_def/base_api/api_def_OrderedMapClear.pbtxt tensorflow/core/api_def/base_api/api_def_OrderedMapIncompleteSize.pbtxt tensorflow/core/api_def/base_api/api_def_OrderedMapPeek.pbtxt tensorflow/core/api_def/base_api/api_def_OrderedMapSize.pbtxt tensorflow/core/api_def/base_api/api_def_OrderedMapStage.pbtxt tensorflow/core/api_def/base_api/api_def_OrderedMapUnstage.pbtxt tensorflow/core/api_def/base_api/api_def_OrderedMapUnstageNoKey.pbtxt tensorflow/core/api_def/base_api/api_def_Pack.pbtxt tensorflow/core/api_def/base_api/api_def_Pad.pbtxt tensorflow/core/api_def/base_api/api_def_PadV2.pbtxt tensorflow/core/api_def/base_api/api_def_PaddedBatchDataset.pbtxt tensorflow/core/api_def/base_api/api_def_PaddingFIFOQueue.pbtxt tensorflow/core/api_def/base_api/api_def_PaddingFIFOQueueV2.pbtxt tensorflow/core/api_def/base_api/api_def_ParallelConcat.pbtxt tensorflow/core/api_def/base_api/api_def_ParallelDynamicStitch.pbtxt tensorflow/core/api_def/base_api/api_def_ParallelInterleaveDataset.pbtxt tensorflow/core/api_def/base_api/api_def_ParallelMapDataset.pbtxt tensorflow/core/api_def/base_api/api_def_ParameterizedTruncatedNormal.pbtxt tensorflow/core/api_def/base_api/api_def_ParseExample.pbtxt tensorflow/core/api_def/base_api/api_def_ParseSingleExample.pbtxt tensorflow/core/api_def/base_api/api_def_ParseSingleSequenceExample.pbtxt tensorflow/core/api_def/base_api/api_def_ParseTensor.pbtxt tensorflow/core/api_def/base_api/api_def_Placeholder.pbtxt tensorflow/core/api_def/base_api/api_def_PlaceholderV2.pbtxt tensorflow/core/api_def/base_api/api_def_PlaceholderWithDefault.pbtxt tensorflow/core/api_def/base_api/api_def_Polygamma.pbtxt tensorflow/core/api_def/base_api/api_def_PopulationCount.pbtxt tensorflow/core/api_def/base_api/api_def_Pow.pbtxt tensorflow/core/api_def/base_api/api_def_PrefetchDataset.pbtxt tensorflow/core/api_def/base_api/api_def_PrependFromQueueAndPaddedBatchDataset.pbtxt tensorflow/core/api_def/base_api/api_def_PreventGradient.pbtxt tensorflow/core/api_def/base_api/api_def_Print.pbtxt tensorflow/core/api_def/base_api/api_def_PriorityQueue.pbtxt tensorflow/core/api_def/base_api/api_def_PriorityQueueV2.pbtxt tensorflow/core/api_def/base_api/api_def_Prod.pbtxt tensorflow/core/api_def/base_api/api_def_PyFunc.pbtxt tensorflow/core/api_def/base_api/api_def_PyFuncStateless.pbtxt tensorflow/core/api_def/base_api/api_def_Qr.pbtxt tensorflow/core/api_def/base_api/api_def_QuantizeAndDequantize.pbtxt tensorflow/core/api_def/base_api/api_def_QuantizeAndDequantizeV2.pbtxt tensorflow/core/api_def/base_api/api_def_QuantizeAndDequantizeV3.pbtxt tensorflow/core/api_def/base_api/api_def_QuantizeDownAndShrinkRange.pbtxt tensorflow/core/api_def/base_api/api_def_QuantizeV2.pbtxt tensorflow/core/api_def/base_api/api_def_QuantizedAdd.pbtxt tensorflow/core/api_def/base_api/api_def_QuantizedAvgPool.pbtxt tensorflow/core/api_def/base_api/api_def_QuantizedBatchNormWithGlobalNormalization.pbtxt tensorflow/core/api_def/base_api/api_def_QuantizedBiasAdd.pbtxt tensorflow/core/api_def/base_api/api_def_QuantizedConcat.pbtxt tensorflow/core/api_def/base_api/api_def_QuantizedConv2D.pbtxt tensorflow/core/api_def/base_api/api_def_QuantizedInstanceNorm.pbtxt tensorflow/core/api_def/base_api/api_def_QuantizedMatMul.pbtxt tensorflow/core/api_def/base_api/api_def_QuantizedMaxPool.pbtxt tensorflow/core/api_def/base_api/api_def_QuantizedMul.pbtxt tensorflow/core/api_def/base_api/api_def_QuantizedRelu.pbtxt tensorflow/core/api_def/base_api/api_def_QuantizedRelu6.pbtxt tensorflow/core/api_def/base_api/api_def_QuantizedReluX.pbtxt tensorflow/core/api_def/base_api/api_def_QuantizedReshape.pbtxt tensorflow/core/api_def/base_api/api_def_QuantizedResizeBilinear.pbtxt tensorflow/core/api_def/base_api/api_def_QueueClose.pbtxt tensorflow/core/api_def/base_api/api_def_QueueCloseV2.pbtxt tensorflow/core/api_def/base_api/api_def_QueueDequeue.pbtxt tensorflow/core/api_def/base_api/api_def_QueueDequeueMany.pbtxt tensorflow/core/api_def/base_api/api_def_QueueDequeueManyV2.pbtxt tensorflow/core/api_def/base_api/api_def_QueueDequeueUpTo.pbtxt tensorflow/core/api_def/base_api/api_def_QueueDequeueUpToV2.pbtxt tensorflow/core/api_def/base_api/api_def_QueueDequeueV2.pbtxt tensorflow/core/api_def/base_api/api_def_QueueEnqueue.pbtxt tensorflow/core/api_def/base_api/api_def_QueueEnqueueMany.pbtxt tensorflow/core/api_def/base_api/api_def_QueueEnqueueManyV2.pbtxt tensorflow/core/api_def/base_api/api_def_QueueEnqueueV2.pbtxt tensorflow/core/api_def/base_api/api_def_QueueIsClosed.pbtxt tensorflow/core/api_def/base_api/api_def_QueueIsClosedV2.pbtxt tensorflow/core/api_def/base_api/api_def_QueueSize.pbtxt tensorflow/core/api_def/base_api/api_def_QueueSizeV2.pbtxt tensorflow/core/api_def/base_api/api_def_RFFT.pbtxt tensorflow/core/api_def/base_api/api_def_RFFT2D.pbtxt tensorflow/core/api_def/base_api/api_def_RFFT3D.pbtxt tensorflow/core/api_def/base_api/api_def_RGBToHSV.pbtxt tensorflow/core/api_def/base_api/api_def_RandomCrop.pbtxt tensorflow/core/api_def/base_api/api_def_RandomDataset.pbtxt tensorflow/core/api_def/base_api/api_def_RandomGamma.pbtxt tensorflow/core/api_def/base_api/api_def_RandomPoisson.pbtxt tensorflow/core/api_def/base_api/api_def_RandomPoissonV2.pbtxt tensorflow/core/api_def/base_api/api_def_RandomShuffle.pbtxt tensorflow/core/api_def/base_api/api_def_RandomShuffleQueue.pbtxt tensorflow/core/api_def/base_api/api_def_RandomShuffleQueueV2.pbtxt tensorflow/core/api_def/base_api/api_def_RandomStandardNormal.pbtxt tensorflow/core/api_def/base_api/api_def_RandomUniform.pbtxt tensorflow/core/api_def/base_api/api_def_RandomUniformInt.pbtxt tensorflow/core/api_def/base_api/api_def_Range.pbtxt tensorflow/core/api_def/base_api/api_def_RangeDataset.pbtxt tensorflow/core/api_def/base_api/api_def_Rank.pbtxt tensorflow/core/api_def/base_api/api_def_ReadFile.pbtxt tensorflow/core/api_def/base_api/api_def_ReadVariableOp.pbtxt tensorflow/core/api_def/base_api/api_def_ReaderNumRecordsProduced.pbtxt tensorflow/core/api_def/base_api/api_def_ReaderNumRecordsProducedV2.pbtxt tensorflow/core/api_def/base_api/api_def_ReaderNumWorkUnitsCompleted.pbtxt tensorflow/core/api_def/base_api/api_def_ReaderNumWorkUnitsCompletedV2.pbtxt tensorflow/core/api_def/base_api/api_def_ReaderRead.pbtxt tensorflow/core/api_def/base_api/api_def_ReaderReadUpTo.pbtxt tensorflow/core/api_def/base_api/api_def_ReaderReadUpToV2.pbtxt tensorflow/core/api_def/base_api/api_def_ReaderReadV2.pbtxt tensorflow/core/api_def/base_api/api_def_ReaderReset.pbtxt tensorflow/core/api_def/base_api/api_def_ReaderResetV2.pbtxt tensorflow/core/api_def/base_api/api_def_ReaderRestoreState.pbtxt tensorflow/core/api_def/base_api/api_def_ReaderRestoreStateV2.pbtxt tensorflow/core/api_def/base_api/api_def_ReaderSerializeState.pbtxt tensorflow/core/api_def/base_api/api_def_ReaderSerializeStateV2.pbtxt tensorflow/core/api_def/base_api/api_def_Real.pbtxt tensorflow/core/api_def/base_api/api_def_RealDiv.pbtxt tensorflow/core/api_def/base_api/api_def_Reciprocal.pbtxt tensorflow/core/api_def/base_api/api_def_ReciprocalGrad.pbtxt tensorflow/core/api_def/base_api/api_def_RecordInput.pbtxt tensorflow/core/api_def/base_api/api_def_ReduceJoin.pbtxt tensorflow/core/api_def/base_api/api_def_RefEnter.pbtxt tensorflow/core/api_def/base_api/api_def_RefExit.pbtxt tensorflow/core/api_def/base_api/api_def_RefIdentity.pbtxt tensorflow/core/api_def/base_api/api_def_RefMerge.pbtxt tensorflow/core/api_def/base_api/api_def_RefNextIteration.pbtxt tensorflow/core/api_def/base_api/api_def_RefSelect.pbtxt tensorflow/core/api_def/base_api/api_def_RefSwitch.pbtxt tensorflow/core/api_def/base_api/api_def_RegexReplace.pbtxt tensorflow/core/api_def/base_api/api_def_Relu.pbtxt tensorflow/core/api_def/base_api/api_def_Relu6.pbtxt tensorflow/core/api_def/base_api/api_def_Relu6Grad.pbtxt tensorflow/core/api_def/base_api/api_def_ReluGrad.pbtxt tensorflow/core/api_def/base_api/api_def_RemoteCall.pbtxt tensorflow/core/api_def/base_api/api_def_RemoteFusedGraphExecute.pbtxt tensorflow/core/api_def/base_api/api_def_RepeatDataset.pbtxt tensorflow/core/api_def/base_api/api_def_RequantizationRange.pbtxt tensorflow/core/api_def/base_api/api_def_Requantize.pbtxt tensorflow/core/api_def/base_api/api_def_Reshape.pbtxt tensorflow/core/api_def/base_api/api_def_ResizeArea.pbtxt tensorflow/core/api_def/base_api/api_def_ResizeBicubic.pbtxt tensorflow/core/api_def/base_api/api_def_ResizeBicubicGrad.pbtxt tensorflow/core/api_def/base_api/api_def_ResizeBilinear.pbtxt tensorflow/core/api_def/base_api/api_def_ResizeBilinearGrad.pbtxt tensorflow/core/api_def/base_api/api_def_ResizeNearestNeighbor.pbtxt tensorflow/core/api_def/base_api/api_def_ResizeNearestNeighborGrad.pbtxt tensorflow/core/api_def/base_api/api_def_ResourceApplyAdadelta.pbtxt tensorflow/core/api_def/base_api/api_def_ResourceApplyAdagrad.pbtxt tensorflow/core/api_def/base_api/api_def_ResourceApplyAdagradDA.pbtxt tensorflow/core/api_def/base_api/api_def_ResourceApplyAdam.pbtxt tensorflow/core/api_def/base_api/api_def_ResourceApplyAddSign.pbtxt tensorflow/core/api_def/base_api/api_def_ResourceApplyCenteredRMSProp.pbtxt tensorflow/core/api_def/base_api/api_def_ResourceApplyFtrl.pbtxt tensorflow/core/api_def/base_api/api_def_ResourceApplyFtrlV2.pbtxt tensorflow/core/api_def/base_api/api_def_ResourceApplyGradientDescent.pbtxt tensorflow/core/api_def/base_api/api_def_ResourceApplyMomentum.pbtxt tensorflow/core/api_def/base_api/api_def_ResourceApplyPowerSign.pbtxt tensorflow/core/api_def/base_api/api_def_ResourceApplyProximalAdagrad.pbtxt tensorflow/core/api_def/base_api/api_def_ResourceApplyProximalGradientDescent.pbtxt tensorflow/core/api_def/base_api/api_def_ResourceApplyRMSProp.pbtxt tensorflow/core/api_def/base_api/api_def_ResourceCountUpTo.pbtxt tensorflow/core/api_def/base_api/api_def_ResourceGather.pbtxt tensorflow/core/api_def/base_api/api_def_ResourceScatterAdd.pbtxt tensorflow/core/api_def/base_api/api_def_ResourceScatterNdUpdate.pbtxt tensorflow/core/api_def/base_api/api_def_ResourceScatterUpdate.pbtxt tensorflow/core/api_def/base_api/api_def_ResourceSparseApplyAdadelta.pbtxt tensorflow/core/api_def/base_api/api_def_ResourceSparseApplyAdagrad.pbtxt tensorflow/core/api_def/base_api/api_def_ResourceSparseApplyAdagradDA.pbtxt tensorflow/core/api_def/base_api/api_def_ResourceSparseApplyCenteredRMSProp.pbtxt tensorflow/core/api_def/base_api/api_def_ResourceSparseApplyFtrl.pbtxt tensorflow/core/api_def/base_api/api_def_ResourceSparseApplyFtrlV2.pbtxt tensorflow/core/api_def/base_api/api_def_ResourceSparseApplyMomentum.pbtxt tensorflow/core/api_def/base_api/api_def_ResourceSparseApplyProximalAdagrad.pbtxt tensorflow/core/api_def/base_api/api_def_ResourceSparseApplyProximalGradientDescent.pbtxt tensorflow/core/api_def/base_api/api_def_ResourceSparseApplyRMSProp.pbtxt tensorflow/core/api_def/base_api/api_def_ResourceStridedSliceAssign.pbtxt tensorflow/core/api_def/base_api/api_def_Restore.pbtxt tensorflow/core/api_def/base_api/api_def_RestoreSlice.pbtxt tensorflow/core/api_def/base_api/api_def_RestoreV2.pbtxt tensorflow/core/api_def/base_api/api_def_Reverse.pbtxt tensorflow/core/api_def/base_api/api_def_ReverseSequence.pbtxt tensorflow/core/api_def/base_api/api_def_ReverseV2.pbtxt tensorflow/core/api_def/base_api/api_def_RightShift.pbtxt tensorflow/core/api_def/base_api/api_def_Rint.pbtxt tensorflow/core/api_def/base_api/api_def_Roll.pbtxt tensorflow/core/api_def/base_api/api_def_Round.pbtxt tensorflow/core/api_def/base_api/api_def_Rsqrt.pbtxt tensorflow/core/api_def/base_api/api_def_RsqrtGrad.pbtxt tensorflow/core/api_def/base_api/api_def_SampleDistortedBoundingBox.pbtxt tensorflow/core/api_def/base_api/api_def_SampleDistortedBoundingBoxV2.pbtxt tensorflow/core/api_def/base_api/api_def_Save.pbtxt tensorflow/core/api_def/base_api/api_def_SaveSlices.pbtxt tensorflow/core/api_def/base_api/api_def_SaveV2.pbtxt tensorflow/core/api_def/base_api/api_def_ScalarSummary.pbtxt tensorflow/core/api_def/base_api/api_def_ScanDataset.pbtxt tensorflow/core/api_def/base_api/api_def_ScatterAdd.pbtxt tensorflow/core/api_def/base_api/api_def_ScatterDiv.pbtxt tensorflow/core/api_def/base_api/api_def_ScatterMul.pbtxt tensorflow/core/api_def/base_api/api_def_ScatterNd.pbtxt tensorflow/core/api_def/base_api/api_def_ScatterNdAdd.pbtxt tensorflow/core/api_def/base_api/api_def_ScatterNdNonAliasingAdd.pbtxt tensorflow/core/api_def/base_api/api_def_ScatterNdSub.pbtxt tensorflow/core/api_def/base_api/api_def_ScatterNdUpdate.pbtxt tensorflow/core/api_def/base_api/api_def_ScatterSub.pbtxt tensorflow/core/api_def/base_api/api_def_ScatterUpdate.pbtxt tensorflow/core/api_def/base_api/api_def_SdcaFprint.pbtxt tensorflow/core/api_def/base_api/api_def_SdcaOptimizer.pbtxt tensorflow/core/api_def/base_api/api_def_SdcaShrinkL1.pbtxt tensorflow/core/api_def/base_api/api_def_SegmentMax.pbtxt tensorflow/core/api_def/base_api/api_def_SegmentMean.pbtxt tensorflow/core/api_def/base_api/api_def_SegmentMin.pbtxt tensorflow/core/api_def/base_api/api_def_SegmentProd.pbtxt tensorflow/core/api_def/base_api/api_def_SegmentSum.pbtxt tensorflow/core/api_def/base_api/api_def_Select.pbtxt tensorflow/core/api_def/base_api/api_def_SelfAdjointEig.pbtxt tensorflow/core/api_def/base_api/api_def_SelfAdjointEigV2.pbtxt tensorflow/core/api_def/base_api/api_def_Selu.pbtxt tensorflow/core/api_def/base_api/api_def_SeluGrad.pbtxt tensorflow/core/api_def/base_api/api_def_SerializeIterator.pbtxt tensorflow/core/api_def/base_api/api_def_SerializeManySparse.pbtxt tensorflow/core/api_def/base_api/api_def_SerializeSparse.pbtxt tensorflow/core/api_def/base_api/api_def_SerializeTensor.pbtxt tensorflow/core/api_def/base_api/api_def_SetSize.pbtxt tensorflow/core/api_def/base_api/api_def_Shape.pbtxt tensorflow/core/api_def/base_api/api_def_ShapeN.pbtxt tensorflow/core/api_def/base_api/api_def_ShardedFilename.pbtxt tensorflow/core/api_def/base_api/api_def_ShardedFilespec.pbtxt tensorflow/core/api_def/base_api/api_def_ShuffleAndRepeatDataset.pbtxt tensorflow/core/api_def/base_api/api_def_ShuffleDataset.pbtxt tensorflow/core/api_def/base_api/api_def_Sigmoid.pbtxt tensorflow/core/api_def/base_api/api_def_SigmoidGrad.pbtxt tensorflow/core/api_def/base_api/api_def_Sign.pbtxt tensorflow/core/api_def/base_api/api_def_Sin.pbtxt tensorflow/core/api_def/base_api/api_def_Sinh.pbtxt tensorflow/core/api_def/base_api/api_def_Size.pbtxt tensorflow/core/api_def/base_api/api_def_SkipDataset.pbtxt tensorflow/core/api_def/base_api/api_def_Skipgram.pbtxt tensorflow/core/api_def/base_api/api_def_Slice.pbtxt tensorflow/core/api_def/base_api/api_def_SlideDataset.pbtxt tensorflow/core/api_def/base_api/api_def_Snapshot.pbtxt tensorflow/core/api_def/base_api/api_def_Softmax.pbtxt tensorflow/core/api_def/base_api/api_def_SoftmaxCrossEntropyWithLogits.pbtxt tensorflow/core/api_def/base_api/api_def_Softplus.pbtxt tensorflow/core/api_def/base_api/api_def_SoftplusGrad.pbtxt tensorflow/core/api_def/base_api/api_def_Softsign.pbtxt tensorflow/core/api_def/base_api/api_def_SoftsignGrad.pbtxt tensorflow/core/api_def/base_api/api_def_SpaceToBatch.pbtxt tensorflow/core/api_def/base_api/api_def_SpaceToBatchND.pbtxt tensorflow/core/api_def/base_api/api_def_SpaceToDepth.pbtxt tensorflow/core/api_def/base_api/api_def_SparseAccumulatorApplyGradient.pbtxt tensorflow/core/api_def/base_api/api_def_SparseAccumulatorTakeGradient.pbtxt tensorflow/core/api_def/base_api/api_def_SparseAdd.pbtxt tensorflow/core/api_def/base_api/api_def_SparseAddGrad.pbtxt tensorflow/core/api_def/base_api/api_def_SparseApplyAdadelta.pbtxt tensorflow/core/api_def/base_api/api_def_SparseApplyAdagrad.pbtxt tensorflow/core/api_def/base_api/api_def_SparseApplyAdagradDA.pbtxt tensorflow/core/api_def/base_api/api_def_SparseApplyCenteredRMSProp.pbtxt tensorflow/core/api_def/base_api/api_def_SparseApplyFtrl.pbtxt tensorflow/core/api_def/base_api/api_def_SparseApplyFtrlV2.pbtxt tensorflow/core/api_def/base_api/api_def_SparseApplyMomentum.pbtxt tensorflow/core/api_def/base_api/api_def_SparseApplyProximalAdagrad.pbtxt tensorflow/core/api_def/base_api/api_def_SparseApplyProximalGradientDescent.pbtxt tensorflow/core/api_def/base_api/api_def_SparseApplyRMSProp.pbtxt tensorflow/core/api_def/base_api/api_def_SparseConcat.pbtxt tensorflow/core/api_def/base_api/api_def_SparseConditionalAccumulator.pbtxt tensorflow/core/api_def/base_api/api_def_SparseCross.pbtxt tensorflow/core/api_def/base_api/api_def_SparseDenseCwiseAdd.pbtxt tensorflow/core/api_def/base_api/api_def_SparseDenseCwiseDiv.pbtxt tensorflow/core/api_def/base_api/api_def_SparseDenseCwiseMul.pbtxt tensorflow/core/api_def/base_api/api_def_SparseFillEmptyRows.pbtxt tensorflow/core/api_def/base_api/api_def_SparseFillEmptyRowsGrad.pbtxt tensorflow/core/api_def/base_api/api_def_SparseMatMul.pbtxt tensorflow/core/api_def/base_api/api_def_SparseReduceMax.pbtxt tensorflow/core/api_def/base_api/api_def_SparseReduceMaxSparse.pbtxt tensorflow/core/api_def/base_api/api_def_SparseReduceSum.pbtxt tensorflow/core/api_def/base_api/api_def_SparseReduceSumSparse.pbtxt tensorflow/core/api_def/base_api/api_def_SparseReorder.pbtxt tensorflow/core/api_def/base_api/api_def_SparseReshape.pbtxt tensorflow/core/api_def/base_api/api_def_SparseSegmentMean.pbtxt tensorflow/core/api_def/base_api/api_def_SparseSegmentMeanGrad.pbtxt tensorflow/core/api_def/base_api/api_def_SparseSegmentMeanWithNumSegments.pbtxt tensorflow/core/api_def/base_api/api_def_SparseSegmentSqrtN.pbtxt tensorflow/core/api_def/base_api/api_def_SparseSegmentSqrtNGrad.pbtxt tensorflow/core/api_def/base_api/api_def_SparseSegmentSqrtNWithNumSegments.pbtxt tensorflow/core/api_def/base_api/api_def_SparseSegmentSum.pbtxt tensorflow/core/api_def/base_api/api_def_SparseSegmentSumWithNumSegments.pbtxt tensorflow/core/api_def/base_api/api_def_SparseSlice.pbtxt tensorflow/core/api_def/base_api/api_def_SparseSoftmax.pbtxt tensorflow/core/api_def/base_api/api_def_SparseSoftmaxCrossEntropyWithLogits.pbtxt tensorflow/core/api_def/base_api/api_def_SparseSparseMaximum.pbtxt tensorflow/core/api_def/base_api/api_def_SparseSparseMinimum.pbtxt tensorflow/core/api_def/base_api/api_def_SparseSplit.pbtxt tensorflow/core/api_def/base_api/api_def_SparseTensorDenseAdd.pbtxt tensorflow/core/api_def/base_api/api_def_SparseTensorDenseMatMul.pbtxt tensorflow/core/api_def/base_api/api_def_SparseTensorSliceDataset.pbtxt tensorflow/core/api_def/base_api/api_def_SparseToDense.pbtxt tensorflow/core/api_def/base_api/api_def_SparseToSparseSetOperation.pbtxt tensorflow/core/api_def/base_api/api_def_Split.pbtxt tensorflow/core/api_def/base_api/api_def_SplitV.pbtxt tensorflow/core/api_def/base_api/api_def_SqlDataset.pbtxt tensorflow/core/api_def/base_api/api_def_Sqrt.pbtxt tensorflow/core/api_def/base_api/api_def_SqrtGrad.pbtxt tensorflow/core/api_def/base_api/api_def_Square.pbtxt tensorflow/core/api_def/base_api/api_def_SquaredDifference.pbtxt tensorflow/core/api_def/base_api/api_def_Squeeze.pbtxt tensorflow/core/api_def/base_api/api_def_Stack.pbtxt tensorflow/core/api_def/base_api/api_def_StackClose.pbtxt tensorflow/core/api_def/base_api/api_def_StackCloseV2.pbtxt tensorflow/core/api_def/base_api/api_def_StackPop.pbtxt tensorflow/core/api_def/base_api/api_def_StackPopV2.pbtxt tensorflow/core/api_def/base_api/api_def_StackPush.pbtxt tensorflow/core/api_def/base_api/api_def_StackPushV2.pbtxt tensorflow/core/api_def/base_api/api_def_StackV2.pbtxt tensorflow/core/api_def/base_api/api_def_Stage.pbtxt tensorflow/core/api_def/base_api/api_def_StageClear.pbtxt tensorflow/core/api_def/base_api/api_def_StagePeek.pbtxt tensorflow/core/api_def/base_api/api_def_StageSize.pbtxt tensorflow/core/api_def/base_api/api_def_StatelessRandomNormal.pbtxt tensorflow/core/api_def/base_api/api_def_StatelessRandomUniform.pbtxt tensorflow/core/api_def/base_api/api_def_StatelessTruncatedNormal.pbtxt tensorflow/core/api_def/base_api/api_def_StatsAggregatorHandle.pbtxt tensorflow/core/api_def/base_api/api_def_StatsAggregatorSummary.pbtxt tensorflow/core/api_def/base_api/api_def_StopGradient.pbtxt tensorflow/core/api_def/base_api/api_def_StridedSlice.pbtxt tensorflow/core/api_def/base_api/api_def_StridedSliceAssign.pbtxt tensorflow/core/api_def/base_api/api_def_StridedSliceGrad.pbtxt tensorflow/core/api_def/base_api/api_def_StringJoin.pbtxt tensorflow/core/api_def/base_api/api_def_StringSplit.pbtxt tensorflow/core/api_def/base_api/api_def_StringToHashBucket.pbtxt tensorflow/core/api_def/base_api/api_def_StringToHashBucketFast.pbtxt tensorflow/core/api_def/base_api/api_def_StringToHashBucketStrong.pbtxt tensorflow/core/api_def/base_api/api_def_StringToNumber.pbtxt tensorflow/core/api_def/base_api/api_def_Sub.pbtxt tensorflow/core/api_def/base_api/api_def_Substr.pbtxt tensorflow/core/api_def/base_api/api_def_Sum.pbtxt tensorflow/core/api_def/base_api/api_def_Svd.pbtxt tensorflow/core/api_def/base_api/api_def_Switch.pbtxt tensorflow/core/api_def/base_api/api_def_SymbolicGradient.pbtxt tensorflow/core/api_def/base_api/api_def_TFRecordDataset.pbtxt tensorflow/core/api_def/base_api/api_def_TFRecordReader.pbtxt tensorflow/core/api_def/base_api/api_def_TFRecordReaderV2.pbtxt tensorflow/core/api_def/base_api/api_def_TakeDataset.pbtxt tensorflow/core/api_def/base_api/api_def_TakeManySparseFromTensorsMap.pbtxt tensorflow/core/api_def/base_api/api_def_Tan.pbtxt tensorflow/core/api_def/base_api/api_def_Tanh.pbtxt tensorflow/core/api_def/base_api/api_def_TanhGrad.pbtxt tensorflow/core/api_def/base_api/api_def_TemporaryVariable.pbtxt tensorflow/core/api_def/base_api/api_def_TensorArray.pbtxt tensorflow/core/api_def/base_api/api_def_TensorArrayClose.pbtxt tensorflow/core/api_def/base_api/api_def_TensorArrayCloseV2.pbtxt tensorflow/core/api_def/base_api/api_def_TensorArrayCloseV3.pbtxt tensorflow/core/api_def/base_api/api_def_TensorArrayConcat.pbtxt tensorflow/core/api_def/base_api/api_def_TensorArrayConcatV2.pbtxt tensorflow/core/api_def/base_api/api_def_TensorArrayConcatV3.pbtxt tensorflow/core/api_def/base_api/api_def_TensorArrayGather.pbtxt tensorflow/core/api_def/base_api/api_def_TensorArrayGatherV2.pbtxt tensorflow/core/api_def/base_api/api_def_TensorArrayGatherV3.pbtxt tensorflow/core/api_def/base_api/api_def_TensorArrayGrad.pbtxt tensorflow/core/api_def/base_api/api_def_TensorArrayGradV2.pbtxt tensorflow/core/api_def/base_api/api_def_TensorArrayGradV3.pbtxt tensorflow/core/api_def/base_api/api_def_TensorArrayPack.pbtxt tensorflow/core/api_def/base_api/api_def_TensorArrayRead.pbtxt tensorflow/core/api_def/base_api/api_def_TensorArrayReadV2.pbtxt tensorflow/core/api_def/base_api/api_def_TensorArrayReadV3.pbtxt tensorflow/core/api_def/base_api/api_def_TensorArrayScatter.pbtxt tensorflow/core/api_def/base_api/api_def_TensorArrayScatterV2.pbtxt tensorflow/core/api_def/base_api/api_def_TensorArrayScatterV3.pbtxt tensorflow/core/api_def/base_api/api_def_TensorArraySize.pbtxt tensorflow/core/api_def/base_api/api_def_TensorArraySizeV2.pbtxt tensorflow/core/api_def/base_api/api_def_TensorArraySizeV3.pbtxt tensorflow/core/api_def/base_api/api_def_TensorArraySplit.pbtxt tensorflow/core/api_def/base_api/api_def_TensorArraySplitV2.pbtxt tensorflow/core/api_def/base_api/api_def_TensorArraySplitV3.pbtxt tensorflow/core/api_def/base_api/api_def_TensorArrayUnpack.pbtxt tensorflow/core/api_def/base_api/api_def_TensorArrayV2.pbtxt tensorflow/core/api_def/base_api/api_def_TensorArrayV3.pbtxt tensorflow/core/api_def/base_api/api_def_TensorArrayWrite.pbtxt tensorflow/core/api_def/base_api/api_def_TensorArrayWriteV2.pbtxt tensorflow/core/api_def/base_api/api_def_TensorArrayWriteV3.pbtxt tensorflow/core/api_def/base_api/api_def_TensorDataset.pbtxt tensorflow/core/api_def/base_api/api_def_TensorGetItem.pbtxt tensorflow/core/api_def/base_api/api_def_TensorListElementShape.pbtxt tensorflow/core/api_def/base_api/api_def_TensorListFromTensor.pbtxt tensorflow/core/api_def/base_api/api_def_TensorListLength.pbtxt tensorflow/core/api_def/base_api/api_def_TensorListPopBack.pbtxt tensorflow/core/api_def/base_api/api_def_TensorListPushBack.pbtxt tensorflow/core/api_def/base_api/api_def_TensorListReserve.pbtxt tensorflow/core/api_def/base_api/api_def_TensorListStack.pbtxt tensorflow/core/api_def/base_api/api_def_TensorSetItem.pbtxt tensorflow/core/api_def/base_api/api_def_TensorSliceDataset.pbtxt tensorflow/core/api_def/base_api/api_def_TensorSummary.pbtxt tensorflow/core/api_def/base_api/api_def_TensorSummaryV2.pbtxt tensorflow/core/api_def/base_api/api_def_TextLineDataset.pbtxt tensorflow/core/api_def/base_api/api_def_TextLineReader.pbtxt tensorflow/core/api_def/base_api/api_def_TextLineReaderV2.pbtxt tensorflow/core/api_def/base_api/api_def_ThreadUnsafeUnigramCandidateSampler.pbtxt tensorflow/core/api_def/base_api/api_def_Tile.pbtxt tensorflow/core/api_def/base_api/api_def_TileGrad.pbtxt tensorflow/core/api_def/base_api/api_def_Timestamp.pbtxt tensorflow/core/api_def/base_api/api_def_TopK.pbtxt tensorflow/core/api_def/base_api/api_def_TopKV2.pbtxt tensorflow/core/api_def/base_api/api_def_Transpose.pbtxt tensorflow/core/api_def/base_api/api_def_TruncateDiv.pbtxt tensorflow/core/api_def/base_api/api_def_TruncateMod.pbtxt tensorflow/core/api_def/base_api/api_def_TruncatedNormal.pbtxt tensorflow/core/api_def/base_api/api_def_Unbatch.pbtxt tensorflow/core/api_def/base_api/api_def_UnbatchGrad.pbtxt tensorflow/core/api_def/base_api/api_def_UniformCandidateSampler.pbtxt tensorflow/core/api_def/base_api/api_def_Unique.pbtxt tensorflow/core/api_def/base_api/api_def_UniqueV2.pbtxt tensorflow/core/api_def/base_api/api_def_UniqueWithCounts.pbtxt tensorflow/core/api_def/base_api/api_def_UniqueWithCountsV2.pbtxt tensorflow/core/api_def/base_api/api_def_Unpack.pbtxt tensorflow/core/api_def/base_api/api_def_UnravelIndex.pbtxt tensorflow/core/api_def/base_api/api_def_UnsortedSegmentMax.pbtxt tensorflow/core/api_def/base_api/api_def_UnsortedSegmentMin.pbtxt tensorflow/core/api_def/base_api/api_def_UnsortedSegmentProd.pbtxt tensorflow/core/api_def/base_api/api_def_UnsortedSegmentSum.pbtxt tensorflow/core/api_def/base_api/api_def_Unstage.pbtxt tensorflow/core/api_def/base_api/api_def_VarHandleOp.pbtxt tensorflow/core/api_def/base_api/api_def_VarIsInitializedOp.pbtxt tensorflow/core/api_def/base_api/api_def_Variable.pbtxt tensorflow/core/api_def/base_api/api_def_VariableShape.pbtxt tensorflow/core/api_def/base_api/api_def_VariableV2.pbtxt tensorflow/core/api_def/base_api/api_def_Where.pbtxt tensorflow/core/api_def/base_api/api_def_WholeFileReader.pbtxt tensorflow/core/api_def/base_api/api_def_WholeFileReaderV2.pbtxt tensorflow/core/api_def/base_api/api_def_WriteFile.pbtxt tensorflow/core/api_def/base_api/api_def_ZerosLike.pbtxt tensorflow/core/api_def/base_api/api_def_Zeta.pbtxt tensorflow/core/api_def/base_api/api_def_ZipDataset.pbtxt | cut -d\" \" -f1)),$(dirname $(echo tensorflow/core/api_def/python_api/api_def_Abort.pbtxt tensorflow/core/api_def/python_api/api_def_Abs.pbtxt tensorflow/core/api_def/python_api/api_def_AccumulateNV2.pbtxt tensorflow/core/api_def/python_api/api_def_AccumulatorApplyGradient.pbtxt tensorflow/core/api_def/python_api/api_def_AccumulatorNumAccumulated.pbtxt tensorflow/core/api_def/python_api/api_def_AccumulatorSetGlobalStep.pbtxt tensorflow/core/api_def/python_api/api_def_AccumulatorTakeGradient.pbtxt tensorflow/core/api_def/python_api/api_def_AddManySparseToTensorsMap.pbtxt tensorflow/core/api_def/python_api/api_def_AddN.pbtxt tensorflow/core/api_def/python_api/api_def_AddSparseToTensorsMap.pbtxt tensorflow/core/api_def/python_api/api_def_AddV2.pbtxt tensorflow/core/api_def/python_api/api_def_AdjustContrast.pbtxt tensorflow/core/api_def/python_api/api_def_AdjustContrastv2.pbtxt tensorflow/core/api_def/python_api/api_def_AdjustHue.pbtxt tensorflow/core/api_def/python_api/api_def_AdjustSaturation.pbtxt tensorflow/core/api_def/python_api/api_def_All.pbtxt tensorflow/core/api_def/python_api/api_def_AllCandidateSampler.pbtxt tensorflow/core/api_def/python_api/api_def_Angle.pbtxt tensorflow/core/api_def/python_api/api_def_Any.pbtxt tensorflow/core/api_def/python_api/api_def_ApplyAdadelta.pbtxt tensorflow/core/api_def/python_api/api_def_ApplyAdagrad.pbtxt tensorflow/core/api_def/python_api/api_def_ApplyAdagradDA.pbtxt tensorflow/core/api_def/python_api/api_def_ApplyAdam.pbtxt tensorflow/core/api_def/python_api/api_def_ApplyAddSign.pbtxt tensorflow/core/api_def/python_api/api_def_ApplyCenteredRMSProp.pbtxt tensorflow/core/api_def/python_api/api_def_ApplyFtrl.pbtxt tensorflow/core/api_def/python_api/api_def_ApplyFtrlV2.pbtxt tensorflow/core/api_def/python_api/api_def_ApplyGradientDescent.pbtxt tensorflow/core/api_def/python_api/api_def_ApplyMomentum.pbtxt tensorflow/core/api_def/python_api/api_def_ApplyPowerSign.pbtxt tensorflow/core/api_def/python_api/api_def_ApplyProximalAdagrad.pbtxt tensorflow/core/api_def/python_api/api_def_ApplyProximalGradientDescent.pbtxt tensorflow/core/api_def/python_api/api_def_ApplyRMSProp.pbtxt tensorflow/core/api_def/python_api/api_def_ApproximateEqual.pbtxt tensorflow/core/api_def/python_api/api_def_Assert.pbtxt tensorflow/core/api_def/python_api/api_def_AssignAddVariableOp.pbtxt tensorflow/core/api_def/python_api/api_def_AssignSubVariableOp.pbtxt tensorflow/core/api_def/python_api/api_def_AssignVariableOp.pbtxt tensorflow/core/api_def/python_api/api_def_AudioSummary.pbtxt tensorflow/core/api_def/python_api/api_def_AudioSummaryV2.pbtxt tensorflow/core/api_def/python_api/api_def_AvgPool.pbtxt tensorflow/core/api_def/python_api/api_def_AvgPool3D.pbtxt tensorflow/core/api_def/python_api/api_def_AvgPool3DGrad.pbtxt tensorflow/core/api_def/python_api/api_def_Barrier.pbtxt tensorflow/core/api_def/python_api/api_def_BarrierClose.pbtxt tensorflow/core/api_def/python_api/api_def_BarrierIncompleteSize.pbtxt tensorflow/core/api_def/python_api/api_def_BarrierInsertMany.pbtxt tensorflow/core/api_def/python_api/api_def_BarrierReadySize.pbtxt tensorflow/core/api_def/python_api/api_def_BarrierTakeMany.pbtxt tensorflow/core/api_def/python_api/api_def_BatchCholesky.pbtxt tensorflow/core/api_def/python_api/api_def_BatchCholeskyGrad.pbtxt tensorflow/core/api_def/python_api/api_def_BatchDataset.pbtxt tensorflow/core/api_def/python_api/api_def_BatchFFT.pbtxt tensorflow/core/api_def/python_api/api_def_BatchFFT2D.pbtxt tensorflow/core/api_def/python_api/api_def_BatchFFT3D.pbtxt tensorflow/core/api_def/python_api/api_def_BatchIFFT.pbtxt tensorflow/core/api_def/python_api/api_def_BatchIFFT2D.pbtxt tensorflow/core/api_def/python_api/api_def_BatchIFFT3D.pbtxt tensorflow/core/api_def/python_api/api_def_BatchMatMul.pbtxt tensorflow/core/api_def/python_api/api_def_BatchMatrixBandPart.pbtxt tensorflow/core/api_def/python_api/api_def_BatchMatrixDeterminant.pbtxt tensorflow/core/api_def/python_api/api_def_BatchMatrixDiag.pbtxt tensorflow/core/api_def/python_api/api_def_BatchMatrixDiagPart.pbtxt tensorflow/core/api_def/python_api/api_def_BatchMatrixInverse.pbtxt tensorflow/core/api_def/python_api/api_def_BatchMatrixSetDiag.pbtxt tensorflow/core/api_def/python_api/api_def_BatchMatrixSolve.pbtxt tensorflow/core/api_def/python_api/api_def_BatchMatrixSolveLs.pbtxt tensorflow/core/api_def/python_api/api_def_BatchMatrixTriangularSolve.pbtxt tensorflow/core/api_def/python_api/api_def_BatchNormWithGlobalNormalization.pbtxt tensorflow/core/api_def/python_api/api_def_BatchNormWithGlobalNormalizationGrad.pbtxt tensorflow/core/api_def/python_api/api_def_BatchSelfAdjointEig.pbtxt tensorflow/core/api_def/python_api/api_def_BatchSelfAdjointEigV2.pbtxt tensorflow/core/api_def/python_api/api_def_BatchSvd.pbtxt tensorflow/core/api_def/python_api/api_def_BatchToSpace.pbtxt tensorflow/core/api_def/python_api/api_def_BiasAdd.pbtxt tensorflow/core/api_def/python_api/api_def_BiasAddGrad.pbtxt tensorflow/core/api_def/python_api/api_def_BiasAddV1.pbtxt tensorflow/core/api_def/python_api/api_def_Bincount.pbtxt tensorflow/core/api_def/python_api/api_def_BitwiseAnd.pbtxt tensorflow/core/api_def/python_api/api_def_BitwiseOr.pbtxt tensorflow/core/api_def/python_api/api_def_BitwiseXor.pbtxt tensorflow/core/api_def/python_api/api_def_BroadcastArgs.pbtxt tensorflow/core/api_def/python_api/api_def_Bucketize.pbtxt tensorflow/core/api_def/python_api/api_def_BytesProducedStatsDataset.pbtxt tensorflow/core/api_def/python_api/api_def_CTCBeamSearchDecoder.pbtxt tensorflow/core/api_def/python_api/api_def_CTCGreedyDecoder.pbtxt tensorflow/core/api_def/python_api/api_def_CTCLoss.pbtxt tensorflow/core/api_def/python_api/api_def_CacheDataset.pbtxt tensorflow/core/api_def/python_api/api_def_Cast.pbtxt tensorflow/core/api_def/python_api/api_def_Cholesky.pbtxt tensorflow/core/api_def/python_api/api_def_CholeskyGrad.pbtxt tensorflow/core/api_def/python_api/api_def_CompareAndBitpack.pbtxt tensorflow/core/api_def/python_api/api_def_Complex.pbtxt tensorflow/core/api_def/python_api/api_def_ComplexAbs.pbtxt tensorflow/core/api_def/python_api/api_def_ComputeAccidentalHits.pbtxt tensorflow/core/api_def/python_api/api_def_Concat.pbtxt tensorflow/core/api_def/python_api/api_def_ConcatOffset.pbtxt tensorflow/core/api_def/python_api/api_def_ConcatV2.pbtxt tensorflow/core/api_def/python_api/api_def_ConcatenateDataset.pbtxt tensorflow/core/api_def/python_api/api_def_ConditionalAccumulator.pbtxt tensorflow/core/api_def/python_api/api_def_Conj.pbtxt tensorflow/core/api_def/python_api/api_def_ConjugateTranspose.pbtxt tensorflow/core/api_def/python_api/api_def_Const.pbtxt tensorflow/core/api_def/python_api/api_def_ConsumeMutexLock.pbtxt tensorflow/core/api_def/python_api/api_def_ControlTrigger.pbtxt tensorflow/core/api_def/python_api/api_def_Conv2D.pbtxt tensorflow/core/api_def/python_api/api_def_Conv2DBackpropFilter.pbtxt tensorflow/core/api_def/python_api/api_def_Conv2DBackpropInput.pbtxt tensorflow/core/api_def/python_api/api_def_Conv3D.pbtxt tensorflow/core/api_def/python_api/api_def_Conv3DBackpropFilter.pbtxt tensorflow/core/api_def/python_api/api_def_Conv3DBackpropFilterV2.pbtxt tensorflow/core/api_def/python_api/api_def_Conv3DBackpropInput.pbtxt tensorflow/core/api_def/python_api/api_def_Conv3DBackpropInputV2.pbtxt tensorflow/core/api_def/python_api/api_def_CropAndResize.pbtxt tensorflow/core/api_def/python_api/api_def_CropAndResizeGradBoxes.pbtxt tensorflow/core/api_def/python_api/api_def_CropAndResizeGradImage.pbtxt tensorflow/core/api_def/python_api/api_def_Cumprod.pbtxt tensorflow/core/api_def/python_api/api_def_Cumsum.pbtxt tensorflow/core/api_def/python_api/api_def_DataFormatDimMap.pbtxt tensorflow/core/api_def/python_api/api_def_DataFormatVecPermute.pbtxt tensorflow/core/api_def/python_api/api_def_DatasetToSingleElement.pbtxt tensorflow/core/api_def/python_api/api_def_DebugGradientIdentity.pbtxt tensorflow/core/api_def/python_api/api_def_DebugGradientRefIdentity.pbtxt tensorflow/core/api_def/python_api/api_def_DecodeAndCropJpeg.pbtxt tensorflow/core/api_def/python_api/api_def_DecodeBmp.pbtxt tensorflow/core/api_def/python_api/api_def_DecodeCSV.pbtxt tensorflow/core/api_def/python_api/api_def_DecodeCompressed.pbtxt tensorflow/core/api_def/python_api/api_def_DecodeGif.pbtxt tensorflow/core/api_def/python_api/api_def_DecodeJpeg.pbtxt tensorflow/core/api_def/python_api/api_def_DecodePng.pbtxt tensorflow/core/api_def/python_api/api_def_DeleteSessionTensor.pbtxt tensorflow/core/api_def/python_api/api_def_DenseToDenseSetOperation.pbtxt tensorflow/core/api_def/python_api/api_def_DenseToSparseBatchDataset.pbtxt tensorflow/core/api_def/python_api/api_def_DenseToSparseSetOperation.pbtxt tensorflow/core/api_def/python_api/api_def_DepthToSpace.pbtxt tensorflow/core/api_def/python_api/api_def_DepthwiseConv2dNative.pbtxt tensorflow/core/api_def/python_api/api_def_DepthwiseConv2dNativeBackpropFilter.pbtxt tensorflow/core/api_def/python_api/api_def_DepthwiseConv2dNativeBackpropInput.pbtxt tensorflow/core/api_def/python_api/api_def_DeserializeIterator.pbtxt tensorflow/core/api_def/python_api/api_def_DeserializeManySparse.pbtxt tensorflow/core/api_def/python_api/api_def_DeserializeSparse.pbtxt tensorflow/core/api_def/python_api/api_def_DestroyResourceOp.pbtxt tensorflow/core/api_def/python_api/api_def_DestroyTemporaryVariable.pbtxt tensorflow/core/api_def/python_api/api_def_Dilation2D.pbtxt tensorflow/core/api_def/python_api/api_def_Dilation2DBackpropFilter.pbtxt tensorflow/core/api_def/python_api/api_def_Dilation2DBackpropInput.pbtxt tensorflow/core/api_def/python_api/api_def_DrawBoundingBoxes.pbtxt tensorflow/core/api_def/python_api/api_def_EagerPyFunc.pbtxt tensorflow/core/api_def/python_api/api_def_EditDistance.pbtxt tensorflow/core/api_def/python_api/api_def_Elu.pbtxt tensorflow/core/api_def/python_api/api_def_EncodeJpeg.pbtxt tensorflow/core/api_def/python_api/api_def_EncodePng.pbtxt tensorflow/core/api_def/python_api/api_def_EnqueueInQueueDataset.pbtxt tensorflow/core/api_def/python_api/api_def_ExpandDims.pbtxt tensorflow/core/api_def/python_api/api_def_ExtractGlimpse.pbtxt tensorflow/core/api_def/python_api/api_def_ExtractJpegShape.pbtxt tensorflow/core/api_def/python_api/api_def_FFT.pbtxt tensorflow/core/api_def/python_api/api_def_FFT2D.pbtxt tensorflow/core/api_def/python_api/api_def_FFT3D.pbtxt tensorflow/core/api_def/python_api/api_def_FIFOQueue.pbtxt tensorflow/core/api_def/python_api/api_def_FIFOQueueV2.pbtxt tensorflow/core/api_def/python_api/api_def_Fact.pbtxt tensorflow/core/api_def/python_api/api_def_FakeQueue.pbtxt tensorflow/core/api_def/python_api/api_def_FilterDataset.pbtxt tensorflow/core/api_def/python_api/api_def_FixedLengthRecordDataset.pbtxt tensorflow/core/api_def/python_api/api_def_FixedLengthRecordReader.pbtxt tensorflow/core/api_def/python_api/api_def_FixedLengthRecordReaderV2.pbtxt tensorflow/core/api_def/python_api/api_def_FixedUnigramCandidateSampler.pbtxt tensorflow/core/api_def/python_api/api_def_FlatMapDataset.pbtxt tensorflow/core/api_def/python_api/api_def_FloorDiv.pbtxt tensorflow/core/api_def/python_api/api_def_FloorMod.pbtxt tensorflow/core/api_def/python_api/api_def_FractionalAvgPool.pbtxt tensorflow/core/api_def/python_api/api_def_FractionalMaxPool.pbtxt tensorflow/core/api_def/python_api/api_def_FusedBatchNorm.pbtxt tensorflow/core/api_def/python_api/api_def_FusedBatchNormGrad.pbtxt tensorflow/core/api_def/python_api/api_def_FusedBatchNormGradV2.pbtxt tensorflow/core/api_def/python_api/api_def_FusedBatchNormV2.pbtxt tensorflow/core/api_def/python_api/api_def_FusedPadConv2D.pbtxt tensorflow/core/api_def/python_api/api_def_FusedResizeAndPadConv2D.pbtxt tensorflow/core/api_def/python_api/api_def_Gather.pbtxt tensorflow/core/api_def/python_api/api_def_GatherV2.pbtxt tensorflow/core/api_def/python_api/api_def_GenerateVocabRemapping.pbtxt tensorflow/core/api_def/python_api/api_def_GeneratorDataset.pbtxt tensorflow/core/api_def/python_api/api_def_GetSessionHandle.pbtxt tensorflow/core/api_def/python_api/api_def_GetSessionHandleV2.pbtxt tensorflow/core/api_def/python_api/api_def_GetSessionTensor.pbtxt tensorflow/core/api_def/python_api/api_def_GroupByWindowDataset.pbtxt tensorflow/core/api_def/python_api/api_def_HSVToRGB.pbtxt tensorflow/core/api_def/python_api/api_def_HashTable.pbtxt tensorflow/core/api_def/python_api/api_def_HashTableV2.pbtxt tensorflow/core/api_def/python_api/api_def_HistogramFixedWidth.pbtxt tensorflow/core/api_def/python_api/api_def_HistogramSummary.pbtxt tensorflow/core/api_def/python_api/api_def_IFFT.pbtxt tensorflow/core/api_def/python_api/api_def_IFFT2D.pbtxt tensorflow/core/api_def/python_api/api_def_IFFT3D.pbtxt tensorflow/core/api_def/python_api/api_def_IRFFT.pbtxt tensorflow/core/api_def/python_api/api_def_IRFFT2D.pbtxt tensorflow/core/api_def/python_api/api_def_IRFFT3D.pbtxt tensorflow/core/api_def/python_api/api_def_IdentityReader.pbtxt tensorflow/core/api_def/python_api/api_def_IdentityReaderV2.pbtxt tensorflow/core/api_def/python_api/api_def_Imag.pbtxt tensorflow/core/api_def/python_api/api_def_ImageSummary.pbtxt tensorflow/core/api_def/python_api/api_def_ImmutableConst.pbtxt tensorflow/core/api_def/python_api/api_def_InTopK.pbtxt tensorflow/core/api_def/python_api/api_def_InTopKV2.pbtxt tensorflow/core/api_def/python_api/api_def_InitializeTable.pbtxt tensorflow/core/api_def/python_api/api_def_InitializeTableFromTextFile.pbtxt tensorflow/core/api_def/python_api/api_def_InitializeTableFromTextFileV2.pbtxt tensorflow/core/api_def/python_api/api_def_InitializeTableV2.pbtxt tensorflow/core/api_def/python_api/api_def_InterleaveDataset.pbtxt tensorflow/core/api_def/python_api/api_def_Inv.pbtxt tensorflow/core/api_def/python_api/api_def_Invert.pbtxt tensorflow/core/api_def/python_api/api_def_IsVariableInitialized.pbtxt tensorflow/core/api_def/python_api/api_def_Iterator.pbtxt tensorflow/core/api_def/python_api/api_def_IteratorFromStringHandle.pbtxt tensorflow/core/api_def/python_api/api_def_IteratorGetNext.pbtxt tensorflow/core/api_def/python_api/api_def_IteratorGetNextSync.pbtxt tensorflow/core/api_def/python_api/api_def_IteratorSetStatsAggregator.pbtxt tensorflow/core/api_def/python_api/api_def_IteratorToStringHandle.pbtxt tensorflow/core/api_def/python_api/api_def_L2Loss.pbtxt tensorflow/core/api_def/python_api/api_def_LMDBReader.pbtxt tensorflow/core/api_def/python_api/api_def_LRN.pbtxt tensorflow/core/api_def/python_api/api_def_LatencyStatsDataset.pbtxt tensorflow/core/api_def/python_api/api_def_LearnedUnigramCandidateSampler.pbtxt tensorflow/core/api_def/python_api/api_def_LeftShift.pbtxt tensorflow/core/api_def/python_api/api_def_LinSpace.pbtxt tensorflow/core/api_def/python_api/api_def_ListDiff.pbtxt tensorflow/core/api_def/python_api/api_def_LoadAndRemapMatrix.pbtxt tensorflow/core/api_def/python_api/api_def_LogMatrixDeterminant.pbtxt tensorflow/core/api_def/python_api/api_def_LogSoftmax.pbtxt tensorflow/core/api_def/python_api/api_def_LogUniformCandidateSampler.pbtxt tensorflow/core/api_def/python_api/api_def_LookupTableExport.pbtxt tensorflow/core/api_def/python_api/api_def_LookupTableExportV2.pbtxt tensorflow/core/api_def/python_api/api_def_LookupTableFind.pbtxt tensorflow/core/api_def/python_api/api_def_LookupTableFindV2.pbtxt tensorflow/core/api_def/python_api/api_def_LookupTableImport.pbtxt tensorflow/core/api_def/python_api/api_def_LookupTableImportV2.pbtxt tensorflow/core/api_def/python_api/api_def_LookupTableInsert.pbtxt tensorflow/core/api_def/python_api/api_def_LookupTableInsertV2.pbtxt tensorflow/core/api_def/python_api/api_def_LookupTableSize.pbtxt tensorflow/core/api_def/python_api/api_def_LookupTableSizeV2.pbtxt tensorflow/core/api_def/python_api/api_def_LoopCond.pbtxt tensorflow/core/api_def/python_api/api_def_MakeIterator.pbtxt tensorflow/core/api_def/python_api/api_def_MapAndBatchDataset.pbtxt tensorflow/core/api_def/python_api/api_def_MapClear.pbtxt tensorflow/core/api_def/python_api/api_def_MapDataset.pbtxt tensorflow/core/api_def/python_api/api_def_MapIncompleteSize.pbtxt tensorflow/core/api_def/python_api/api_def_MapPeek.pbtxt tensorflow/core/api_def/python_api/api_def_MapSize.pbtxt tensorflow/core/api_def/python_api/api_def_MapStage.pbtxt tensorflow/core/api_def/python_api/api_def_MapUnstage.pbtxt tensorflow/core/api_def/python_api/api_def_MapUnstageNoKey.pbtxt tensorflow/core/api_def/python_api/api_def_MatMul.pbtxt tensorflow/core/api_def/python_api/api_def_MatrixBandPart.pbtxt tensorflow/core/api_def/python_api/api_def_MatrixDeterminant.pbtxt tensorflow/core/api_def/python_api/api_def_MatrixDiag.pbtxt tensorflow/core/api_def/python_api/api_def_MatrixDiagPart.pbtxt tensorflow/core/api_def/python_api/api_def_MatrixExponential.pbtxt tensorflow/core/api_def/python_api/api_def_MatrixInverse.pbtxt tensorflow/core/api_def/python_api/api_def_MatrixSetDiag.pbtxt tensorflow/core/api_def/python_api/api_def_MatrixSolve.pbtxt tensorflow/core/api_def/python_api/api_def_MatrixSolveLs.pbtxt tensorflow/core/api_def/python_api/api_def_MatrixTriangularSolve.pbtxt tensorflow/core/api_def/python_api/api_def_Max.pbtxt tensorflow/core/api_def/python_api/api_def_MaxPool.pbtxt tensorflow/core/api_def/python_api/api_def_MaxPool3D.pbtxt tensorflow/core/api_def/python_api/api_def_MaxPool3DGrad.pbtxt tensorflow/core/api_def/python_api/api_def_MaxPool3DGradGrad.pbtxt tensorflow/core/api_def/python_api/api_def_MaxPoolGradGrad.pbtxt tensorflow/core/api_def/python_api/api_def_MaxPoolGradGradV2.pbtxt tensorflow/core/api_def/python_api/api_def_MaxPoolGradGradWithArgmax.pbtxt tensorflow/core/api_def/python_api/api_def_MaxPoolGradV2.pbtxt tensorflow/core/api_def/python_api/api_def_MaxPoolV2.pbtxt tensorflow/core/api_def/python_api/api_def_MaxPoolWithArgmax.pbtxt tensorflow/core/api_def/python_api/api_def_Mean.pbtxt tensorflow/core/api_def/python_api/api_def_Merge.pbtxt tensorflow/core/api_def/python_api/api_def_MergeSummary.pbtxt tensorflow/core/api_def/python_api/api_def_MergeV2Checkpoints.pbtxt tensorflow/core/api_def/python_api/api_def_Min.pbtxt tensorflow/core/api_def/python_api/api_def_MirrorPad.pbtxt tensorflow/core/api_def/python_api/api_def_Mul.pbtxt tensorflow/core/api_def/python_api/api_def_Multinomial.pbtxt tensorflow/core/api_def/python_api/api_def_MutableDenseHashTable.pbtxt tensorflow/core/api_def/python_api/api_def_MutableDenseHashTableV2.pbtxt tensorflow/core/api_def/python_api/api_def_MutableHashTable.pbtxt tensorflow/core/api_def/python_api/api_def_MutableHashTableOfTensors.pbtxt tensorflow/core/api_def/python_api/api_def_MutableHashTableOfTensorsV2.pbtxt tensorflow/core/api_def/python_api/api_def_MutableHashTableV2.pbtxt tensorflow/core/api_def/python_api/api_def_MutexLock.pbtxt tensorflow/core/api_def/python_api/api_def_MutexV2.pbtxt tensorflow/core/api_def/python_api/api_def_Neg.pbtxt tensorflow/core/api_def/python_api/api_def_NegTrain.pbtxt tensorflow/core/api_def/python_api/api_def_NextIteration.pbtxt tensorflow/core/api_def/python_api/api_def_NonMaxSuppression.pbtxt tensorflow/core/api_def/python_api/api_def_NonMaxSuppressionV2.pbtxt tensorflow/core/api_def/python_api/api_def_NthElement.pbtxt tensorflow/core/api_def/python_api/api_def_OneHot.pbtxt tensorflow/core/api_def/python_api/api_def_OneShotIterator.pbtxt tensorflow/core/api_def/python_api/api_def_OnesLike.pbtxt tensorflow/core/api_def/python_api/api_def_OrderedMapClear.pbtxt tensorflow/core/api_def/python_api/api_def_OrderedMapIncompleteSize.pbtxt tensorflow/core/api_def/python_api/api_def_OrderedMapPeek.pbtxt tensorflow/core/api_def/python_api/api_def_OrderedMapSize.pbtxt tensorflow/core/api_def/python_api/api_def_OrderedMapStage.pbtxt tensorflow/core/api_def/python_api/api_def_OrderedMapUnstage.pbtxt tensorflow/core/api_def/python_api/api_def_OrderedMapUnstageNoKey.pbtxt tensorflow/core/api_def/python_api/api_def_Pack.pbtxt tensorflow/core/api_def/python_api/api_def_Pad.pbtxt tensorflow/core/api_def/python_api/api_def_PadV2.pbtxt tensorflow/core/api_def/python_api/api_def_PaddedBatchDataset.pbtxt tensorflow/core/api_def/python_api/api_def_PaddingFIFOQueue.pbtxt tensorflow/core/api_def/python_api/api_def_PaddingFIFOQueueV2.pbtxt tensorflow/core/api_def/python_api/api_def_ParallelConcat.pbtxt tensorflow/core/api_def/python_api/api_def_ParallelDynamicStitch.pbtxt tensorflow/core/api_def/python_api/api_def_ParallelInterleaveDataset.pbtxt tensorflow/core/api_def/python_api/api_def_ParallelMapDataset.pbtxt tensorflow/core/api_def/python_api/api_def_ParameterizedTruncatedNormal.pbtxt tensorflow/core/api_def/python_api/api_def_ParseExample.pbtxt tensorflow/core/api_def/python_api/api_def_ParseSingleExample.pbtxt tensorflow/core/api_def/python_api/api_def_ParseSingleSequenceExample.pbtxt tensorflow/core/api_def/python_api/api_def_Placeholder.pbtxt tensorflow/core/api_def/python_api/api_def_PlaceholderV2.pbtxt tensorflow/core/api_def/python_api/api_def_PopulationCount.pbtxt tensorflow/core/api_def/python_api/api_def_Pow.pbtxt tensorflow/core/api_def/python_api/api_def_PrefetchDataset.pbtxt tensorflow/core/api_def/python_api/api_def_PrependFromQueueAndPaddedBatchDataset.pbtxt tensorflow/core/api_def/python_api/api_def_PreventGradient.pbtxt tensorflow/core/api_def/python_api/api_def_Print.pbtxt tensorflow/core/api_def/python_api/api_def_PriorityQueue.pbtxt tensorflow/core/api_def/python_api/api_def_PriorityQueueV2.pbtxt tensorflow/core/api_def/python_api/api_def_Prod.pbtxt tensorflow/core/api_def/python_api/api_def_PyFunc.pbtxt tensorflow/core/api_def/python_api/api_def_PyFuncStateless.pbtxt tensorflow/core/api_def/python_api/api_def_Qr.pbtxt tensorflow/core/api_def/python_api/api_def_QuantizeAndDequantize.pbtxt tensorflow/core/api_def/python_api/api_def_QuantizeAndDequantizeV2.pbtxt tensorflow/core/api_def/python_api/api_def_QuantizeAndDequantizeV3.pbtxt tensorflow/core/api_def/python_api/api_def_QuantizeDownAndShrinkRange.pbtxt tensorflow/core/api_def/python_api/api_def_QuantizeV2.pbtxt tensorflow/core/api_def/python_api/api_def_QuantizedAdd.pbtxt tensorflow/core/api_def/python_api/api_def_QuantizedAvgPool.pbtxt tensorflow/core/api_def/python_api/api_def_QuantizedBatchNormWithGlobalNormalization.pbtxt tensorflow/core/api_def/python_api/api_def_QuantizedBiasAdd.pbtxt tensorflow/core/api_def/python_api/api_def_QuantizedConv2D.pbtxt tensorflow/core/api_def/python_api/api_def_QuantizedInstanceNorm.pbtxt tensorflow/core/api_def/python_api/api_def_QuantizedMatMul.pbtxt tensorflow/core/api_def/python_api/api_def_QuantizedMaxPool.pbtxt tensorflow/core/api_def/python_api/api_def_QuantizedMul.pbtxt tensorflow/core/api_def/python_api/api_def_QuantizedRelu.pbtxt tensorflow/core/api_def/python_api/api_def_QuantizedRelu6.pbtxt tensorflow/core/api_def/python_api/api_def_QuantizedReluX.pbtxt tensorflow/core/api_def/python_api/api_def_QuantizedReshape.pbtxt tensorflow/core/api_def/python_api/api_def_QuantizedResizeBilinear.pbtxt tensorflow/core/api_def/python_api/api_def_QueueClose.pbtxt tensorflow/core/api_def/python_api/api_def_QueueCloseV2.pbtxt tensorflow/core/api_def/python_api/api_def_QueueDequeue.pbtxt tensorflow/core/api_def/python_api/api_def_QueueDequeueMany.pbtxt tensorflow/core/api_def/python_api/api_def_QueueDequeueManyV2.pbtxt tensorflow/core/api_def/python_api/api_def_QueueDequeueUpTo.pbtxt tensorflow/core/api_def/python_api/api_def_QueueDequeueUpToV2.pbtxt tensorflow/core/api_def/python_api/api_def_QueueDequeueV2.pbtxt tensorflow/core/api_def/python_api/api_def_QueueEnqueue.pbtxt tensorflow/core/api_def/python_api/api_def_QueueEnqueueMany.pbtxt tensorflow/core/api_def/python_api/api_def_QueueEnqueueManyV2.pbtxt tensorflow/core/api_def/python_api/api_def_QueueEnqueueV2.pbtxt tensorflow/core/api_def/python_api/api_def_QueueIsClosed.pbtxt tensorflow/core/api_def/python_api/api_def_QueueIsClosedV2.pbtxt tensorflow/core/api_def/python_api/api_def_QueueSize.pbtxt tensorflow/core/api_def/python_api/api_def_QueueSizeV2.pbtxt tensorflow/core/api_def/python_api/api_def_RFFT.pbtxt tensorflow/core/api_def/python_api/api_def_RFFT2D.pbtxt tensorflow/core/api_def/python_api/api_def_RFFT3D.pbtxt tensorflow/core/api_def/python_api/api_def_RGBToHSV.pbtxt tensorflow/core/api_def/python_api/api_def_RandomCrop.pbtxt tensorflow/core/api_def/python_api/api_def_RandomDataset.pbtxt tensorflow/core/api_def/python_api/api_def_RandomGamma.pbtxt tensorflow/core/api_def/python_api/api_def_RandomPoisson.pbtxt tensorflow/core/api_def/python_api/api_def_RandomPoissonV2.pbtxt tensorflow/core/api_def/python_api/api_def_RandomShuffle.pbtxt tensorflow/core/api_def/python_api/api_def_RandomShuffleQueue.pbtxt tensorflow/core/api_def/python_api/api_def_RandomShuffleQueueV2.pbtxt tensorflow/core/api_def/python_api/api_def_RandomStandardNormal.pbtxt tensorflow/core/api_def/python_api/api_def_RandomUniform.pbtxt tensorflow/core/api_def/python_api/api_def_RandomUniformInt.pbtxt tensorflow/core/api_def/python_api/api_def_Range.pbtxt tensorflow/core/api_def/python_api/api_def_RangeDataset.pbtxt tensorflow/core/api_def/python_api/api_def_ReadVariableOp.pbtxt tensorflow/core/api_def/python_api/api_def_ReaderNumRecordsProduced.pbtxt tensorflow/core/api_def/python_api/api_def_ReaderNumRecordsProducedV2.pbtxt tensorflow/core/api_def/python_api/api_def_ReaderNumWorkUnitsCompleted.pbtxt tensorflow/core/api_def/python_api/api_def_ReaderNumWorkUnitsCompletedV2.pbtxt tensorflow/core/api_def/python_api/api_def_ReaderRead.pbtxt tensorflow/core/api_def/python_api/api_def_ReaderReadUpTo.pbtxt tensorflow/core/api_def/python_api/api_def_ReaderReadUpToV2.pbtxt tensorflow/core/api_def/python_api/api_def_ReaderReadV2.pbtxt tensorflow/core/api_def/python_api/api_def_ReaderReset.pbtxt tensorflow/core/api_def/python_api/api_def_ReaderResetV2.pbtxt tensorflow/core/api_def/python_api/api_def_ReaderRestoreState.pbtxt tensorflow/core/api_def/python_api/api_def_ReaderRestoreStateV2.pbtxt tensorflow/core/api_def/python_api/api_def_ReaderSerializeState.pbtxt tensorflow/core/api_def/python_api/api_def_ReaderSerializeStateV2.pbtxt tensorflow/core/api_def/python_api/api_def_Real.pbtxt tensorflow/core/api_def/python_api/api_def_RealDiv.pbtxt tensorflow/core/api_def/python_api/api_def_RecordInput.pbtxt tensorflow/core/api_def/python_api/api_def_ReduceJoin.pbtxt tensorflow/core/api_def/python_api/api_def_RefNextIteration.pbtxt tensorflow/core/api_def/python_api/api_def_RefSelect.pbtxt tensorflow/core/api_def/python_api/api_def_RefSwitch.pbtxt tensorflow/core/api_def/python_api/api_def_Relu.pbtxt tensorflow/core/api_def/python_api/api_def_Relu6.pbtxt tensorflow/core/api_def/python_api/api_def_RemoteCall.pbtxt tensorflow/core/api_def/python_api/api_def_RepeatDataset.pbtxt tensorflow/core/api_def/python_api/api_def_RequantizationRange.pbtxt tensorflow/core/api_def/python_api/api_def_Requantize.pbtxt tensorflow/core/api_def/python_api/api_def_ResizeArea.pbtxt tensorflow/core/api_def/python_api/api_def_ResizeBicubic.pbtxt tensorflow/core/api_def/python_api/api_def_ResizeBilinear.pbtxt tensorflow/core/api_def/python_api/api_def_ResizeNearestNeighbor.pbtxt tensorflow/core/api_def/python_api/api_def_ResourceApplyAdadelta.pbtxt tensorflow/core/api_def/python_api/api_def_ResourceApplyAdagrad.pbtxt tensorflow/core/api_def/python_api/api_def_ResourceApplyAdagradDA.pbtxt tensorflow/core/api_def/python_api/api_def_ResourceApplyAdam.pbtxt tensorflow/core/api_def/python_api/api_def_ResourceApplyAddSign.pbtxt tensorflow/core/api_def/python_api/api_def_ResourceApplyCenteredRMSProp.pbtxt tensorflow/core/api_def/python_api/api_def_ResourceApplyFtrl.pbtxt tensorflow/core/api_def/python_api/api_def_ResourceApplyFtrlV2.pbtxt tensorflow/core/api_def/python_api/api_def_ResourceApplyGradientDescent.pbtxt tensorflow/core/api_def/python_api/api_def_ResourceApplyMomentum.pbtxt tensorflow/core/api_def/python_api/api_def_ResourceApplyPowerSign.pbtxt tensorflow/core/api_def/python_api/api_def_ResourceApplyProximalAdagrad.pbtxt tensorflow/core/api_def/python_api/api_def_ResourceApplyProximalGradientDescent.pbtxt tensorflow/core/api_def/python_api/api_def_ResourceApplyRMSProp.pbtxt tensorflow/core/api_def/python_api/api_def_ResourceCountUpTo.pbtxt tensorflow/core/api_def/python_api/api_def_ResourceGather.pbtxt tensorflow/core/api_def/python_api/api_def_ResourceScatterAdd.pbtxt tensorflow/core/api_def/python_api/api_def_ResourceScatterNdUpdate.pbtxt tensorflow/core/api_def/python_api/api_def_ResourceScatterUpdate.pbtxt tensorflow/core/api_def/python_api/api_def_ResourceSparseApplyAdadelta.pbtxt tensorflow/core/api_def/python_api/api_def_ResourceSparseApplyAdagrad.pbtxt tensorflow/core/api_def/python_api/api_def_ResourceSparseApplyAdagradDA.pbtxt tensorflow/core/api_def/python_api/api_def_ResourceSparseApplyCenteredRMSProp.pbtxt tensorflow/core/api_def/python_api/api_def_ResourceSparseApplyFtrl.pbtxt tensorflow/core/api_def/python_api/api_def_ResourceSparseApplyFtrlV2.pbtxt tensorflow/core/api_def/python_api/api_def_ResourceSparseApplyMomentum.pbtxt tensorflow/core/api_def/python_api/api_def_ResourceSparseApplyProximalAdagrad.pbtxt tensorflow/core/api_def/python_api/api_def_ResourceSparseApplyProximalGradientDescent.pbtxt tensorflow/core/api_def/python_api/api_def_ResourceSparseApplyRMSProp.pbtxt tensorflow/core/api_def/python_api/api_def_ResourceStridedSliceAssign.pbtxt tensorflow/core/api_def/python_api/api_def_Restore.pbtxt tensorflow/core/api_def/python_api/api_def_RestoreSlice.pbtxt tensorflow/core/api_def/python_api/api_def_RestoreV2.pbtxt tensorflow/core/api_def/python_api/api_def_Reverse.pbtxt tensorflow/core/api_def/python_api/api_def_ReverseSequence.pbtxt tensorflow/core/api_def/python_api/api_def_ReverseV2.pbtxt tensorflow/core/api_def/python_api/api_def_RightShift.pbtxt tensorflow/core/api_def/python_api/api_def_Roll.pbtxt tensorflow/core/api_def/python_api/api_def_SampleDistortedBoundingBox.pbtxt tensorflow/core/api_def/python_api/api_def_SampleDistortedBoundingBoxV2.pbtxt tensorflow/core/api_def/python_api/api_def_Save.pbtxt tensorflow/core/api_def/python_api/api_def_SaveSlices.pbtxt tensorflow/core/api_def/python_api/api_def_SaveV2.pbtxt tensorflow/core/api_def/python_api/api_def_ScalarSummary.pbtxt tensorflow/core/api_def/python_api/api_def_ScanDataset.pbtxt tensorflow/core/api_def/python_api/api_def_ScatterNdNonAliasingAdd.pbtxt tensorflow/core/api_def/python_api/api_def_SdcaFprint.pbtxt tensorflow/core/api_def/python_api/api_def_SdcaOptimizer.pbtxt tensorflow/core/api_def/python_api/api_def_SdcaShrinkL1.pbtxt tensorflow/core/api_def/python_api/api_def_Select.pbtxt tensorflow/core/api_def/python_api/api_def_SelfAdjointEig.pbtxt tensorflow/core/api_def/python_api/api_def_SelfAdjointEigV2.pbtxt tensorflow/core/api_def/python_api/api_def_Selu.pbtxt tensorflow/core/api_def/python_api/api_def_SerializeIterator.pbtxt tensorflow/core/api_def/python_api/api_def_SerializeManySparse.pbtxt tensorflow/core/api_def/python_api/api_def_SerializeSparse.pbtxt tensorflow/core/api_def/python_api/api_def_SetSize.pbtxt tensorflow/core/api_def/python_api/api_def_Shape.pbtxt tensorflow/core/api_def/python_api/api_def_ShardedFilename.pbtxt tensorflow/core/api_def/python_api/api_def_ShardedFilespec.pbtxt tensorflow/core/api_def/python_api/api_def_ShuffleAndRepeatDataset.pbtxt tensorflow/core/api_def/python_api/api_def_ShuffleDataset.pbtxt tensorflow/core/api_def/python_api/api_def_Sigmoid.pbtxt tensorflow/core/api_def/python_api/api_def_Size.pbtxt tensorflow/core/api_def/python_api/api_def_SkipDataset.pbtxt tensorflow/core/api_def/python_api/api_def_Skipgram.pbtxt tensorflow/core/api_def/python_api/api_def_Slice.pbtxt tensorflow/core/api_def/python_api/api_def_Snapshot.pbtxt tensorflow/core/api_def/python_api/api_def_Softmax.pbtxt tensorflow/core/api_def/python_api/api_def_SoftmaxCrossEntropyWithLogits.pbtxt tensorflow/core/api_def/python_api/api_def_Softplus.pbtxt tensorflow/core/api_def/python_api/api_def_Softsign.pbtxt tensorflow/core/api_def/python_api/api_def_SpaceToBatch.pbtxt tensorflow/core/api_def/python_api/api_def_SpaceToDepth.pbtxt tensorflow/core/api_def/python_api/api_def_SparseAccumulatorApplyGradient.pbtxt tensorflow/core/api_def/python_api/api_def_SparseAccumulatorTakeGradient.pbtxt tensorflow/core/api_def/python_api/api_def_SparseAdd.pbtxt tensorflow/core/api_def/python_api/api_def_SparseAddGrad.pbtxt tensorflow/core/api_def/python_api/api_def_SparseApplyAdadelta.pbtxt tensorflow/core/api_def/python_api/api_def_SparseApplyAdagrad.pbtxt tensorflow/core/api_def/python_api/api_def_SparseApplyAdagradDA.pbtxt tensorflow/core/api_def/python_api/api_def_SparseApplyCenteredRMSProp.pbtxt tensorflow/core/api_def/python_api/api_def_SparseApplyFtrl.pbtxt tensorflow/core/api_def/python_api/api_def_SparseApplyFtrlV2.pbtxt tensorflow/core/api_def/python_api/api_def_SparseApplyMomentum.pbtxt tensorflow/core/api_def/python_api/api_def_SparseApplyProximalAdagrad.pbtxt tensorflow/core/api_def/python_api/api_def_SparseApplyProximalGradientDescent.pbtxt tensorflow/core/api_def/python_api/api_def_SparseApplyRMSProp.pbtxt tensorflow/core/api_def/python_api/api_def_SparseConcat.pbtxt tensorflow/core/api_def/python_api/api_def_SparseConditionalAccumulator.pbtxt tensorflow/core/api_def/python_api/api_def_SparseCross.pbtxt tensorflow/core/api_def/python_api/api_def_SparseDenseCwiseAdd.pbtxt tensorflow/core/api_def/python_api/api_def_SparseDenseCwiseDiv.pbtxt tensorflow/core/api_def/python_api/api_def_SparseDenseCwiseMul.pbtxt tensorflow/core/api_def/python_api/api_def_SparseFillEmptyRows.pbtxt tensorflow/core/api_def/python_api/api_def_SparseFillEmptyRowsGrad.pbtxt tensorflow/core/api_def/python_api/api_def_SparseMatMul.pbtxt tensorflow/core/api_def/python_api/api_def_SparseReorder.pbtxt tensorflow/core/api_def/python_api/api_def_SparseReshape.pbtxt tensorflow/core/api_def/python_api/api_def_SparseSegmentMean.pbtxt tensorflow/core/api_def/python_api/api_def_SparseSegmentMeanGrad.pbtxt tensorflow/core/api_def/python_api/api_def_SparseSegmentMeanWithNumSegments.pbtxt tensorflow/core/api_def/python_api/api_def_SparseSegmentSqrtN.pbtxt tensorflow/core/api_def/python_api/api_def_SparseSegmentSqrtNGrad.pbtxt tensorflow/core/api_def/python_api/api_def_SparseSegmentSqrtNWithNumSegments.pbtxt tensorflow/core/api_def/python_api/api_def_SparseSegmentSum.pbtxt tensorflow/core/api_def/python_api/api_def_SparseSegmentSumWithNumSegments.pbtxt tensorflow/core/api_def/python_api/api_def_SparseSoftmaxCrossEntropyWithLogits.pbtxt tensorflow/core/api_def/python_api/api_def_SparseSparseMaximum.pbtxt tensorflow/core/api_def/python_api/api_def_SparseSparseMinimum.pbtxt tensorflow/core/api_def/python_api/api_def_SparseSplit.pbtxt tensorflow/core/api_def/python_api/api_def_SparseTensorDenseAdd.pbtxt tensorflow/core/api_def/python_api/api_def_SparseTensorDenseMatMul.pbtxt tensorflow/core/api_def/python_api/api_def_SparseTensorSliceDataset.pbtxt tensorflow/core/api_def/python_api/api_def_SparseToDense.pbtxt tensorflow/core/api_def/python_api/api_def_SparseToSparseSetOperation.pbtxt tensorflow/core/api_def/python_api/api_def_Split.pbtxt tensorflow/core/api_def/python_api/api_def_SplitV.pbtxt tensorflow/core/api_def/python_api/api_def_SqlDataset.pbtxt tensorflow/core/api_def/python_api/api_def_Squeeze.pbtxt tensorflow/core/api_def/python_api/api_def_Stack.pbtxt tensorflow/core/api_def/python_api/api_def_StackClose.pbtxt tensorflow/core/api_def/python_api/api_def_StackCloseV2.pbtxt tensorflow/core/api_def/python_api/api_def_StackPop.pbtxt tensorflow/core/api_def/python_api/api_def_StackPopV2.pbtxt tensorflow/core/api_def/python_api/api_def_StackPush.pbtxt tensorflow/core/api_def/python_api/api_def_StackPushV2.pbtxt tensorflow/core/api_def/python_api/api_def_StackV2.pbtxt tensorflow/core/api_def/python_api/api_def_Stage.pbtxt tensorflow/core/api_def/python_api/api_def_StageClear.pbtxt tensorflow/core/api_def/python_api/api_def_StagePeek.pbtxt tensorflow/core/api_def/python_api/api_def_StageSize.pbtxt tensorflow/core/api_def/python_api/api_def_StatsAggregatorHandle.pbtxt tensorflow/core/api_def/python_api/api_def_StatsAggregatorSummary.pbtxt tensorflow/core/api_def/python_api/api_def_StridedSlice.pbtxt tensorflow/core/api_def/python_api/api_def_StridedSliceAssign.pbtxt tensorflow/core/api_def/python_api/api_def_StridedSliceGrad.pbtxt tensorflow/core/api_def/python_api/api_def_StringSplit.pbtxt tensorflow/core/api_def/python_api/api_def_Sub.pbtxt tensorflow/core/api_def/python_api/api_def_Sum.pbtxt tensorflow/core/api_def/python_api/api_def_Svd.pbtxt tensorflow/core/api_def/python_api/api_def_Switch.pbtxt tensorflow/core/api_def/python_api/api_def_SymbolicGradient.pbtxt tensorflow/core/api_def/python_api/api_def_TFRecordDataset.pbtxt tensorflow/core/api_def/python_api/api_def_TFRecordReader.pbtxt tensorflow/core/api_def/python_api/api_def_TFRecordReaderV2.pbtxt tensorflow/core/api_def/python_api/api_def_TakeDataset.pbtxt tensorflow/core/api_def/python_api/api_def_TakeManySparseFromTensorsMap.pbtxt tensorflow/core/api_def/python_api/api_def_Tanh.pbtxt tensorflow/core/api_def/python_api/api_def_TemporaryVariable.pbtxt tensorflow/core/api_def/python_api/api_def_TensorArray.pbtxt tensorflow/core/api_def/python_api/api_def_TensorArrayClose.pbtxt tensorflow/core/api_def/python_api/api_def_TensorArrayCloseV2.pbtxt tensorflow/core/api_def/python_api/api_def_TensorArrayCloseV3.pbtxt tensorflow/core/api_def/python_api/api_def_TensorArrayConcat.pbtxt tensorflow/core/api_def/python_api/api_def_TensorArrayConcatV2.pbtxt tensorflow/core/api_def/python_api/api_def_TensorArrayConcatV3.pbtxt tensorflow/core/api_def/python_api/api_def_TensorArrayGather.pbtxt tensorflow/core/api_def/python_api/api_def_TensorArrayGatherV2.pbtxt tensorflow/core/api_def/python_api/api_def_TensorArrayGatherV3.pbtxt tensorflow/core/api_def/python_api/api_def_TensorArrayGrad.pbtxt tensorflow/core/api_def/python_api/api_def_TensorArrayGradV2.pbtxt tensorflow/core/api_def/python_api/api_def_TensorArrayGradV3.pbtxt tensorflow/core/api_def/python_api/api_def_TensorArrayPack.pbtxt tensorflow/core/api_def/python_api/api_def_TensorArrayRead.pbtxt tensorflow/core/api_def/python_api/api_def_TensorArrayReadV2.pbtxt tensorflow/core/api_def/python_api/api_def_TensorArrayReadV3.pbtxt tensorflow/core/api_def/python_api/api_def_TensorArrayScatter.pbtxt tensorflow/core/api_def/python_api/api_def_TensorArrayScatterV2.pbtxt tensorflow/core/api_def/python_api/api_def_TensorArrayScatterV3.pbtxt tensorflow/core/api_def/python_api/api_def_TensorArraySize.pbtxt tensorflow/core/api_def/python_api/api_def_TensorArraySizeV2.pbtxt tensorflow/core/api_def/python_api/api_def_TensorArraySizeV3.pbtxt tensorflow/core/api_def/python_api/api_def_TensorArraySplit.pbtxt tensorflow/core/api_def/python_api/api_def_TensorArraySplitV2.pbtxt tensorflow/core/api_def/python_api/api_def_TensorArraySplitV3.pbtxt tensorflow/core/api_def/python_api/api_def_TensorArrayUnpack.pbtxt tensorflow/core/api_def/python_api/api_def_TensorArrayV2.pbtxt tensorflow/core/api_def/python_api/api_def_TensorArrayV3.pbtxt tensorflow/core/api_def/python_api/api_def_TensorArrayWrite.pbtxt tensorflow/core/api_def/python_api/api_def_TensorArrayWriteV2.pbtxt tensorflow/core/api_def/python_api/api_def_TensorArrayWriteV3.pbtxt tensorflow/core/api_def/python_api/api_def_TensorDataset.pbtxt tensorflow/core/api_def/python_api/api_def_TensorSliceDataset.pbtxt tensorflow/core/api_def/python_api/api_def_TensorSummary.pbtxt tensorflow/core/api_def/python_api/api_def_TensorSummaryV2.pbtxt tensorflow/core/api_def/python_api/api_def_TextLineDataset.pbtxt tensorflow/core/api_def/python_api/api_def_TextLineReader.pbtxt tensorflow/core/api_def/python_api/api_def_TextLineReaderV2.pbtxt tensorflow/core/api_def/python_api/api_def_ThreadUnsafeUnigramCandidateSampler.pbtxt tensorflow/core/api_def/python_api/api_def_TileGrad.pbtxt tensorflow/core/api_def/python_api/api_def_TopK.pbtxt tensorflow/core/api_def/python_api/api_def_TopKV2.pbtxt tensorflow/core/api_def/python_api/api_def_Transpose.pbtxt tensorflow/core/api_def/python_api/api_def_TruncateDiv.pbtxt tensorflow/core/api_def/python_api/api_def_TruncateMod.pbtxt tensorflow/core/api_def/python_api/api_def_TruncatedNormal.pbtxt tensorflow/core/api_def/python_api/api_def_UniformCandidateSampler.pbtxt tensorflow/core/api_def/python_api/api_def_Unique.pbtxt tensorflow/core/api_def/python_api/api_def_UniqueV2.pbtxt tensorflow/core/api_def/python_api/api_def_UniqueWithCounts.pbtxt tensorflow/core/api_def/python_api/api_def_UniqueWithCountsV2.pbtxt tensorflow/core/api_def/python_api/api_def_Unpack.pbtxt tensorflow/core/api_def/python_api/api_def_Unstage.pbtxt tensorflow/core/api_def/python_api/api_def_VarHandleOp.pbtxt tensorflow/core/api_def/python_api/api_def_VarIsInitializedOp.pbtxt tensorflow/core/api_def/python_api/api_def_Variable.pbtxt tensorflow/core/api_def/python_api/api_def_VariableShape.pbtxt tensorflow/core/api_def/python_api/api_def_VariableV2.pbtxt tensorflow/core/api_def/python_api/api_def_Where.pbtxt tensorflow/core/api_def/python_api/api_def_WholeFileReader.pbtxt tensorflow/core/api_def/python_api/api_def_WholeFileReaderV2.pbtxt tensorflow/core/api_def/python_api/api_def_ZerosLike.pbtxt tensorflow/core/api_def/python_api/api_def_ZipDataset.pbtxt | cut -d\" \" -f1)) '' 1 0 > bazel-out/darwin-py3-opt/genfiles/tensorflow/python/ops/gen_spectral_ops.py\r\nTarget //tensorflow/tools/pip_package:build_pip_package failed to build\r\nINFO: Elapsed time: 168.766s, Critical Path: 25.11s\r\nFAILED: Build did NOT complete successfully\r\n```\r\n\r\nHope for your reply, thx :)\r\n", "**UPDATE**\r\n**Add some WARNINGS showed when the build start**\r\n```bash\r\n...........\r\nWARNING: /private/var/tmp/_bazel_root/0eba6f6098a6503a904b53a8d6ef75da/external/protobuf_archive/WORKSPACE:1: Workspace name in /private/var/tmp/_bazel_root/0eba6f6098a6503a904b53a8d6ef75da/external/protobuf_archive/WORKSPACE (@com_google_protobuf) does not match the name given in the repository's definition (@protobuf_archive); this will cause a build error in future versions\r\nWARNING: /private/var/tmp/_bazel_root/0eba6f6098a6503a904b53a8d6ef75da/external/grpc/WORKSPACE:1: Workspace name in /private/var/tmp/_bazel_root/0eba6f6098a6503a904b53a8d6ef75da/external/grpc/WORKSPACE (@com_github_grpc_grpc) does not match the name given in the repository's definition (@grpc); this will cause a build error in future versions\r\nWARNING: /Users/shian/tf_r17/tensorflow/tensorflow/core/BUILD:1955:1: in includes attribute of cc_library rule //tensorflow/core:framework_headers_lib: '../../external/nsync/public' resolves to 'external/nsync/public' not below the relative path of its package 'tensorflow/core'. This will be an error in the future. Since this rule was created by the macro 'cc_header_only_library', the error might have been caused by the macro implementation in /Users/shian/tf_r17/tensorflow/tensorflow/tensorflow.bzl:1179:30\r\nWARNING: /Users/shian/tf_r17/tensorflow/tensorflow/core/BUILD:1955:1: in includes attribute of cc_library rule //tensorflow/core:framework_headers_lib: '../../external/nsync/public' resolves to 'external/nsync/public' not below the relative path of its package 'tensorflow/core'. This will be an error in the future. Since this rule was created by the macro 'cc_header_only_library', the error might have been caused by the macro implementation in /Users/shian/tf_r17/tensorflow/tensorflow/tensorflow.bzl:1179:30\r\nWARNING: /Users/shian/tf_r17/tensorflow/tensorflow/contrib/learn/BUILD:15:1: in py_library rule //tensorflow/contrib/learn:learn: target '//tensorflow/contrib/learn:learn' depends on deprecated target '//tensorflow/contrib/session_bundle:exporter': No longer supported. Switch to SavedModel immediately.\r\nWARNING: /Users/shian/tf_r17/tensorflow/tensorflow/contrib/learn/BUILD:15:1: in py_library rule //tensorflow/contrib/learn:learn: target '//tensorflow/contrib/learn:learn' depends on deprecated target '//tensorflow/contrib/session_bundle:gc': No longer supported. Switch to SavedModel immediately.\r\n```\r\n\r\n**It seems like that these WARNINGS have relationships with the ERROR that cause the build failed. But I can not figure out why and how to fix it.**", "I have a description of the changes needed for MacOS GPU compilation at https://gist.github.com/MatthiasWinkelmann/41dd42b07f8bd794aa462f3b9712c018\r\n\r\nhttps://github.com/MatthiasWinkelmann/tensorflow also contains the patches, but it's only updated every few months.\r\n\r\nFWIW the changes are rather minor and have not changed much over the last few releases. So you may indeed be right that the Tensorflow dev team may want to consider supporting MacOS again. But if not (and there may be a support burden apart from the source changes needed) it has been much less of a problem than initially feared.", "@MatthiasWinkelmann I have a bit of an ignorant question... What does the `constexpr` section achieve in your guide? I don't remember making those changes when compiling with GPU support on macOS in the past... \r\n\r\nAlso is installing `gcc`, etc truly necessary? I just checked and although I have installed gcc through Homebrew, it has also been installed through Xcode (and in `.tf_configure_bazelrc` `GCC_HOST_COMPILER_PATH=\"/usr/bin/gcc\"`) and my somewhat recent builds are working fine (although I am using Xcode 8.2.1). ", "@FrederickGeek8 I must admit I have too little understanding of C to really know what I am doing in those changes. I simply cobbled them together by searching for the errors I got trying to compile Tensorflow.\r\n\r\nI installed ```gcc``` because ```libgomp``` was missing without it. See https://github.com/tensorflow/tensorflow/issues/14898 for one of the typical errors you get without these changes.", "@martinwicke, have we considered this?", "We stopped supporting eGPU for MacOS because we could not find hardware we can use to build, and there was a time when there the latest MacOS did not support the latest CUDA at all. That may have changed, but I do not want to support MacOS GPU unless Apple and NVIDIA can agree that they will support each other to a degree where we can rely on it. As far as I can tell, that has not happened.\r\n\r\nSo for now, there won't be official support, and we do not have the ability to offer MacOS GPU builds. **However**, I would be extremely happy to get PRs to fix the MacOS GPU issues (ie the patches in https://github.com/MatthiasWinkelmann/tensorflow). \r\n\r\nJust because we cannot officially support this (and offer binaries) doesn't mean we shouldn't make it work!", "I will close this issue since I don't see it as actionable right now."]}, {"number": 18338, "title": "SeparableConv2D from tf.keras.layers and tf.layers gives different results", "body": "Please go to Stack Overflow for help and support:\r\n\r\nhttps://stackoverflow.com/questions/tagged/tensorflow\r\n\r\nIf you open a GitHub issue, here is our policy:\r\n\r\n1. It must be a bug, a feature request, or a significant problem with documentation (for small docs fixes please send a PR instead).\r\n2. The form below must be filled out.\r\n3. It shouldn't be a TensorBoard issue. Those go [here](https://github.com/tensorflow/tensorboard/issues).\r\n\r\n**Here's why we have that policy**: TensorFlow developers respond to issues. We want to focus on work that benefits the whole community, e.g., fixing bugs and adding features. Support only helps individuals. GitHub also notifies thousands of people when issues are filed. We want them to see you communicating an interesting problem, rather than being redirected to Stack Overflow.\r\n\r\n------------------------\r\n\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: No\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Windows 10\r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version (use command below)**: 1.7.0\r\n- **Python version**: 3.6.5\r\n- **Bazel version (if compiling from source)**: NA\r\n- **GCC/Compiler version (if compiling from source)**: NA\r\n- **CUDA/cuDNN version**: NA\r\n- **GPU model and memory**: NA\r\n- **Exact command to reproduce**: See source code\r\n\r\nYou can collect some of this information using our environment capture script:\r\n\r\nhttps://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh\r\n\r\nYou can obtain the TensorFlow version with\r\n\r\npython -c \"import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)\"\r\n\r\n### Describe the problem\r\nDescribe the problem clearly here. Be sure to convey here why it's a bug in TensorFlow or a feature request.\r\n\r\nThe shape of the weight matrices of a SeparableConv2D using tf.keras.layers and tf.layers is different even when using the same arguments. It looks like the SeparableConv2D class from tf.keras.layers is ignoring the `depth_multiplier` argument.\r\n\r\n### Source code / logs\r\nInclude any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached. Try to provide a reproducible test case that is the bare minimum necessary to generate the problem.\r\n\r\n```\r\nimport tensorflow as tf\r\n\r\nsess = tf.InteractiveSession()\r\n\r\nsep_conv1 = tf.keras.layers.SeparableConv2D(filters=2, kernel_size=2, strides=1, padding='same', depth_multiplier=5)\r\nsep_conv2 = tf.layers.SeparableConv2D(filters=2, kernel_size=2, strides=1, padding='same', depth_multiplier=5)\r\n\r\nx = tf.random_uniform((1, 4, 4, 3), minval=1, maxval=10, dtype=tf.int32)\r\nx = tf.cast(x, tf.float32)\r\n\r\ny1 = sep_conv1(x)\r\ny2 = sep_conv2(x)\r\n\r\ninit = tf.global_variables_initializer()\r\nsess.run(init)\r\nsess.run([y1, y2])\r\n\r\n# the shape of the depthwise_kernel is (2, 2, 3, 1) and the shape of the pointwise_kernel is (1, 1, 3, 2)\r\nfor w in sep_conv1.variables:\r\n    print(w)\r\n\r\n# the shape of the depthwise_kernel is (2, 2, 3, 5) and the shape of the pointwise_kernel is (1, 1, 15, 2)\r\nfor w in sep_conv2.variables:\r\n    print(w)\r\n```\r\n", "comments": ["You're right- seems the keras implementation takes the `depth_multiplier` argument but does nothing with it. This seems to be true for both `SeparableConv1D` and `SeparableConv2D`. See https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/keras/_impl/keras/layers/convolutional.py#L941-L983. I'd be happy to put in a PR fixing it but I wonder if it was left out intentionally?", "I think a fix would look something like this- https://github.com/kr-ish/tensorflow/commit/676778f16e6efbde5b59f753e7e85d74359d046f, but perhaps with an added test case", "It is still replicating in[ 2.8 ](https://colab.sandbox.google.com/gist/mohantym/0f0d2e5fc3f6f9f754bc237c6c203c6a/github_18338.ipynb)version. \r\n\r\nPlease post this issue on [keras-team/keras repo](https://github.com/keras-team/keras/issues)\r\nTo know more see;\r\n[https://discuss.tensorflow.org/t/keras-project-moved-to-new-repository-in-https-github-com-keras-team-keras/1999](https://discuss.tensorflow.org/t/keras-project-moved-to-new-repository-in-https-github-com-keras-team-keras/1999) . Thanks!", "This issue has been automatically marked as stale because it has no recent activity. It will be closed if no further activity occurs. Thank you.\n", "Closing as stale. Please reopen if you'd like to work on this further.\n"]}, {"number": 18337, "title": "   c_api.TF_GetCode(self.status.status)) tensorflow.python.framework.errors_impl.NotFoundError: ; No such file or directory \t [[Node: save_1/SaveV2 = SaveV2[", "body": "Please suggest what is wrong and how to fix it:\r\n-----------------------------------------\r\nRight on the 60k iteration, I got this error, please suggest what might have been wrong. Can you also share your models for MPII human pose dataset? I basically followed all the instructions for training and had no error until 60k-th iteration!! The error is cause when using this repo https://github.com/eldar/pose-tensorflow/issues/71\r\n\r\n```\r\niteration: 59940 loss: 0.0395 lr: 0.02\r\niteration: 59960 loss: 0.0473 lr: 0.02\r\niteration: 59980 loss: 0.0389 lr: 0.02\r\niteration: 60000 loss: 0.0414 lr: 0.02\r\n2018-04-08 21:22:32.268116: W tensorflow/core/framework/op_kernel.cc:1192] Not found: ; No such file or directory\r\nTraceback (most recent call last):\r\n  File \"/scratch/sjn/anaconda/lib/python3.6/site-packages/tensorflow/python/client/session.py\", line 1323, in _do_call\r\n    return fn(*args)\r\n  File \"/scratch/sjn/anaconda/lib/python3.6/site-packages/tensorflow/python/client/session.py\", line 1302, in _run_fn\r\n    status, run_metadata)\r\n  File \"/scratch/sjn/anaconda/lib/python3.6/site-packages/tensorflow/python/framework/errors_impl.py\", line 473, in __exit__\r\n    c_api.TF_GetCode(self.status.status))\r\ntensorflow.python.framework.errors_impl.NotFoundError: ; No such file or directory\r\n\t [[Node: save_1/SaveV2 = SaveV2[dtypesdevice=\"/job:localhost/replica:0/task:0/device:CPU:0\"](_arg_save_1/Const_0_0, save_1/SaveV2/tensor_names, save_1/SaveV2/shape_and_slices, pose/intermediate_supervision/block4/biases/_1167, pose/intermediate_supervision/block4/weights/_1169, pose/locref_pred/block4/biases/_1171, pose/locref_pred/block4/weights/_1173, pose/part_pred/block4/biases/_1175, pose/part_pred/block4/weights/_1177, resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/BatchNorm/beta/_1179, resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/_1181, resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean/_1183, resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance/_1185, resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/weights/_1187, resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/BatchNorm/beta/_1189, resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/_1191, resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean/_1193, resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance/_1195, resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/weights/_1197, resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/BatchNorm/beta/_1199, resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/_1201, resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean/_1203, resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance/_1205, resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/weights/_1207, resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/_1209, resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/_1211, resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean/_1213, resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance/_1215, resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/weights/_1217, resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/BatchNorm/beta/_1219, resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/_1221, resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean/_1223, resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance/_1225, resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/weights/_1227, resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/BatchNorm/beta/_1229, resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/_1231, resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean/_1233, resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance/_1235, resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/weights/_1237, resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/BatchNorm/beta/_1239, resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/_1241, resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean/_1243, resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance/_1245, resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/weights/_1247, resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/BatchNorm/beta/_1249, resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/_1251, resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean/_1253, resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance/_1255, resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/weights/_1257, resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/BatchNorm/beta/_1259, resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/_1261, resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean/_1263, resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance/_1265, resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/weights/_1267, resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/BatchNorm/beta/_1269, resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/_1271, resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean/_1273, resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance/_1275, resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/weights/_1277, resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/BatchNorm/beta/_1279, resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/_1281, resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean/_1283, resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance/_1285, resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/weights/_1287, resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/BatchNorm/beta/_1289, resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/_1291, resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean/_1293, resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance/_1295, resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/weights/_1297, resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/BatchNorm/beta/_1299, resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/_1301, resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean/_1303, resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance/_1305, resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/weights/_1307, resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/_1309, resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/_1311, resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean/_1313, resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance/_1315, resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/weights/_1317, resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/BatchNorm/beta/_1319, resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/_1321, resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean/_1323, resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance/_1325, resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/weights/_1327, resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/BatchNorm/beta/_1329, resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/_1331, resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean/_1333, resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance/_1335, resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/weights/_1337, resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/BatchNorm/beta/_1339, resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/_1341, resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean/_1343, resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance/_1345, resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/weights/_1347, resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/BatchNorm/beta/_1349, resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/_1351, resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean/_1353, resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance/_1355, resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/weights/_1357, resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/BatchNorm/beta/_1359, resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/_1361, resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean/_1363, resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance/_1365, resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/weights/_1367, resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/BatchNorm/beta/_1369, resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/_1371, resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean/_1373, resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance/_1375, resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/weights/_1377, resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/BatchNorm/beta/_1379, resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/BatchNorm/gamma/_1381, resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/BatchNorm/moving_mean/_1383, resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/BatchNorm/moving_variance/_1385, resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/weights/_1387, resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/BatchNorm/beta/_1389, resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/BatchNorm/gamma/_1391, resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/BatchNorm/moving_mean/_1393, resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/BatchNorm/moving_variance/_1395, resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/weights/_1397, resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/BatchNorm/beta/_1399, resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/BatchNorm/gamma/_1401, resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean/_1403, resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance/_1405, resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/weights/_1407, resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/BatchNorm/beta/_1409, resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/_1411, resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean/_1413, resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance/_1415, resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/weights/_1417, resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/BatchNorm/beta/_1419, resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/_1421, resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean/_1423, resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance/_1425, resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/weights/_1427, resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/BatchNorm/beta/_1429, resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/_1431, resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean/_1433, resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance/_1435, resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/weights/_1437, resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/_1439, resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/_1441, resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean/_1443, resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance/_1445, resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/weights/_1447, resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/BatchNorm/beta/_1449, resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/BatchNorm/gamma/_1451, resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/BatchNorm/moving_mean/_1453, resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/BatchNorm/moving_variance/_1455, resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/weights/_1457, resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/BatchNorm/beta/_1459, resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/BatchNorm/gamma/_1461, resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/BatchNorm/moving_mean/_1463, resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/BatchNorm/moving_variance/_1465, resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/weights/_1467, resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/BatchNorm/beta/_1469, resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/BatchNorm/gamma/_1471, resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/BatchNorm/moving_mean/_1473, resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/BatchNorm/moving_variance/_1475, resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/weights/_1477, resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/BatchNorm/beta/_1479, resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/BatchNorm/gamma/_1481, resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/BatchNorm/moving_mean/_1483, resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/BatchNorm/moving_variance/_1485, resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/weights/_1487, resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/BatchNorm/beta/_1489, resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/BatchNorm/gamma/_1491, resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/BatchNorm/moving_mean/_1493, resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/BatchNorm/moving_variance/_1495, resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/weights/_1497, resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/BatchNorm/beta/_1499, resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/BatchNorm/gamma/_1501, resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/BatchNorm/moving_mean/_1503, resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/BatchNorm/moving_variance/_1505, resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/weights/_1507, resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/BatchNorm/beta/_1509, resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/BatchNorm/gamma/_1511, resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/BatchNorm/moving_mean/_1513, resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/BatchNorm/moving_variance/_1515, resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/weights/_1517, resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/BatchNorm/beta/_1519, resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/BatchNorm/gamma/_1521, resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/BatchNorm/moving_mean/_1523, resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/BatchNorm/moving_variance/_1525, resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/weights/_1527, resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/BatchNorm/beta/_1529, resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/BatchNorm/gamma/_1531, resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/BatchNorm/moving_mean/_1533, resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/BatchNorm/moving_variance/_1535, resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/weights/_1537, resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/BatchNorm/beta/_1539, resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/BatchNorm/gamma/_1541, resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/BatchNorm/moving_mean/_1543, resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/BatchNorm/moving_variance/_1545, resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/weights/_1547, resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/BatchNorm/beta/_1549, resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/BatchNorm/gamma/_1551, resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/BatchNorm/moving_mean/_1553, resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/BatchNorm/moving_variance/_1555, resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/weights/_1557, resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/BatchNorm/beta/_1559, resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/BatchNorm/gamma/_1561, resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/BatchNorm/moving_mean/_1563, resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/BatchNorm/moving_variance/_1565, resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/weights/_1567, resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/BatchNorm/beta/_1569, resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/BatchNorm/gamma/_1571, resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/BatchNorm/moving_mean/_1573, resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/BatchNorm/moving_variance/_1575, resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/weights/_1577, resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/BatchNorm/beta/_1579, resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/BatchNorm/gamma/_1581, resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/BatchNorm/moving_mean/_1583, resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/BatchNorm/moving_variance/_1585, resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/weights/_1587, resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/BatchNorm/beta/_1589, resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/BatchNorm/gamma/_1591, resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/BatchNorm/moving_mean/_1593, resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/BatchNorm/moving_variance/_1595, resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/weights/_1597, resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/BatchNorm/beta/_1599, resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/BatchNorm/gamma/_1601, resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/BatchNorm/moving_mean/_1603, resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/BatchNorm/moving_variance/_1605, resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/weights/_1607, resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/BatchNorm/beta/_1609, resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/BatchNorm/gamma/_1611, resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/BatchNorm/moving_mean/_1613, resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/BatchNorm/moving_variance/_1615, resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/weights/_1617, resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/BatchNorm/beta/_1619, resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/BatchNorm/gamma/_1621, resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/BatchNorm/moving_mean/_1623, resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/BatchNorm/moving_variance/_1625, resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/weights/_1627, resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/BatchNorm/beta/_1629, resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/BatchNorm/gamma/_1631, resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/BatchNorm/moving_mean/_1633, resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/BatchNorm/moving_variance/_1635, resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/weights/_1637, resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/BatchNorm/beta/_1639, resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/BatchNorm/gamma/_1641, resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/BatchNorm/moving_mean/_1643, resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/BatchNorm/moving_variance/_1645, resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/weights/_1647, resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/BatchNorm/beta/_1649, resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/BatchNorm/gamma/_1651, resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/BatchNorm/moving_mean/_1653, resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/BatchNorm/moving_variance/_1655, resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/weights/_1657, resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/BatchNorm/beta/_1659, resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/BatchNorm/gamma/_1661, resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/BatchNorm/moving_mean/_1663, resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/BatchNorm/moving_variance/_1665, resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/weights/_1667, resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/BatchNorm/beta/_1669, resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/BatchNorm/gamma/_1671, resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/BatchNorm/moving_mean/_1673, resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/BatchNorm/moving_variance/_1675, resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/weights/_1677, resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/BatchNorm/beta/_1679, resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/BatchNorm/gamma/_1681, resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/BatchNorm/moving_mean/_1683, resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/BatchNorm/moving_variance/_1685, resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/weights/_1687, resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/BatchNorm/beta/_1689, resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/BatchNorm/gamma/_1691, resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/BatchNorm/moving_mean/_1693, resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/BatchNorm/moving_variance/_1695, resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/weights/_1697, resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/BatchNorm/beta/_1699, resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/BatchNorm/gamma/_1701, resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/BatchNorm/moving_mean/_1703, resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/BatchNorm/moving_variance/_1705, resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/weights/_1707, resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/BatchNorm/beta/_1709, resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/BatchNorm/gamma/_1711, resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/BatchNorm/moving_mean/_1713, resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/BatchNorm/moving_variance/_1715, resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/weights/_1717, resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/BatchNorm/beta/_1719, resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/BatchNorm/gamma/_1721, resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/BatchNorm/moving_mean/_1723, resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/BatchNorm/moving_variance/_1725, resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/weights/_1727, resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/BatchNorm/beta/_1729, resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/BatchNorm/gamma/_1731, resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/BatchNorm/moving_mean/_1733, resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/BatchNorm/moving_variance/_1735, resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/weights/_1737, resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/BatchNorm/beta/_1739, resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/BatchNorm/gamma/_1741, resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/BatchNorm/moving_mean/_1743, resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/BatchNorm/moving_variance/_1745, resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/weights/_1747, resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/BatchNorm/beta/_1749, resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/_1751, resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean/_1753, resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance/_1755, resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/weights/_1757, resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/BatchNorm/beta/_1759, resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/_1761, resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean/_1763, resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance/_1765, resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/weights/_1767, resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/BatchNorm/beta/_1769, resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/_1771, resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean/_1773, resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance/_1775, resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/weights/_1777, resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/BatchNorm/beta/_1779, resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/BatchNorm/gamma/_1781, resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/BatchNorm/moving_mean/_1783, resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/BatchNorm/moving_variance/_1785, resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/weights/_1787, resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/BatchNorm/beta/_1789, resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/BatchNorm/gamma/_1791, resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/BatchNorm/moving_mean/_1793, resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/BatchNorm/moving_variance/_1795, resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/weights/_1797, resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/BatchNorm/beta/_1799, resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/BatchNorm/gamma/_1801, resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/BatchNorm/moving_mean/_1803, resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/BatchNorm/moving_variance/_1805, resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/weights/_1807, resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/BatchNorm/beta/_1809, resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/BatchNorm/gamma/_1811, resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/BatchNorm/moving_mean/_1813, resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/BatchNorm/moving_variance/_1815, resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/weights/_1817, resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/BatchNorm/beta/_1819, resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/BatchNorm/gamma/_1821, resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/BatchNorm/moving_mean/_1823, resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/BatchNorm/moving_variance/_1825, resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/weights/_1827, resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/BatchNorm/beta/_1829, resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/BatchNorm/gamma/_1831, resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/BatchNorm/moving_mean/_1833, resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/BatchNorm/moving_variance/_1835, resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/weights/_1837, resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/BatchNorm/beta/_1839, resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/BatchNorm/gamma/_1841, resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/BatchNorm/moving_mean/_1843, resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/BatchNorm/moving_variance/_1845, resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/weights/_1847, resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/BatchNorm/beta/_1849, resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/BatchNorm/gamma/_1851, resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/BatchNorm/moving_mean/_1853, resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/BatchNorm/moving_variance/_1855, resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/weights/_1857, resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/BatchNorm/beta/_1859, resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/BatchNorm/gamma/_1861, resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/BatchNorm/moving_mean/_1863, resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/BatchNorm/moving_variance/_1865, resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/weights/_1867, resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/BatchNorm/beta/_1869, resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/BatchNorm/gamma/_1871, resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/BatchNorm/moving_mean/_1873, resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/BatchNorm/moving_variance/_1875, resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/weights/_1877, resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/BatchNorm/beta/_1879, resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/BatchNorm/gamma/_1881, resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/BatchNorm/moving_mean/_1883, resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/BatchNorm/moving_variance/_1885, resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/weights/_1887, resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/BatchNorm/beta/_1889, resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/BatchNorm/gamma/_1891, resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/BatchNorm/moving_mean/_1893, resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/BatchNorm/moving_variance/_1895, resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/weights/_1897, resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/BatchNorm/beta/_1899, resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/_1901, resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean/_1903, resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance/_1905, resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/weights/_1907, resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/BatchNorm/beta/_1909, resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/_1911, resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean/_1913, resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance/_1915, resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/weights/_1917, resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/BatchNorm/beta/_1919, resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/_1921, resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean/_1923, resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance/_1925, resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/weights/_1927, resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/BatchNorm/beta/_1929, resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/BatchNorm/gamma/_1931, resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/BatchNorm/moving_mean/_1933, resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/BatchNorm/moving_variance/_1935, resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/weights/_1937, resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/BatchNorm/beta/_1939, resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/BatchNorm/gamma/_1941, resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/BatchNorm/moving_mean/_1943, resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/BatchNorm/moving_variance/_1945, resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/weights/_1947, resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/BatchNorm/beta/_1949, resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/BatchNorm/gamma/_1951, resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean/_1953, resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance/_1955, resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/weights/_1957, resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/BatchNorm/beta/_1959, resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/BatchNorm/gamma/_1961, resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/BatchNorm/moving_mean/_1963, resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/BatchNorm/moving_variance/_1965, resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/weights/_1967, resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/BatchNorm/beta/_1969, resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/BatchNorm/gamma/_1971, resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/BatchNorm/moving_mean/_1973, resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/BatchNorm/moving_variance/_1975, resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/weights/_1977, resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/BatchNorm/beta/_1979, resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/BatchNorm/gamma/_1981, resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_mean/_1983, resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_variance/_1985, resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/weights/_1987, resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/BatchNorm/beta/_1989, resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/BatchNorm/gamma/_1991, resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/BatchNorm/moving_mean/_1993, resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/BatchNorm/moving_variance/_1995, resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/weights/_1997, resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/BatchNorm/beta/_1999, resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/BatchNorm/gamma/_2001, resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/BatchNorm/moving_mean/_2003, resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/BatchNorm/moving_variance/_2005, resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/weights/_2007, resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/BatchNorm/beta/_2009, resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/BatchNorm/gamma/_2011, resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_mean/_2013, resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_variance/_2015, resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/weights/_2017, resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/BatchNorm/beta/_2019, resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/BatchNorm/gamma/_2021, resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/BatchNorm/moving_mean/_2023, resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/BatchNorm/moving_variance/_2025, resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/weights/_2027, resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/BatchNorm/beta/_2029, resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/BatchNorm/gamma/_2031, resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/BatchNorm/moving_mean/_2033, resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/BatchNorm/moving_variance/_2035, resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/weights/_2037, resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/BatchNorm/beta/_2039, resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/BatchNorm/gamma/_2041, resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/BatchNorm/moving_mean/_2043, resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/BatchNorm/moving_variance/_2045, resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/weights/_2047, resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/BatchNorm/beta/_2049, resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/BatchNorm/gamma/_2051, resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/BatchNorm/moving_mean/_2053, resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/BatchNorm/moving_variance/_2055, resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/weights/_2057, resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/BatchNorm/beta/_2059, resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/BatchNorm/gamma/_2061, resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/BatchNorm/moving_mean/_2063, resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/BatchNorm/moving_variance/_2065, resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/weights/_2067, resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/BatchNorm/beta/_2069, resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/BatchNorm/gamma/_2071, resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/BatchNorm/moving_mean/_2073, resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/BatchNorm/moving_variance/_2075, resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/weights/_2077, resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/BatchNorm/beta/_2079, resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/BatchNorm/gamma/_2081, resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/BatchNorm/moving_mean/_2083, resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/BatchNorm/moving_variance/_2085, resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/weights/_2087, resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/BatchNorm/beta/_2089, resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/BatchNorm/gamma/_2091, resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/BatchNorm/moving_mean/_2093, resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/BatchNorm/moving_variance/_2095, resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/weights/_2097, resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/BatchNorm/beta/_2099, resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/BatchNorm/gamma/_2101, resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/BatchNorm/moving_mean/_2103, resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/BatchNorm/moving_variance/_2105, resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/weights/_2107, resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/BatchNorm/beta/_2109, resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/_2111, resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean/_2113, resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance/_2115, resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/weights/_2117, resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/BatchNorm/beta/_2119, resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/_2121, resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean/_2123, resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance/_2125, resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/weights/_2127, resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/BatchNorm/beta/_2129, resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/_2131, resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean/_2133, resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance/_2135, resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/weights/_2137, resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/_2139, resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/_2141, resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean/_2143, resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance/_2145, resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/weights/_2147, resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/BatchNorm/beta/_2149, resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/_2151, resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean/_2153, resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance/_2155, resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/weights/_2157, resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/BatchNorm/beta/_2159, resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/_2161, resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean/_2163, resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance/_2165, resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/weights/_2167, resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/BatchNorm/beta/_2169, resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/_2171, resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean/_2173, resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance/_2175, resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/weights/_2177, resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/BatchNorm/beta/_2179, resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/_2181, resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean/_2183, resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance/_2185, resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/weights/_2187, resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/BatchNorm/beta/_2189, resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/_2191, resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean/_2193, resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance/_2195, resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/weights/_2197, resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/BatchNorm/beta/_2199, resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/_2201, resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean/_2203, resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance/_2205, resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/weights/_2207, resnet_v1_101/conv1/BatchNorm/beta/_2209, resnet_v1_101/conv1/BatchNorm/gamma/_2211, resnet_v1_101/conv1/BatchNorm/moving_mean/_2213, resnet_v1_101/conv1/BatchNorm/moving_variance/_2215, resnet_v1_101/conv1/weights/_2217)]]\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/scratch/sjn/anaconda/lib/python3.6/site-packages/tensorflow/python/training/saver.py\", line 1573, in save\r\n    {self.saver_def.filename_tensor_name: checkpoint_file})\r\n  File \"/scratch/sjn/anaconda/lib/python3.6/site-packages/tensorflow/python/client/session.py\", line 889, in run\r\n    run_metadata_ptr)\r\n  File \"/scratch/sjn/anaconda/lib/python3.6/site-packages/tensorflow/python/client/session.py\", line 1120, in _run\r\n    feed_dict_tensor, options, run_metadata)\r\n  File \"/scratch/sjn/anaconda/lib/python3.6/site-packages/tensorflow/python/client/session.py\", line 1317, in _do_run\r\n    options, run_metadata)\r\n  File \"/scratch/sjn/anaconda/lib/python3.6/site-packages/tensorflow/python/client/session.py\", line 1336, in _do_call\r\n    raise type(e)(node_def, op, message)\r\ntensorflow.python.framework.errors_impl.NotFoundError: ; No such file or directory\r\n\t [[Node: save_1/SaveV2 = SaveV2[dtypesdevice=\"/job:localhost/replica:0/task:0/device:CPU:0\"](_arg_save_1/Const_0_0, save_1/SaveV2/tensor_names, save_1/SaveV2/shape_and_slices, pose/intermediate_supervision/block4/biases/_1167, pose/intermediate_supervision/block4/weights/_1169, pose/locref_pred/block4/biases/_1171, pose/locref_pred/block4/weights/_1173, pose/part_pred/block4/biases/_1175, pose/part_pred/block4/weights/_1177, resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/BatchNorm/beta/_1179, resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/_1181, resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean/_1183, resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance/_1185, resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/weights/_1187, resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/BatchNorm/beta/_1189, resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/_1191, resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean/_1193, resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance/_1195, resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/weights/_1197, resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/BatchNorm/beta/_1199, resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/_1201, resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean/_1203, resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance/_1205, resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/weights/_1207, resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/_1209, resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/_1211, resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean/_1213, resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance/_1215, resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/weights/_1217, resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/BatchNorm/beta/_1219, resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/_1221, resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean/_1223, resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance/_1225, resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/weights/_1227, resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/BatchNorm/beta/_1229, resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/_1231, resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean/_1233, resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance/_1235, resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/weights/_1237, resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/BatchNorm/beta/_1239, resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/_1241, resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean/_1243, resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance/_1245, resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/weights/_1247, resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/BatchNorm/beta/_1249, resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/_1251, resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean/_1253, resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance/_1255, resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/weights/_1257, resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/BatchNorm/beta/_1259, resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/_1261, resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean/_1263, resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance/_1265, resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/weights/_1267, resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/BatchNorm/beta/_1269, resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/_1271, resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean/_1273, resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance/_1275, resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/weights/_1277, resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/BatchNorm/beta/_1279, resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/_1281, resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean/_1283, resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance/_1285, resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/weights/_1287, resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/BatchNorm/beta/_1289, resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/_1291, resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean/_1293, resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance/_1295, resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/weights/_1297, resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/BatchNorm/beta/_1299, resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/_1301, resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean/_1303, resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance/_1305, resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/weights/_1307, resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/_1309, resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/_1311, resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean/_1313, resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance/_1315, resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/weights/_1317, resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/BatchNorm/beta/_1319, resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/_1321, resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean/_1323, resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance/_1325, resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/weights/_1327, resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/BatchNorm/beta/_1329, resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/_1331, resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean/_1333, resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance/_1335, resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/weights/_1337, resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/BatchNorm/beta/_1339, resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/_1341, resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean/_1343, resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance/_1345, resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/weights/_1347, resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/BatchNorm/beta/_1349, resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/_1351, resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean/_1353, resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance/_1355, resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/weights/_1357, resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/BatchNorm/beta/_1359, resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/_1361, resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean/_1363, resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance/_1365, resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/weights/_1367, resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/BatchNorm/beta/_1369, resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/_1371, resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean/_1373, resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance/_1375, resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/weights/_1377, resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/BatchNorm/beta/_1379, resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/BatchNorm/gamma/_1381, resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/BatchNorm/moving_mean/_1383, resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/BatchNorm/moving_variance/_1385, resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/weights/_1387, resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/BatchNorm/beta/_1389, resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/BatchNorm/gamma/_1391, resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/BatchNorm/moving_mean/_1393, resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/BatchNorm/moving_variance/_1395, resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/weights/_1397, resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/BatchNorm/beta/_1399, resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/BatchNorm/gamma/_1401, resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean/_1403, resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance/_1405, resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/weights/_1407, resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/BatchNorm/beta/_1409, resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/_1411, resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean/_1413, resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance/_1415, resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/weights/_1417, resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/BatchNorm/beta/_1419, resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/_1421, resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean/_1423, resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance/_1425, resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/weights/_1427, resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/BatchNorm/beta/_1429, resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/_1431, resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean/_1433, resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance/_1435, resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/weights/_1437, resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/_1439, resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/_1441, resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean/_1443, resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance/_1445, resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/weights/_1447, resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/BatchNorm/beta/_1449, resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/BatchNorm/gamma/_1451, resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/BatchNorm/moving_mean/_1453, resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/BatchNorm/moving_variance/_1455, resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/weights/_1457, resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/BatchNorm/beta/_1459, resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/BatchNorm/gamma/_1461, resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/BatchNorm/moving_mean/_1463, resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/BatchNorm/moving_variance/_1465, resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/weights/_1467, resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/BatchNorm/beta/_1469, resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/BatchNorm/gamma/_1471, resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/BatchNorm/moving_mean/_1473, resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/BatchNorm/moving_variance/_1475, resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/weights/_1477, resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/BatchNorm/beta/_1479, resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/BatchNorm/gamma/_1481, resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/BatchNorm/moving_mean/_1483, resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/BatchNorm/moving_variance/_1485, resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/weights/_1487, resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/BatchNorm/beta/_1489, resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/BatchNorm/gamma/_1491, resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/BatchNorm/moving_mean/_1493, resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/BatchNorm/moving_variance/_1495, resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/weights/_1497, resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/BatchNorm/beta/_1499, resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/BatchNorm/gamma/_1501, resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/BatchNorm/moving_mean/_1503, resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/BatchNorm/moving_variance/_1505, resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/weights/_1507, resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/BatchNorm/beta/_1509, resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/BatchNorm/gamma/_1511, resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/BatchNorm/moving_mean/_1513, resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/BatchNorm/moving_variance/_1515, resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/weights/_1517, resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/BatchNorm/beta/_1519, resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/BatchNorm/gamma/_1521, resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/BatchNorm/moving_mean/_1523, resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/BatchNorm/moving_variance/_1525, resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/weights/_1527, resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/BatchNorm/beta/_1529, resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/BatchNorm/gamma/_1531, resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/BatchNorm/moving_mean/_1533, resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/BatchNorm/moving_variance/_1535, resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/weights/_1537, resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/BatchNorm/beta/_1539, resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/BatchNorm/gamma/_1541, resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/BatchNorm/moving_mean/_1543, resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/BatchNorm/moving_variance/_1545, resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/weights/_1547, resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/BatchNorm/beta/_1549, resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/BatchNorm/gamma/_1551, resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/BatchNorm/moving_mean/_1553, resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/BatchNorm/moving_variance/_1555, resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/weights/_1557, resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/BatchNorm/beta/_1559, resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/BatchNorm/gamma/_1561, resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/BatchNorm/moving_mean/_1563, resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/BatchNorm/moving_variance/_1565, resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/weights/_1567, resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/BatchNorm/beta/_1569, resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/BatchNorm/gamma/_1571, resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/BatchNorm/moving_mean/_1573, resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/BatchNorm/moving_variance/_1575, resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/weights/_1577, resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/BatchNorm/beta/_1579, resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/BatchNorm/gamma/_1581, resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/BatchNorm/moving_mean/_1583, resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/BatchNorm/moving_variance/_1585, resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/weights/_1587, resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/BatchNorm/beta/_1589, resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/BatchNorm/gamma/_1591, resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/BatchNorm/moving_mean/_1593, resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/BatchNorm/moving_variance/_1595, resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/weights/_1597, resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/BatchNorm/beta/_1599, resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/BatchNorm/gamma/_1601, resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/BatchNorm/moving_mean/_1603, resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/BatchNorm/moving_variance/_1605, resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/weights/_1607, resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/BatchNorm/beta/_1609, resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/BatchNorm/gamma/_1611, resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/BatchNorm/moving_mean/_1613, resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/BatchNorm/moving_variance/_1615, resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/weights/_1617, resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/BatchNorm/beta/_1619, resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/BatchNorm/gamma/_1621, resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/BatchNorm/moving_mean/_1623, resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/BatchNorm/moving_variance/_1625, resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/weights/_1627, resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/BatchNorm/beta/_1629, resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/BatchNorm/gamma/_1631, resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/BatchNorm/moving_mean/_1633, resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/BatchNorm/moving_variance/_1635, resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/weights/_1637, resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/BatchNorm/beta/_1639, resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/BatchNorm/gamma/_1641, resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/BatchNorm/moving_mean/_1643, resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/BatchNorm/moving_variance/_1645, resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/weights/_1647, resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/BatchNorm/beta/_1649, resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/BatchNorm/gamma/_1651, resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/BatchNorm/moving_mean/_1653, resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/BatchNorm/moving_variance/_1655, resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/weights/_1657, resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/BatchNorm/beta/_1659, resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/BatchNorm/gamma/_1661, resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/BatchNorm/moving_mean/_1663, resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/BatchNorm/moving_variance/_1665, resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/weights/_1667, resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/BatchNorm/beta/_1669, resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/BatchNorm/gamma/_1671, resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/BatchNorm/moving_mean/_1673, resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/BatchNorm/moving_variance/_1675, resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/weights/_1677, resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/BatchNorm/beta/_1679, resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/BatchNorm/gamma/_1681, resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/BatchNorm/moving_mean/_1683, resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/BatchNorm/moving_variance/_1685, resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/weights/_1687, resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/BatchNorm/beta/_1689, resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/BatchNorm/gamma/_1691, resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/BatchNorm/moving_mean/_1693, resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/BatchNorm/moving_variance/_1695, resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/weights/_1697, resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/BatchNorm/beta/_1699, resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/BatchNorm/gamma/_1701, resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/BatchNorm/moving_mean/_1703, resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/BatchNorm/moving_variance/_1705, resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/weights/_1707, resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/BatchNorm/beta/_1709, resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/BatchNorm/gamma/_1711, resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/BatchNorm/moving_mean/_1713, resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/BatchNorm/moving_variance/_1715, resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/weights/_1717, resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/BatchNorm/beta/_1719, resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/BatchNorm/gamma/_1721, resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/BatchNorm/moving_mean/_1723, resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/BatchNorm/moving_variance/_1725, resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/weights/_1727, resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/BatchNorm/beta/_1729, resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/BatchNorm/gamma/_1731, resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/BatchNorm/moving_mean/_1733, resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/BatchNorm/moving_variance/_1735, resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/weights/_1737, resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/BatchNorm/beta/_1739, resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/BatchNorm/gamma/_1741, resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/BatchNorm/moving_mean/_1743, resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/BatchNorm/moving_variance/_1745, resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/weights/_1747, resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/BatchNorm/beta/_1749, resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/_1751, resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean/_1753, resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance/_1755, resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/weights/_1757, resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/BatchNorm/beta/_1759, resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/_1761, resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean/_1763, resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance/_1765, resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/weights/_1767, resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/BatchNorm/beta/_1769, resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/_1771, resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean/_1773, resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance/_1775, resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/weights/_1777, resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/BatchNorm/beta/_1779, resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/BatchNorm/gamma/_1781, resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/BatchNorm/moving_mean/_1783, resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/BatchNorm/moving_variance/_1785, resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/weights/_1787, resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/BatchNorm/beta/_1789, resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/BatchNorm/gamma/_1791, resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/BatchNorm/moving_mean/_1793, resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/BatchNorm/moving_variance/_1795, resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/weights/_1797, resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/BatchNorm/beta/_1799, resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/BatchNorm/gamma/_1801, resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/BatchNorm/moving_mean/_1803, resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/BatchNorm/moving_variance/_1805, resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/weights/_1807, resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/BatchNorm/beta/_1809, resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/BatchNorm/gamma/_1811, resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/BatchNorm/moving_mean/_1813, resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/BatchNorm/moving_variance/_1815, resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/weights/_1817, resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/BatchNorm/beta/_1819, resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/BatchNorm/gamma/_1821, resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/BatchNorm/moving_mean/_1823, resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/BatchNorm/moving_variance/_1825, resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/weights/_1827, resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/BatchNorm/beta/_1829, resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/BatchNorm/gamma/_1831, resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/BatchNorm/moving_mean/_1833, resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/BatchNorm/moving_variance/_1835, resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/weights/_1837, resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/BatchNorm/beta/_1839, resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/BatchNorm/gamma/_1841, resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/BatchNorm/moving_mean/_1843, resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/BatchNorm/moving_variance/_1845, resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/weights/_1847, resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/BatchNorm/beta/_1849, resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/BatchNorm/gamma/_1851, resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/BatchNorm/moving_mean/_1853, resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/BatchNorm/moving_variance/_1855, resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/weights/_1857, resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/BatchNorm/beta/_1859, resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/BatchNorm/gamma/_1861, resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/BatchNorm/moving_mean/_1863, resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/BatchNorm/moving_variance/_1865, resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/weights/_1867, resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/BatchNorm/beta/_1869, resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/BatchNorm/gamma/_1871, resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/BatchNorm/moving_mean/_1873, resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/BatchNorm/moving_variance/_1875, resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/weights/_1877, resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/BatchNorm/beta/_1879, resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/BatchNorm/gamma/_1881, resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/BatchNorm/moving_mean/_1883, resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/BatchNorm/moving_variance/_1885, resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/weights/_1887, resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/BatchNorm/beta/_1889, resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/BatchNorm/gamma/_1891, resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/BatchNorm/moving_mean/_1893, resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/BatchNorm/moving_variance/_1895, resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/weights/_1897, resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/BatchNorm/beta/_1899, resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/_1901, resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean/_1903, resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance/_1905, resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/weights/_1907, resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/BatchNorm/beta/_1909, resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/_1911, resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean/_1913, resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance/_1915, resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/weights/_1917, resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/BatchNorm/beta/_1919, resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/_1921, resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean/_1923, resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance/_1925, resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/weights/_1927, resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/BatchNorm/beta/_1929, resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/BatchNorm/gamma/_1931, resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/BatchNorm/moving_mean/_1933, resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/BatchNorm/moving_variance/_1935, resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/weights/_1937, resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/BatchNorm/beta/_1939, resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/BatchNorm/gamma/_1941, resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/BatchNorm/moving_mean/_1943, resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/BatchNorm/moving_variance/_1945, resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/weights/_1947, resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/BatchNorm/beta/_1949, resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/BatchNorm/gamma/_1951, resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean/_1953, resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance/_1955, resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/weights/_1957, resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/BatchNorm/beta/_1959, resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/BatchNorm/gamma/_1961, resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/BatchNorm/moving_mean/_1963, resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/BatchNorm/moving_variance/_1965, resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/weights/_1967, resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/BatchNorm/beta/_1969, resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/BatchNorm/gamma/_1971, resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/BatchNorm/moving_mean/_1973, resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/BatchNorm/moving_variance/_1975, resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/weights/_1977, resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/BatchNorm/beta/_1979, resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/BatchNorm/gamma/_1981, resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_mean/_1983, resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_variance/_1985, resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/weights/_1987, resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/BatchNorm/beta/_1989, resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/BatchNorm/gamma/_1991, resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/BatchNorm/moving_mean/_1993, resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/BatchNorm/moving_variance/_1995, resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/weights/_1997, resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/BatchNorm/beta/_1999, resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/BatchNorm/gamma/_2001, resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/BatchNorm/moving_mean/_2003, resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/BatchNorm/moving_variance/_2005, resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/weights/_2007, resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/BatchNorm/beta/_2009, resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/BatchNorm/gamma/_2011, resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_mean/_2013, resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_variance/_2015, resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/weights/_2017, resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/BatchNorm/beta/_2019, resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/BatchNorm/gamma/_2021, resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/BatchNorm/moving_mean/_2023, resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/BatchNorm/moving_variance/_2025, resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/weights/_2027, resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/BatchNorm/beta/_2029, resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/BatchNorm/gamma/_2031, resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/BatchNorm/moving_mean/_2033, resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/BatchNorm/moving_variance/_2035, resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/weights/_2037, resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/BatchNorm/beta/_2039, resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/BatchNorm/gamma/_2041, resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/BatchNorm/moving_mean/_2043, resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/BatchNorm/moving_variance/_2045, resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/weights/_2047, resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/BatchNorm/beta/_2049, resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/BatchNorm/gamma/_2051, resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/BatchNorm/moving_mean/_2053, resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/BatchNorm/moving_variance/_2055, resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/weights/_2057, resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/BatchNorm/beta/_2059, resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/BatchNorm/gamma/_2061, resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/BatchNorm/moving_mean/_2063, resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/BatchNorm/moving_variance/_2065, resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/weights/_2067, resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/BatchNorm/beta/_2069, resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/BatchNorm/gamma/_2071, resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/BatchNorm/moving_mean/_2073, resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/BatchNorm/moving_variance/_2075, resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/weights/_2077, resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/BatchNorm/beta/_2079, resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/BatchNorm/gamma/_2081, resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/BatchNorm/moving_mean/_2083, resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/BatchNorm/moving_variance/_2085, resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/weights/_2087, resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/BatchNorm/beta/_2089, resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/BatchNorm/gamma/_2091, resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/BatchNorm/moving_mean/_2093, resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/BatchNorm/moving_variance/_2095, resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/weights/_2097, resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/BatchNorm/beta/_2099, resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/BatchNorm/gamma/_2101, resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/BatchNorm/moving_mean/_2103, resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/BatchNorm/moving_variance/_2105, resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/weights/_2107, resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/BatchNorm/beta/_2109, resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/_2111, resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean/_2113, resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance/_2115, resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/weights/_2117, resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/BatchNorm/beta/_2119, resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/_2121, resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean/_2123, resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance/_2125, resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/weights/_2127, resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/BatchNorm/beta/_2129, resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/_2131, resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean/_2133, resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance/_2135, resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/weights/_2137, resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/_2139, resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/_2141, resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean/_2143, resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance/_2145, resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/weights/_2147, resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/BatchNorm/beta/_2149, resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/_2151, resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean/_2153, resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance/_2155, resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/weights/_2157, resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/BatchNorm/beta/_2159, resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/_2161, resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean/_2163, resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance/_2165, resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/weights/_2167, resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/BatchNorm/beta/_2169, resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/_2171, resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean/_2173, resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance/_2175, resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/weights/_2177, resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/BatchNorm/beta/_2179, resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/_2181, resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean/_2183, resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance/_2185, resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/weights/_2187, resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/BatchNorm/beta/_2189, resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/_2191, resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean/_2193, resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance/_2195, resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/weights/_2197, resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/BatchNorm/beta/_2199, resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/_2201, resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean/_2203, resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance/_2205, resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/weights/_2207, resnet_v1_101/conv1/BatchNorm/beta/_2209, resnet_v1_101/conv1/BatchNorm/gamma/_2211, resnet_v1_101/conv1/BatchNorm/moving_mean/_2213, resnet_v1_101/conv1/BatchNorm/moving_variance/_2215, resnet_v1_101/conv1/weights/_2217)]]\r\n\r\nCaused by op 'save_1/SaveV2', defined at:\r\n  File \"../../../train.py\", line 140, in <module>\r\n    train()\r\n  File \"../../../train.py\", line 94, in train\r\n    saver = tf.train.Saver(max_to_keep=5)\r\n  File \"/scratch/sjn/anaconda/lib/python3.6/site-packages/tensorflow/python/training/saver.py\", line 1218, in __init__\r\n    self.build()\r\n  File \"/scratch/sjn/anaconda/lib/python3.6/site-packages/tensorflow/python/training/saver.py\", line 1227, in build\r\n    self._build(self._filename, build_save=True, build_restore=True)\r\n  File \"/scratch/sjn/anaconda/lib/python3.6/site-packages/tensorflow/python/training/saver.py\", line 1263, in _build\r\n    build_save=build_save, build_restore=build_restore)\r\n  File \"/scratch/sjn/anaconda/lib/python3.6/site-packages/tensorflow/python/training/saver.py\", line 748, in _build_internal\r\n    save_tensor = self._AddSaveOps(filename_tensor, saveables)\r\n  File \"/scratch/sjn/anaconda/lib/python3.6/site-packages/tensorflow/python/training/saver.py\", line 296, in _AddSaveOps\r\n    save = self.save_op(filename_tensor, saveables)\r\n  File \"/scratch/sjn/anaconda/lib/python3.6/site-packages/tensorflow/python/training/saver.py\", line 239, in save_op\r\n    tensors)\r\n  File \"/scratch/sjn/anaconda/lib/python3.6/site-packages/tensorflow/python/ops/gen_io_ops.py\", line 1163, in save_v2\r\n    shape_and_slices=shape_and_slices, tensors=tensors, name=name)\r\n  File \"/scratch/sjn/anaconda/lib/python3.6/site-packages/tensorflow/python/framework/op_def_library.py\", line 787, in _apply_op_helper\r\n    op_def=op_def)\r\n  File \"/scratch/sjn/anaconda/lib/python3.6/site-packages/tensorflow/python/framework/ops.py\", line 2956, in create_op\r\n    op_def=op_def)\r\n  File \"/scratch/sjn/anaconda/lib/python3.6/site-packages/tensorflow/python/framework/ops.py\", line 1470, in __init__\r\n    self._traceback = self._graph._extract_stack()  # pylint: disable=protected-access\r\n\r\nNotFoundError (see above for traceback): ; No such file or directory\r\n\t [[Node: save_1/SaveV2 = SaveV2[dtypesdevice=\"/job:localhost/replica:0/task:0/device:CPU:0\"](_arg_save_1/Const_0_0, save_1/SaveV2/tensor_names, save_1/SaveV2/shape_and_slices, pose/intermediate_supervision/block4/biases/_1167, pose/intermediate_supervision/block4/weights/_1169, pose/locref_pred/block4/biases/_1171, pose/locref_pred/block4/weights/_1173, pose/part_pred/block4/biases/_1175, pose/part_pred/block4/weights/_1177, resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/BatchNorm/beta/_1179, resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/_1181, resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean/_1183, resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance/_1185, resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/weights/_1187, resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/BatchNorm/beta/_1189, resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/_1191, resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean/_1193, resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance/_1195, resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/weights/_1197, resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/BatchNorm/beta/_1199, resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/_1201, resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean/_1203, resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance/_1205, resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/weights/_1207, resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/_1209, resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/_1211, resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean/_1213, resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance/_1215, resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/weights/_1217, resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/BatchNorm/beta/_1219, resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/_1221, resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean/_1223, resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance/_1225, resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/weights/_1227, resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/BatchNorm/beta/_1229, resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/_1231, resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean/_1233, resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance/_1235, resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/weights/_1237, resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/BatchNorm/beta/_1239, resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/_1241, resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean/_1243, resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance/_1245, resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/weights/_1247, resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/BatchNorm/beta/_1249, resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/_1251, resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean/_1253, resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance/_1255, resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/weights/_1257, resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/BatchNorm/beta/_1259, resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/_1261, resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean/_1263, resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance/_1265, resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/weights/_1267, resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/BatchNorm/beta/_1269, resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/_1271, resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean/_1273, resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance/_1275, resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/weights/_1277, resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/BatchNorm/beta/_1279, resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/_1281, resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean/_1283, resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance/_1285, resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/weights/_1287, resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/BatchNorm/beta/_1289, resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/_1291, resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean/_1293, resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance/_1295, resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/weights/_1297, resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/BatchNorm/beta/_1299, resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/_1301, resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean/_1303, resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance/_1305, resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/weights/_1307, resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/_1309, resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/_1311, resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean/_1313, resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance/_1315, resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/weights/_1317, resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/BatchNorm/beta/_1319, resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/_1321, resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean/_1323, resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance/_1325, resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/weights/_1327, resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/BatchNorm/beta/_1329, resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/_1331, resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean/_1333, resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance/_1335, resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/weights/_1337, resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/BatchNorm/beta/_1339, resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/_1341, resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean/_1343, resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance/_1345, resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/weights/_1347, resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/BatchNorm/beta/_1349, resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/_1351, resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean/_1353, resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance/_1355, resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/weights/_1357, resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/BatchNorm/beta/_1359, resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/_1361, resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean/_1363, resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance/_1365, resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/weights/_1367, resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/BatchNorm/beta/_1369, resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/_1371, resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean/_1373, resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance/_1375, resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/weights/_1377, resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/BatchNorm/beta/_1379, resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/BatchNorm/gamma/_1381, resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/BatchNorm/moving_mean/_1383, resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/BatchNorm/moving_variance/_1385, resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/weights/_1387, resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/BatchNorm/beta/_1389, resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/BatchNorm/gamma/_1391, resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/BatchNorm/moving_mean/_1393, resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/BatchNorm/moving_variance/_1395, resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/weights/_1397, resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/BatchNorm/beta/_1399, resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/BatchNorm/gamma/_1401, resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean/_1403, resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance/_1405, resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/weights/_1407, resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/BatchNorm/beta/_1409, resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/_1411, resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean/_1413, resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance/_1415, resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/weights/_1417, resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/BatchNorm/beta/_1419, resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/_1421, resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean/_1423, resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance/_1425, resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/weights/_1427, resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/BatchNorm/beta/_1429, resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/_1431, resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean/_1433, resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance/_1435, resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/weights/_1437, resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/_1439, resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/_1441, resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean/_1443, resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance/_1445, resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/weights/_1447, resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/BatchNorm/beta/_1449, resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/BatchNorm/gamma/_1451, resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/BatchNorm/moving_mean/_1453, resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/BatchNorm/moving_variance/_1455, resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/weights/_1457, resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/BatchNorm/beta/_1459, resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/BatchNorm/gamma/_1461, resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/BatchNorm/moving_mean/_1463, resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/BatchNorm/moving_variance/_1465, resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/weights/_1467, resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/BatchNorm/beta/_1469, resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/BatchNorm/gamma/_1471, resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/BatchNorm/moving_mean/_1473, resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/BatchNorm/moving_variance/_1475, resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/weights/_1477, resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/BatchNorm/beta/_1479, resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/BatchNorm/gamma/_1481, resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/BatchNorm/moving_mean/_1483, resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/BatchNorm/moving_variance/_1485, resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/weights/_1487, resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/BatchNorm/beta/_1489, resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/BatchNorm/gamma/_1491, resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/BatchNorm/moving_mean/_1493, resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/BatchNorm/moving_variance/_1495, resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/weights/_1497, resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/BatchNorm/beta/_1499, resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/BatchNorm/gamma/_1501, resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/BatchNorm/moving_mean/_1503, resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/BatchNorm/moving_variance/_1505, resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/weights/_1507, resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/BatchNorm/beta/_1509, resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/BatchNorm/gamma/_1511, resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/BatchNorm/moving_mean/_1513, resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/BatchNorm/moving_variance/_1515, resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/weights/_1517, resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/BatchNorm/beta/_1519, resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/BatchNorm/gamma/_1521, resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/BatchNorm/moving_mean/_1523, resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/BatchNorm/moving_variance/_1525, resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/weights/_1527, resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/BatchNorm/beta/_1529, resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/BatchNorm/gamma/_1531, resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/BatchNorm/moving_mean/_1533, resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/BatchNorm/moving_variance/_1535, resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/weights/_1537, resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/BatchNorm/beta/_1539, resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/BatchNorm/gamma/_1541, resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/BatchNorm/moving_mean/_1543, resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/BatchNorm/moving_variance/_1545, resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/weights/_1547, resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/BatchNorm/beta/_1549, resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/BatchNorm/gamma/_1551, resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/BatchNorm/moving_mean/_1553, resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/BatchNorm/moving_variance/_1555, resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/weights/_1557, resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/BatchNorm/beta/_1559, resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/BatchNorm/gamma/_1561, resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/BatchNorm/moving_mean/_1563, resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/BatchNorm/moving_variance/_1565, resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/weights/_1567, resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/BatchNorm/beta/_1569, resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/BatchNorm/gamma/_1571, resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/BatchNorm/moving_mean/_1573, resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/BatchNorm/moving_variance/_1575, resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/weights/_1577, resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/BatchNorm/beta/_1579, resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/BatchNorm/gamma/_1581, resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/BatchNorm/moving_mean/_1583, resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/BatchNorm/moving_variance/_1585, resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/weights/_1587, resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/BatchNorm/beta/_1589, resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/BatchNorm/gamma/_1591, resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/BatchNorm/moving_mean/_1593, resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/BatchNorm/moving_variance/_1595, resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/weights/_1597, resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/BatchNorm/beta/_1599, resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/BatchNorm/gamma/_1601, resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/BatchNorm/moving_mean/_1603, resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/BatchNorm/moving_variance/_1605, resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/weights/_1607, resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/BatchNorm/beta/_1609, resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/BatchNorm/gamma/_1611, resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/BatchNorm/moving_mean/_1613, resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/BatchNorm/moving_variance/_1615, resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/weights/_1617, resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/BatchNorm/beta/_1619, resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/BatchNorm/gamma/_1621, resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/BatchNorm/moving_mean/_1623, resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/BatchNorm/moving_variance/_1625, resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/weights/_1627, resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/BatchNorm/beta/_1629, resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/BatchNorm/gamma/_1631, resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/BatchNorm/moving_mean/_1633, resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/BatchNorm/moving_variance/_1635, resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/weights/_1637, resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/BatchNorm/beta/_1639, resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/BatchNorm/gamma/_1641, resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/BatchNorm/moving_mean/_1643, resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/BatchNorm/moving_variance/_1645, resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/weights/_1647, resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/BatchNorm/beta/_1649, resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/BatchNorm/gamma/_1651, resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/BatchNorm/moving_mean/_1653, resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/BatchNorm/moving_variance/_1655, resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/weights/_1657, resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/BatchNorm/beta/_1659, resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/BatchNorm/gamma/_1661, resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/BatchNorm/moving_mean/_1663, resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/BatchNorm/moving_variance/_1665, resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/weights/_1667, resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/BatchNorm/beta/_1669, resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/BatchNorm/gamma/_1671, resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/BatchNorm/moving_mean/_1673, resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/BatchNorm/moving_variance/_1675, resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/weights/_1677, resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/BatchNorm/beta/_1679, resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/BatchNorm/gamma/_1681, resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/BatchNorm/moving_mean/_1683, resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/BatchNorm/moving_variance/_1685, resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/weights/_1687, resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/BatchNorm/beta/_1689, resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/BatchNorm/gamma/_1691, resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/BatchNorm/moving_mean/_1693, resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/BatchNorm/moving_variance/_1695, resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/weights/_1697, resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/BatchNorm/beta/_1699, resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/BatchNorm/gamma/_1701, resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/BatchNorm/moving_mean/_1703, resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/BatchNorm/moving_variance/_1705, resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/weights/_1707, resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/BatchNorm/beta/_1709, resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/BatchNorm/gamma/_1711, resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/BatchNorm/moving_mean/_1713, resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/BatchNorm/moving_variance/_1715, resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/weights/_1717, resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/BatchNorm/beta/_1719, resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/BatchNorm/gamma/_1721, resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/BatchNorm/moving_mean/_1723, resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/BatchNorm/moving_variance/_1725, resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/weights/_1727, resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/BatchNorm/beta/_1729, resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/BatchNorm/gamma/_1731, resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/BatchNorm/moving_mean/_1733, resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/BatchNorm/moving_variance/_1735, resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/weights/_1737, resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/BatchNorm/beta/_1739, resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/BatchNorm/gamma/_1741, resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/BatchNorm/moving_mean/_1743, resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/BatchNorm/moving_variance/_1745, resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/weights/_1747, resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/BatchNorm/beta/_1749, resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/_1751, resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean/_1753, resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance/_1755, resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/weights/_1757, resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/BatchNorm/beta/_1759, resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/_1761, resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean/_1763, resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance/_1765, resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/weights/_1767, resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/BatchNorm/beta/_1769, resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/_1771, resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean/_1773, resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance/_1775, resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/weights/_1777, resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/BatchNorm/beta/_1779, resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/BatchNorm/gamma/_1781, resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/BatchNorm/moving_mean/_1783, resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/BatchNorm/moving_variance/_1785, resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/weights/_1787, resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/BatchNorm/beta/_1789, resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/BatchNorm/gamma/_1791, resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/BatchNorm/moving_mean/_1793, resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/BatchNorm/moving_variance/_1795, resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/weights/_1797, resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/BatchNorm/beta/_1799, resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/BatchNorm/gamma/_1801, resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/BatchNorm/moving_mean/_1803, resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/BatchNorm/moving_variance/_1805, resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/weights/_1807, resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/BatchNorm/beta/_1809, resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/BatchNorm/gamma/_1811, resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/BatchNorm/moving_mean/_1813, resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/BatchNorm/moving_variance/_1815, resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/weights/_1817, resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/BatchNorm/beta/_1819, resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/BatchNorm/gamma/_1821, resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/BatchNorm/moving_mean/_1823, resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/BatchNorm/moving_variance/_1825, resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/weights/_1827, resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/BatchNorm/beta/_1829, resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/BatchNorm/gamma/_1831, resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/BatchNorm/moving_mean/_1833, resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/BatchNorm/moving_variance/_1835, resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/weights/_1837, resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/BatchNorm/beta/_1839, resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/BatchNorm/gamma/_1841, resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/BatchNorm/moving_mean/_1843, resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/BatchNorm/moving_variance/_1845, resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/weights/_1847, resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/BatchNorm/beta/_1849, resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/BatchNorm/gamma/_1851, resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/BatchNorm/moving_mean/_1853, resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/BatchNorm/moving_variance/_1855, resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/weights/_1857, resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/BatchNorm/beta/_1859, resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/BatchNorm/gamma/_1861, resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/BatchNorm/moving_mean/_1863, resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/BatchNorm/moving_variance/_1865, resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/weights/_1867, resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/BatchNorm/beta/_1869, resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/BatchNorm/gamma/_1871, resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/BatchNorm/moving_mean/_1873, resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/BatchNorm/moving_variance/_1875, resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/weights/_1877, resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/BatchNorm/beta/_1879, resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/BatchNorm/gamma/_1881, resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/BatchNorm/moving_mean/_1883, resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/BatchNorm/moving_variance/_1885, resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/weights/_1887, resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/BatchNorm/beta/_1889, resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/BatchNorm/gamma/_1891, resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/BatchNorm/moving_mean/_1893, resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/BatchNorm/moving_variance/_1895, resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/weights/_1897, resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/BatchNorm/beta/_1899, resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/_1901, resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean/_1903, resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance/_1905, resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/weights/_1907, resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/BatchNorm/beta/_1909, resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/_1911, resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean/_1913, resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance/_1915, resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/weights/_1917, resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/BatchNorm/beta/_1919, resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/_1921, resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean/_1923, resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance/_1925, resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/weights/_1927, resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/BatchNorm/beta/_1929, resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/BatchNorm/gamma/_1931, resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/BatchNorm/moving_mean/_1933, resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/BatchNorm/moving_variance/_1935, resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/weights/_1937, resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/BatchNorm/beta/_1939, resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/BatchNorm/gamma/_1941, resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/BatchNorm/moving_mean/_1943, resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/BatchNorm/moving_variance/_1945, resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/weights/_1947, resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/BatchNorm/beta/_1949, resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/BatchNorm/gamma/_1951, resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean/_1953, resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance/_1955, resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/weights/_1957, resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/BatchNorm/beta/_1959, resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/BatchNorm/gamma/_1961, resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/BatchNorm/moving_mean/_1963, resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/BatchNorm/moving_variance/_1965, resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/weights/_1967, resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/BatchNorm/beta/_1969, resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/BatchNorm/gamma/_1971, resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/BatchNorm/moving_mean/_1973, resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/BatchNorm/moving_variance/_1975, resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/weights/_1977, resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/BatchNorm/beta/_1979, resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/BatchNorm/gamma/_1981, resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_mean/_1983, resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_variance/_1985, resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/weights/_1987, resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/BatchNorm/beta/_1989, resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/BatchNorm/gamma/_1991, resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/BatchNorm/moving_mean/_1993, resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/BatchNorm/moving_variance/_1995, resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/weights/_1997, resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/BatchNorm/beta/_1999, resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/BatchNorm/gamma/_2001, resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/BatchNorm/moving_mean/_2003, resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/BatchNorm/moving_variance/_2005, resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/weights/_2007, resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/BatchNorm/beta/_2009, resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/BatchNorm/gamma/_2011, resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_mean/_2013, resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_variance/_2015, resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/weights/_2017, resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/BatchNorm/beta/_2019, resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/BatchNorm/gamma/_2021, resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/BatchNorm/moving_mean/_2023, resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/BatchNorm/moving_variance/_2025, resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/weights/_2027, resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/BatchNorm/beta/_2029, resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/BatchNorm/gamma/_2031, resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/BatchNorm/moving_mean/_2033, resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/BatchNorm/moving_variance/_2035, resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/weights/_2037, resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/BatchNorm/beta/_2039, resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/BatchNorm/gamma/_2041, resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/BatchNorm/moving_mean/_2043, resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/BatchNorm/moving_variance/_2045, resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/weights/_2047, resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/BatchNorm/beta/_2049, resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/BatchNorm/gamma/_2051, resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/BatchNorm/moving_mean/_2053, resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/BatchNorm/moving_variance/_2055, resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/weights/_2057, resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/BatchNorm/beta/_2059, resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/BatchNorm/gamma/_2061, resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/BatchNorm/moving_mean/_2063, resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/BatchNorm/moving_variance/_2065, resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/weights/_2067, resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/BatchNorm/beta/_2069, resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/BatchNorm/gamma/_2071, resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/BatchNorm/moving_mean/_2073, resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/BatchNorm/moving_variance/_2075, resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/weights/_2077, resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/BatchNorm/beta/_2079, resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/BatchNorm/gamma/_2081, resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/BatchNorm/moving_mean/_2083, resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/BatchNorm/moving_variance/_2085, resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/weights/_2087, resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/BatchNorm/beta/_2089, resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/BatchNorm/gamma/_2091, resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/BatchNorm/moving_mean/_2093, resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/BatchNorm/moving_variance/_2095, resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/weights/_2097, resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/BatchNorm/beta/_2099, resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/BatchNorm/gamma/_2101, resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/BatchNorm/moving_mean/_2103, resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/BatchNorm/moving_variance/_2105, resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/weights/_2107, resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/BatchNorm/beta/_2109, resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/_2111, resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean/_2113, resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance/_2115, resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/weights/_2117, resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/BatchNorm/beta/_2119, resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/_2121, resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean/_2123, resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance/_2125, resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/weights/_2127, resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/BatchNorm/beta/_2129, resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/_2131, resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean/_2133, resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance/_2135, resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/weights/_2137, resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/_2139, resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/_2141, resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean/_2143, resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance/_2145, resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/weights/_2147, resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/BatchNorm/beta/_2149, resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/_2151, resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean/_2153, resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance/_2155, resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/weights/_2157, resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/BatchNorm/beta/_2159, resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/_2161, resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean/_2163, resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance/_2165, resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/weights/_2167, resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/BatchNorm/beta/_2169, resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/_2171, resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean/_2173, resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance/_2175, resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/weights/_2177, resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/BatchNorm/beta/_2179, resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/_2181, resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean/_2183, resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance/_2185, resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/weights/_2187, resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/BatchNorm/beta/_2189, resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/_2191, resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean/_2193, resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance/_2195, resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/weights/_2197, resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/BatchNorm/beta/_2199, resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/_2201, resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean/_2203, resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance/_2205, resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/weights/_2207, resnet_v1_101/conv1/BatchNorm/beta/_2209, resnet_v1_101/conv1/BatchNorm/gamma/_2211, resnet_v1_101/conv1/BatchNorm/moving_mean/_2213, resnet_v1_101/conv1/BatchNorm/moving_variance/_2215, resnet_v1_101/conv1/weights/_2217)]]\r\n\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"../../../train.py\", line 140, in <module>\r\n    train()\r\n  File \"../../../train.py\", line 132, in train\r\n    saver.save(sess, model_name, global_step=it)\r\n  File \"/scratch/sjn/anaconda/lib/python3.6/site-packages/tensorflow/python/training/saver.py\", line 1594, in save\r\n    raise exc\r\nValueError: Parent directory of snapshot doesn't exist, can't save.\r\n^CException ignored in: <module 'threading' from '/scratch/sjn/anaconda/lib/python3.6/threading.py'>\r\nTraceback (most recent call last):\r\n  File \"/scratch/sjn/anaconda/lib/python3.6/threading.py\", line 1294, in _shutdown\r\n    t.join()\r\n```\r\n\r\ncomplete error can be found at:\r\nhttps://hastebin.com/pivuzisece.lua\r\n\r\nThis is my pose_cfg.yaml file:\r\n\r\n```\r\ndataset: /scratch2/body_pose/pose-tensorflow/dataset/cropped/dataset.mat\r\ndataset_type: \"mpii\"\r\n\r\npos_dist_thresh: 17\r\nglobal_scale: 0.8452830189\r\nscale_jitter_lo: 0.85\r\nscale_jitter_up: 1.15\r\n\r\nnet_type: resnet_101\r\ninit_weights: ../../pretrained/resnet_v1_101.ckpt\r\n\r\nlocation_refinement: true\r\nlocref_huber_loss: true\r\nlocref_loss_weight: 0.05\r\nlocref_stdev: 7.2801\r\n\r\nintermediate_supervision: true\r\nintermediate_supervision_layer: 12\r\n\r\nmax_input_size: 850\r\nmulti_step:\r\n- [0.005, 10000]\r\n- [0.02, 430000]\r\n- [0.002, 730000]\r\n- [0.001, 1030000]\r\ndisplay_iters: 20\r\nsave_iters: 60000\r\n\r\nmirror: true\r\n\r\n```\r\n```\r\n[jalal@goku pose-tensorflow]$ conda list tensorflow\r\n# packages in environment at /scratch/sjn/anaconda:\r\n#\r\ntensorflow-gpu            1.4.0                     <pip>\r\ntensorflow-gpu-base       1.3.0           py36cuda8.0cudnn6.0_1  \r\ntensorflow-tensorboard    0.4.0                     <pip>\r\ntensorflow-tensorboard    0.1.5                    py36_0  \r\n```\r\n```\r\n$ lsb_release -a\r\nLSB Version:\t:core-4.1-amd64:core-4.1-noarch\r\nDistributor ID:\tCentOS\r\nDescription:\tCentOS Linux release 7.4.1708 (Core) \r\nRelease:\t7.4.1708\r\nCodename:\tCore\r\n```\r\n\r\n\r\n```\r\n$ nvidia-smi\r\nSun Apr  8 22:03:20 2018       \r\n+-----------------------------------------------------------------------------+\r\n| NVIDIA-SMI 390.30                 Driver Version: 390.30                    |\r\n|-------------------------------+----------------------+----------------------+\r\n| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |\r\n| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |\r\n|===============================+======================+======================|\r\n|   0  GeForce GTX 108...  Off  | 00000000:05:00.0  On |                  N/A |\r\n|  0%   28C    P8    22W / 250W |    900MiB / 11178MiB |      3%      Default |\r\n+-------------------------------+----------------------+----------------------+\r\n|   1  GeForce GTX 108...  Off  | 00000000:06:00.0 Off |                  N/A |\r\n|  0%   37C    P8    19W / 250W |      2MiB / 11178MiB |      0%      Default |\r\n+-------------------------------+----------------------+----------------------+\r\n                                                                               \r\n+-----------------------------------------------------------------------------+\r\n| Processes:                                                       GPU Memory |\r\n|  GPU       PID   Type   Process name                             Usage      |\r\n|=============================================================================|\r\n|    0      2572      G   /usr/bin/X                                   291MiB |\r\n|    0      3196      G   /usr/bin/gnome-shell                         286MiB |\r\n|    0     11624      G   ...-token=9F12957866330844F4A125587F711884   319MiB |\r\n+-----------------------------------------------------------------------------+\r\n[jalal@goku pose-tensorflow]$ \r\n\r\n\r\n```\r\n\r\n```\r\n$ cat /usr/local/cuda/version.txt\r\nCUDA Version 8.0.61\r\n```\r\n", "comments": ["Thank you for your post. We noticed you have not filled out the following field in the issue template. Could you update them if they are relevant in your case, or leave them as N/A? Thanks.\nHave I written custom code\nOS Platform and Distribution\nTensorFlow installed from\nTensorFlow version\nBazel version\nCUDA/cuDNN version\nGPU model and memory\nExact command to reproduce", "It has been 15 days with no activity and the `awaiting response` label was assigned. Is this still an issue?", "It has been 15 days with no activity and the `awaiting response` label was assigned. Is this still an issue?", "It has been 16 days with no activity and the `awaiting response` label was assigned. Is this still an issue?", "It has been 14 days with no activity and the `awaiting response` label was assigned. Is this still an issue?", "We are closing this issue for now due to lack of activity. Please comment if this is still an issue for you. Thanks!", "\r\nWARNING:tensorflow:From generate_tfrecord.py:99: The name tf.app.run is deprecated. Please use tf.compat.v1.app.run instead.\r\n\r\nWARNING:tensorflow:From generate_tfrecord.py:85: The name tf.python_io.TFRecordWriter is deprecated. Please use tf.io.TFRecordWriter instead.\r\n\r\nW0130 11:20:39.150328 140560265512704 module_wrapper.py:139] From generate_tfrecord.py:85: The name tf.python_io.TFRecordWriter is deprecated. Please use tf.io.TFRecordWriter instead.\r\n\r\nTraceback (most recent call last):\r\n  File \"generate_tfrecord.py\", line 99, in <module>\r\n    tf.app.run(main)\r\n  File \"/home/renji/venv/lib/python3.5/site-packages/tensorflow_core/python/platform/app.py\", line 40, in run\r\n    _run(main=main, argv=argv, flags_parser=_parse_flags_tolerate_undef)\r\n  File \"/home/renji/venv/lib/python3.5/site-packages/absl/app.py\", line 299, in run\r\n    _run_main(main, args)\r\n  File \"/home/renji/venv/lib/python3.5/site-packages/absl/app.py\", line 250, in _run_main\r\n    sys.exit(main(argv))\r\n  File \"generate_tfrecord.py\", line 85, in main\r\n    writer = tf.python_io.TFRecordWriter(FLAGS.output_path)\r\n  File \"/home/renji/venv/lib/python3.5/site-packages/tensorflow_core/python/lib/io/tf_record.py\", line 218, in __init__\r\n    compat.as_bytes(path), options._as_record_writer_options(), status)\r\n  File \"/home/renji/venv/lib/python3.5/site-packages/tensorflow_core/python/framework/errors_impl.py\", line 556, in __exit__\r\n    c_api.TF_GetCode(self.status.status))\r\ntensorflow.python.framework.errors_impl.NotFoundError: ; No such file or directory\r\n  \r\n\r\n\r\nplzz give the solution"]}, {"number": 18336, "title": "Fix broken link in doc for install_c.md", "body": "This fix adds `https://` to stackoverflow link. Without `https://` the link is rendered as:\r\n```\r\nhttps://www.tensorflow.org/install/www.stackoverflow.com/questions/tagged/tensorflow\r\n```\r\nin the current page and is broken.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>", "comments": []}, {"number": 18335, "title": "Update tf.contrib.metrics with deprecations", "body": "This fix updates tf.contrib.metrics.streaming_mean_absolution(relative/squared)_error\r\nwith deprecation notices as they have been replaces with tf.metrics.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>", "comments": ["Thanks @jhseu for fix the error in the PR \ud83d\udc4d and sorry for the inconvenience. One test (sanity) was failing due to `Line too long (81/80)`. I have update and pushed the PR. Thanks again for the help!"]}, {"number": 18334, "title": "always get negative moving_variance in batchnormalization", "body": "\r\n------------------------\r\n\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:\r\n   Yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:\r\nMacOS 10.12.6\r\n- **TensorFlow installed from (source or binary)**:\r\npycharm\r\n- **TensorFlow version (use command below)**:\r\n1.5.0\r\n- **Python version**: \r\n2.7\r\n- **Bazel version (if compiling from source)**:\r\n- **GCC/Compiler version (if compiling from source)**:\r\n- **CUDA/cuDNN version**:\r\nno CUDA\r\n- **GPU model and memory**:\r\n0\r\n- **Exact command to reproduce**:\r\n\r\n### Describe the problem\r\nI trained a simple NN on my local mac without GPU. training data is random generated and validation data is exactly same as training data. During validation,  i always got negative moving_variance in some dimension in batchnormalization, which as a result, causes the network to output NaN issue.\r\nBy the way, frontend is Keras 2.1.5.\r\nHere's the code\r\n\r\ndef create_pointwise_model():\r\n        inputs = Input(shape=(13,), name='input_layer')\r\n        normalized_inputs = BatchNormalization(momentum=0.01)(inputs) # i incline to take the value of current batch\r\n        sum_inputs = Dense(1, name=\"final_dense\", use_bias=False, kernel_initializer='glorot_normal')(normalized_inputs)\r\n        sum_inputs = Activation('selu')(sum_inputs)\r\n        \r\n        model = Model(inputs=inputs, outputs=sum_inputs, name='pointwise_model')\r\n        model.compile(optimizer='Adam', loss='binary_crossentropy')\r\n        return model\r\n\r\n#here's the test I wrote:\r\nsample  = np.random.rand(4,13)\r\n\r\ndef get_data():\r\n    while 1:\r\n          yield (sample, np.array([[1],[1],[0],[0]]))\r\n\r\nmodel = create_pointwise_model()\r\nmodel.fit_generator(get_data(), steps_per_epoch=1, epochs=1000, validation_data= get_data().next())\r\n\r\nDuring the training, I got NaN error and pinpointed that it's caused by negative moving_variance in batchnormalization. The way I fix this is that inside \r\ndef batch_normalization(x,\r\n                        mean,\r\n                        variance,\r\n                        offset,\r\n                        scale,\r\n                        variance_epsilon,\r\n                        name=None):\r\n\r\nI added this line:\r\n    variance = tf.multiply(variance, tf.cast(tf.greater_equal(variance, 0),tf.float32))\r\n\r\nBut that's not the right way...\r\n\r\n", "comments": ["This question is better asked on [StackOverflow](http://stackoverflow.com/questions/tagged/tensorflow) since it is not a bug or feature request. There is also a larger community that reads questions there.\r\n\r\nIf you think we've misinterpreted a bug, please comment again with a clear explanation, as well as all of the information requested in the [issue template](https://github.com/tensorflow/tensorflow/issues/new). Thanks!\r\n"]}, {"number": 18333, "title": "Tree-LSTM couldn't be trained on the GPU", "body": "------------------------\r\n\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:No\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:Linux Ubuntu 16.04;macOS10.12.6\r\n- **TensorFlow installed from (source or binary)**:pip\r\n- **TensorFlow version (use command below)**:1.6.0\r\n- **Python version**: 3.6.4\r\n- **Bazel version (if compiling from source)**:N/A\r\n- **GCC/Compiler version (if compiling from source)**:N/A\r\n- **CUDA/cuDNN version**: V9.0.176\r\n- **GPU model and memory**: Titan XP, 12G\r\n- **Exact command to reproduce**: GPU: python main.py;\r\n                                                              CPU: running main.py on the Pycharm\r\n\r\n### Describe the problem\r\nOptimization function could not be used. Because once using the optimization, the process will be stuck. When I don't use the optimization, the process can be continued. \r\nbased on strace -p, process stucks on futex_wait_private\r\n\r\n### Source code / logs\r\nhttps://github.com/JerryZeyu/SQuAd-tree-LSTM", "comments": ["Thank you for your post. We noticed you have not filled out the following field in the issue template. Could you update them if they are relevant in your case, or leave them as N/A? Thanks.\nBazel version", "It has been 15 days with no activity and the `awaiting response` label was assigned. Is this still an issue?", "It has been 15 days with no activity and the `awaiting response` label was assigned. Is this still an issue?", "The code link is dead and there have been no updates, so I am closing this bug as outdated.\r\n\r\nIf you have any more general problems, please ask a question on [Stack Overflow](http://stackoverflow.com/questions/tagged/tensorflow), which has a larger developer community. If you think you've found a bug, please make another issue with clear reproduction instructions and an explanation. Thanks!"]}, {"number": 18332, "title": "tf_debug incompatibility with importlib (Python 3.6)", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Windows 10\r\n- **TensorFlow installed from (source or binary)**: Binary\r\n- **TensorFlow version (use command below)**: 1.7.0\r\n- **Python version**: Python 3.6\r\n- **Exact command to reproduce**:\r\n- Bazel version: N/A\r\n- CUDA/cuDNN version: N/A\r\n- GPU model and memory: N/A\r\n\r\n### Describe the problem\r\nWhen using tf_debug with a class that is dynamically imported using `importlib`, Tensorflow throws an exception since it is unable to determine if the dynamically imported library is either a compiled/uncompiled python file. This is due to how importlib handles imports, as a class imported using that library does not have a proper `file_path`, as seen in [this function](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/debug/lib/source_utils.py#L42) (Line 42 of `source_utils.py`). I believe it does this because it is trying to find the lines of the file which the traceback mentions, but is unable to find them.\r\n\r\n### Source code / logs\r\n```\r\n229 ops no flops stats due to incomplete shapes.\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\Matt\\PycharmProjects\\Saltie\\bot_code\\models\\base_model.py\", line 308, in _initialize_variables\r\n    self.sess.run(init, run_metadata=run_metadata)\r\n  File \"C:\\Users\\Matt\\PycharmProjects\\venvs\\Saltie-3.6\\lib\\site-packages\\tensorflow\\python\\debug\\wrappers\\grpc_wrapper.py\", line 225, in run\r\n    self._sent_graph_version)\r\n  File \"C:\\Users\\Matt\\PycharmProjects\\venvs\\Saltie-3.6\\lib\\site-packages\\tensorflow\\python\\debug\\wrappers\\grpc_wrapper.py\", line 61, in publish_traceback\r\n    send_source=True)\r\n  File \"C:\\Users\\Matt\\PycharmProjects\\venvs\\Saltie-3.6\\lib\\site-packages\\tensorflow\\python\\debug\\lib\\source_remote.py\", line 192, in send_graph_tracebacks\r\n    graph=graph, send_source=send_source)\r\n  File \"C:\\Users\\Matt\\PycharmProjects\\venvs\\Saltie-3.6\\lib\\site-packages\\tensorflow\\python\\debug\\lib\\source_remote.py\", line 154, in _send_call_tracebacks\r\n    call_traceback.graph_traceback.id_to_string))\r\n  File \"C:\\Users\\Matt\\PycharmProjects\\venvs\\Saltie-3.6\\lib\\site-packages\\tensorflow\\python\\debug\\lib\\source_remote.py\", line 94, in <genexpr>\r\n    if not source_utils.guess_is_tensorflow_py_library(f) and gfile.Exists(f))\r\n  File \"C:\\Users\\Matt\\PycharmProjects\\venvs\\Saltie-3.6\\lib\\site-packages\\tensorflow\\python\\debug\\lib\\source_utils.py\", line 76, in guess_is_tensorflow_py_library\r\n    \"Input file path (%s) is not a Python source file.\" % py_file_path)\r\nValueError: Input file path (<frozen importlib._bootstrap>) is not a Python source file.\r\n```", "comments": ["Thank you for your post. We noticed you have not filled out the following field in the issue template. Could you update them if they are relevant in your case, or leave them as N/A? Thanks.\nBazel version\nCUDA/cuDNN version\nGPU model and memory", "It has been 15 days with no activity and the `awaiting response` label was assigned. Is this still an issue?", "Yes", "@Sciguymjm : Could you provide a self-contained short example to reproduce the problem?\r\n\r\nThat said though, marking as \"Contributions Welcome\" for now. Hopefully, someone will be willing and able to contribute a fix and can use the example reproduction you provide to guide that.\r\n\r\nThanks!", "@asimshankar Will do.", "Nagging Assignee @asimshankar: It has been 14 days with no activity and this issue has an assignee. Please update the label and/or status accordingly.", "Automatically closing due to lack of recent activity. Please update the issue when new information becomes available, and we will reopen the issue. Thanks!\r\n\r\n(@Sciguymjm : If you have a reproducible example, please do let us know by updating this thread and I'll re-open it and welcome contributions. Thanks)", "https://github.com/johndpope/Self-Attentive-tensorflow\r\nnb. I only added 2 lines\r\nfrom tensorflow.python import debug as tf_debug\r\n  sess = tf_debug.TensorBoardDebugWrapperSession(sess, 'localhost:6064')\r\n\r\n\r\nhttps://gist.github.com/johndpope/976c00fd6f4b70ab56368e6d32ef1eda\r\n\r\nuncomment \r\n sess = tf_debug.TensorBoardDebugWrapperSession(sess, 'localhost:6064')\r\nto trigger error - \r\n\r\npip freeze\r\nabsl-py==0.2.2\r\nappnope==0.1.0\r\nasn1crypto==0.24.0\r\nastor==0.6.2\r\nbackcall==0.1.0\r\nbleach==1.5.0\r\nbokeh==0.13.0\r\ncertifi==2018.4.16\r\ncffi==1.11.5\r\nchardet==3.0.4\r\ncryptography==2.2.2\r\ncycler==0.10.0\r\ncymem==1.31.2\r\nCython==0.28.3\r\ncytoolz==0.8.2\r\ndecorator==4.3.0\r\ndill==0.2.8.2\r\nentrypoints==0.2.3\r\nftfy==4.4.3\r\ngast==0.2.0\r\ngraphviz==0.8.4\r\ngrpcio==1.12.1\r\nh5py==2.8.0\r\nhtml5lib==0.9999999\r\nidna==2.7\r\nipykernel==4.8.2\r\nipython==6.4.0\r\nipython-genutils==0.2.0\r\nipywidgets==7.2.1\r\njedi==0.12.0\r\nJinja2==2.10\r\njsonschema==2.6.0\r\njupyter==1.0.0\r\njupyter-client==5.2.3\r\njupyter-console==5.2.0\r\njupyter-core==4.4.0\r\nkiwisolver==1.0.1\r\nMarkdown==2.6.11\r\nMarkupSafe==1.0\r\nmatplotlib==2.2.2\r\nmistune==0.8.3\r\nmkl-fft==1.0.0\r\nmkl-random==1.0.1\r\nmsgpack-numpy==0.4.1\r\nmsgpack-python==0.4.8\r\nmurmurhash==0.28.0\r\nnbconvert==5.3.1\r\nnbformat==4.4.0\r\nnltk==3.3\r\nnotebook==5.5.0\r\nnumpy==1.14.5\r\nopencv-python==3.4.1.15\r\npackaging==17.1\r\npandas==0.23.1\r\npandocfilters==1.4.2\r\nparso==0.2.1\r\npathlib==1.0.1\r\npexpect==4.6.0\r\npickleshare==0.7.4\r\nPillow==5.2.0\r\nplac==0.9.6\r\npreshed==1.0.0\r\nprompt-toolkit==1.0.15\r\nprotobuf==3.5.2\r\nptyprocess==0.6.0\r\npyarrow==0.9.0.post1\r\npycparser==2.18\r\nPygments==2.2.0\r\npyOpenSSL==18.0.0\r\npyparsing==2.2.0\r\nPySocks==1.6.8\r\npython-dateutil==2.7.3\r\npytz==2018.5\r\nPyYAML==3.12\r\npyzmq==17.0.0\r\nqtconsole==4.3.1\r\nregex==2017.11.9\r\nrequests==2.19.1\r\nscikit-learn==0.19.1\r\nscipy==1.1.0\r\nSend2Trash==1.5.0\r\nsimplegeneric==0.8.1\r\nSimpleITK==1.1.0\r\nsix==1.11.0\r\nspacy==2.0.11\r\ntabulate==0.8.2\r\ntensorboard==1.8.0\r\ntensorflow==1.8.0\r\ntensorpack==0.8.6\r\ntermcolor==1.1.0\r\nterminado==0.8.1\r\ntestpath==0.3.1\r\ntflearn==0.3.2\r\nthinc==6.10.2\r\ntoolz==0.9.0\r\ntornado==5.0.2\r\ntqdm==4.23.4\r\ntraitlets==4.3.2\r\nujson==1.35\r\nurllib3==1.23\r\nwcwidth==0.1.7\r\nwebencodings==0.5.1\r\nWerkzeug==0.14.1\r\nwget==3.2\r\nwidgetsnbextension==3.2.1\r\nwrapt==1.10.11", "I observed the same behavior when my model includes functions which have a `tf.constant` as default value. Maybe this helps to further confine the error?", "Just encountered this same issue. Any known workarounds?", "And how does adding a comment \"unassign asimshankar\"?????", "I have found a workaround for this issue. What happens is in the execution stack, that is found in the variable **non_tf_files** in the **_source_file_paths_outside_tensorflow_py_library** , depending on your environment, you have <frozen importlib._bootstrap>. \r\n\r\nThis causes the **guess_is_tensorflow_py_library** from **source_utils.py** method to raise a ValueError. The workaround is to edit your /dist-packages/tensorflow/python/debug/lib/source_remote.py with the following change\r\n\r\nReplace\r\n\r\n    non_tf_files = (id_to_string[file_id] for file_id in file_ids)\r\n\r\nWith\r\n\r\n    non_tf_files = (id_to_string[file_id] for file_id in file_ids)\r\n    non_tf_files = [x for x in non_tf_files if '<' not in x]\r\n\r\nThis simply removes the frozen importlib._bootstrap from the stacktrace that tensorflow checks for.", "> non_tf_files = [x for x in non_tf_files if '<' not in x]\r\n\r\nthanks, that suits for me"]}, {"number": 18331, "title": "Fix incorrect data type registration of reduce_min/reduce_max in math_ops.cc", "body": "The ops tf.reduce_min/reduce_max should only support real number types. However, `numbertype` was incorrect used in math_ops.cc. (The kernel parts in reduction_ops_min.cc and reduction_ops_max.cc use TF_CALL_REAL_NUMBER_TYPES correctly).\r\n\r\nThis fix fixes the issue by replacing numbertype to realnumbertype in math_ops.cc.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>", "comments": ["Looks like the change will cause api compatibility issues as the restriction is smaller than the last version. Closing for now."]}, {"number": 18330, "title": "contrib: minor spelling tweaks", "body": "", "comments": []}, {"number": 18329, "title": "Failed to load the native TensorFlow runtime.", "body": "\r\n------------------------\r\n\r\n### System information\r\n\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: No\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Windows 10 Pro\r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version (use command below)**: tensorflow-gpu (1.7.0). \r\n- **Python version**:  3.5.5 \r\n- **Bazel version (if compiling from source)**: N/A\r\n- **GCC/Compiler version (if compiling from source)**: N/A\r\n- **CUDA/cuDNN version**: Cudnn 5,  Cudnn 6 with Cuda 8  and Cudnn 7 with Cuda 9 \r\n- **GPU model and memory**: 3*GeForce GTX 1060 6G  MSI\r\n- **Exact command to reproduce**: import tensorflow\r\n\r\n\r\n### Describe the problem\r\nMy issue is I cannot even import tensorflow. I takes 2 minutes to load and output this error: \r\n\r\n### Source code / logs\r\n\r\n```\r\n\r\n(tensorflow) C:\\Users\\Technotronics Ltd\\Documents\\AI\\nlp>python\r\nPython 3.5.5 |Anaconda, Inc.| (default, Mar 12 2018, 17:44:09) [MSC\r\nv.1900 64 bit (AMD64)] on win32\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import tensorflow\r\nTraceback (most recent call last):\r\nTraceback (most recent call last):\r\n\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"C:\\Users\\Technotronics\r\nLtd\\AppData\\Local\\conda\\conda\\envs\\tensorflow\\lib\\site-packages\\tensorflow\\__init__.py\",\r\nline 24, in <module>\r\n    from tensorflow.python import *  # pylint: disable=redefined-builtin\r\n  File \"C:\\Users\\Technotronics\r\nLtd\\AppData\\Local\\conda\\conda\\envs\\tensorflow\\lib\\site-packages\\tensorflow\\python\\__init__.py\",\r\nline 49, in <module>\r\n    from tensorflow.python import pywrap_tensorflow\r\n  File \"C:\\Users\\Technotronics\r\nLtd\\AppData\\Local\\conda\\conda\\envs\\tensorflow\\lib\\site-packages\\tensorflow\\python\\pywrap_tensorflow.py\",\r\nline 74, in <module>\r\n    raise ImportError(msg)\r\nImportError: Traceback (most recent call last):\r\n  File \"C:\\Users\\Technotronics\r\nLtd\\AppData\\Local\\conda\\conda\\envs\\tensorflow\\lib\\site-packages\\tensorflow\\python\\pywrap_tensorflow.py\",\r\nline 58, in <module>\r\n    from tensorflow.python.pywrap_tensorflow_internal import *\r\n  File \"C:\\Users\\Technotronics\r\nLtd\\AppData\\Local\\conda\\conda\\envs\\tensorflow\\lib\\site-packages\\tensorflow\\python\\pywrap_tensorflow_internal.py\",\r\nline 18, in <module>\r\n    _pywrap_tensorflow_internal = swig_import_helper()\r\n  File \"C:\\Users\\Technotronics\r\nLtd\\AppData\\Local\\conda\\conda\\envs\\tensorflow\\lib\\site-packages\\tensorflow\\python\\pywrap_tensorflow_internal.py\",\r\nline 17, in swig_import_helper\r\n    return importlib.import_module(mname)\r\n  File \"C:\\Users\\Technotronics\r\nLtd\\AppData\\Local\\conda\\conda\\envs\\tensorflow\\lib\\importlib\\__init__.py\",\r\nline 126, in import_module\r\n    return _bootstrap._gcd_import(name[level:], package, level)\r\nImportError: DLL load failed: A dynamic link library (DLL)\r\ninitialization routine failed.\r\n\r\n\r\nFailed to load the native TensorFlow runtime.\r\n\r\n```\r\n\r\nI stumbled upon this [script](https://gist.github.com/mrry/ee5dbcfdd045fa48a27d56664411d41c) that checks the tensorflow package but it tells me that all the required DLLs appear to be present but Failed to import the TensorFlow module. \r\n\r\n```\r\n\r\nERROR: Failed to import the TensorFlow module.\r\n\r\nWARNING! This script is no longer maintained!\r\n=============================================\r\nSince TensorFlow 1.4, the self-check has been integrated with TensorFlow itself,\r\nand any missing DLLs will be reported when you execute the `import tensorflow`\r\nstatement. The error messages printed below refer to TensorFlow 1.3 and earlier,\r\nand are inaccurate for later versions of TensorFlow.\r\n\r\n- Python version is 3.5.\r\n\r\n- TensorFlow is installed at: C:\\Users\\Technotronics\r\nLtd\\AppData\\Local\\conda\\conda\\envs\\tensorflow\\lib\\site-packages\\tensorflow\r\n\r\n- All required DLLs appear to be present. Please open an issue on the\r\n  TensorFlow GitHub page: https://github.com/tensorflow/tensorflow/issues\r\n```\r\nI am totally out of clue now. Please help\r\n\r\n", "comments": ["Thank you for your post. We noticed you have not filled out the following field in the issue template. Could you update them if they are relevant in your case, or leave them as N/A? Thanks.\nHave I written custom code\nOS Platform and Distribution\nTensorFlow installed from\nTensorFlow version\nBazel version\nCUDA/cuDNN version\nGPU model and memory\nExact command to reproduce", "\r\n------------------------\r\n\r\n### System information\r\n\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: No\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Windows 10 Pro\r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version (use command below)**: tensorflow-gpu (1.7.0). \r\n- **Python version**:  3.5.5 \r\n- **Bazel version (if compiling from source)**: N/A\r\n- **GCC/Compiler version (if compiling from source)**: N/A\r\n- **CUDA/cuDNN version**: Cudnn 5,  Cudnn 6 with Cuda 8  and Cudnn 7 with Cuda 9 \r\n- **GPU model and memory**: 3*GeForce GTX 1060 6G  MSI\r\n- **Exact command to reproduce**: import tensorflow\r\n\r\n\r\n### Describe the problem\r\nMy issue is I cannot even import tensorflow. I takes 2 minutes to load and output this error: \r\n\r\n### Source code / logs\r\n\r\n```\r\n\r\n(tensorflow) C:\\Users\\Technotronics Ltd\\Documents\\AI\\nlp>python\r\nPython 3.5.5 |Anaconda, Inc.| (default, Mar 12 2018, 17:44:09) [MSC\r\nv.1900 64 bit (AMD64)] on win32\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import tensorflow\r\nTraceback (most recent call last):\r\nTraceback (most recent call last):\r\n\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"C:\\Users\\Technotronics\r\nLtd\\AppData\\Local\\conda\\conda\\envs\\tensorflow\\lib\\site-packages\\tensorflow\\__init__.py\",\r\nline 24, in <module>\r\n    from tensorflow.python import *  # pylint: disable=redefined-builtin\r\n  File \"C:\\Users\\Technotronics\r\nLtd\\AppData\\Local\\conda\\conda\\envs\\tensorflow\\lib\\site-packages\\tensorflow\\python\\__init__.py\",\r\nline 49, in <module>\r\n    from tensorflow.python import pywrap_tensorflow\r\n  File \"C:\\Users\\Technotronics\r\nLtd\\AppData\\Local\\conda\\conda\\envs\\tensorflow\\lib\\site-packages\\tensorflow\\python\\pywrap_tensorflow.py\",\r\nline 74, in <module>\r\n    raise ImportError(msg)\r\nImportError: Traceback (most recent call last):\r\n  File \"C:\\Users\\Technotronics\r\nLtd\\AppData\\Local\\conda\\conda\\envs\\tensorflow\\lib\\site-packages\\tensorflow\\python\\pywrap_tensorflow.py\",\r\nline 58, in <module>\r\n    from tensorflow.python.pywrap_tensorflow_internal import *\r\n  File \"C:\\Users\\Technotronics\r\nLtd\\AppData\\Local\\conda\\conda\\envs\\tensorflow\\lib\\site-packages\\tensorflow\\python\\pywrap_tensorflow_internal.py\",\r\nline 18, in <module>\r\n    _pywrap_tensorflow_internal = swig_import_helper()\r\n  File \"C:\\Users\\Technotronics\r\nLtd\\AppData\\Local\\conda\\conda\\envs\\tensorflow\\lib\\site-packages\\tensorflow\\python\\pywrap_tensorflow_internal.py\",\r\nline 17, in swig_import_helper\r\n    return importlib.import_module(mname)\r\n  File \"C:\\Users\\Technotronics\r\nLtd\\AppData\\Local\\conda\\conda\\envs\\tensorflow\\lib\\importlib\\__init__.py\",\r\nline 126, in import_module\r\n    return _bootstrap._gcd_import(name[level:], package, level)\r\nImportError: DLL load failed: A dynamic link library (DLL)\r\ninitialization routine failed.\r\n\r\n\r\nFailed to load the native TensorFlow runtime.\r\n\r\n```\r\n\r\nI stumbled upon this [script](https://gist.github.com/mrry/ee5dbcfdd045fa48a27d56664411d41c) that checks the tensorflow package but it tells me that all the required DLLs appear to be present but Failed to import the TensorFlow module. \r\n\r\n```\r\n\r\nERROR: Failed to import the TensorFlow module.\r\n\r\nWARNING! This script is no longer maintained!\r\n=============================================\r\nSince TensorFlow 1.4, the self-check has been integrated with TensorFlow itself,\r\nand any missing DLLs will be reported when you execute the `import tensorflow`\r\nstatement. The error messages printed below refer to TensorFlow 1.3 and earlier,\r\nand are inaccurate for later versions of TensorFlow.\r\n\r\n- Python version is 3.5.\r\n\r\n- TensorFlow is installed at: C:\\Users\\Technotronics\r\nLtd\\AppData\\Local\\conda\\conda\\envs\\tensorflow\\lib\\site-packages\\tensorflow\r\n\r\n- All required DLLs appear to be present. Please open an issue on the\r\n  TensorFlow GitHub page: https://github.com/tensorflow/tensorflow/issues\r\n```\r\nI am totally out of clue now. Please help\r\n\r\n", "Nagging Assignee @tatatodd: It has been 15 days with no activity and this issue has an assignee. Please update the label and/or status accordingly.", "Nagging Assignee @tatatodd: It has been 15 days with no activity and this issue has an assignee. Please update the label and/or status accordingly.", "This question is better asked on [StackOverflow](http://stackoverflow.com/questions/tagged/tensorflow) since it is not a bug or feature request. There is also a larger community that reads questions there.\r\n\r\nIf you think we've misinterpreted a bug, please comment again with a clear explanation, as well as all of the information requested in the [issue template](https://github.com/tensorflow/tensorflow/issues/new). Thanks!\r\n", "Same error after completing these instructions: https://www.tensorflow.org/install/pip"]}, {"number": 18328, "title": "saving model under different directory if specified one is already taken", "body": "[https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/saved_model/builder_impl.py](url)\r\nLine 87\r\n\r\nIf the specified directory name is already taken, is there a reason why the model saving has to fail instead of saving to some alternate directory? I was wondering if we could add a while loop that says that while the directory name is taken, we'll try again and save it in `export_dir + \"_\" + incr`?", "comments": ["Thank you for your post. We noticed you have not filled out the following field in the issue template. Could you update them if they are relevant in your case, or leave them as N/A? Thanks.\nHave I written custom code\nOS Platform and Distribution\nTensorFlow installed from\nTensorFlow version\nBazel version\nCUDA/cuDNN version\nGPU model and memory\nExact command to reproduce", "Have I written custom code: no, but i can, unless there's a reason why the model should fail to save\r\nOS Platform and Distribution: ubuntu 17.10\r\nTensorFlow installed from / TensorFlow version: cloned from this repo\r\nBazel version: idk what this is\r\nCUDA/cuDNN version: n/a?\r\nGPU model and memory: n/a\r\nExact command to reproduce: n/a", "The reason is primarily that the directory was specified by the caller, so we should respect that :)\r\n\r\nI don't think we want to change behavior since it breaking it would be backward incompatible.\r\n\r\nThanks for the suggestion though."]}, {"number": 18327, "title": "Comment out dynamic slice tests that rely on wrapping", "body": "This PR is to comment out dynamic slice tests that rely on wrapping.\r\n\r\nThe wrapping behaviour has not yet been specified so it can't be tested. See https://groups.google.com/forum/#!topic/xla-dev/XQ7LbZOg9Nc\r\n\r\nThis PR is a continuous work of PR #14153.", "comments": ["Nagging Assignee @andrewharp: It has been 14 days with no activity and this issue has an assignee. Please update the label and/or status accordingly.", "Nagging Assignee @andrewharp: It has been 29 days with no activity and this issue has an assignee. Please update the label and/or status accordingly.", "Nagging Assignee @andrewharp: It has been 45 days with no activity and this issue has an assignee. Please update the label and/or status accordingly.", "Nagging Assignee @andrewharp: It has been 60 days with no activity and this issue has an assignee. Please update the label and/or status accordingly.", "Sorry, this PR dropped off my radar. But it's now obsolete \u2014 we never wrap any more; instead, we clamp. The behavior is still implementation-defined, but we are thinking about just defining it..."]}, {"number": 18326, "title": "Input shape Error, bidirectional rnn", "body": "System Info:\r\n    - OS: Windows 7\r\n    - Cude: 9, 9.1\r\n    - Tensorflow: 1.7.0\r\n    - GPU Mode\r\n\r\n\r\nI have some problems with bidirectional rnn inputs. After my anderstanging, a bidirectional  rnn needs a input from the shape \"[batch_size, input_size]\".  \r\nMay input \"hidden\" has first the shape (?, 512), I then reshape is to (1, 512) and expande the dims to\r\n(1, 1, 512). I treid to pass all three versions to the bidirectional  rnn (and many more).  I have already used the last shap successful, with a normal rnn.\r\n\r\n\r\n\r\n\r\nError:\r\n```\r\nTraceback (most recent call last):\r\n  File \"X:/PyProjects/Domm_Lerner/A3C_Arthur_Julianis_Doom.py\", line 572, in <module>\r\n    master_network = AC_Network(s_size, a_size, cnn_size, 'global', None)  # Generate global network\r\n  File \"X:/PyProjects/Domm_Lerner/A3C_Arthur_Julianis_Doom.py\", line 159, in __init__\r\n    lstm_1_outputs, lstm_1_state_fw, lstm_1_state_bw = tf.nn.static_bidirectional_rnn(lstm_cell, lstm_cell, rnn_in,         initial_state_fw=state_1_in_fw, initial_state_bw=state_1_in_bw, sequence_length=step_size)\r\n  File \"X:\\PyProjects\\Domm_Lerner\\venv\\lib\\site-packages\\tensorflow\\python\\ops\\rnn.py\", line 1478, in static_bidirectional_rnn\r\n    raise TypeError(\"inputs must be a sequence\")\r\nTypeError: inputs must be a sequence\r\n```\r\n \r\n \r\n\r\nCode:\r\n```\r\n            hidden = tf.reshape(hidden, shape=[1, cnn_size])\r\n            rnn_in = tf.expand_dims(hidden, [0])\r\n\r\n            step_size = tf.shape(self.imageIn)[:1]\r\n\r\n            lstm_1_outputs, lstm_1_state_fw, lstm_1_state_bw = tf.nn.static_bidirectional_rnn(lstm_cell, lstm_cell, rnn_in,         initial_state_fw=state_1_in_fw, initial_state_bw=state_1_in_bw, sequence_length=step_size)\r\n            lstm_2_outputs, lstm_2_state_fw, lstm_2_state_bw = tf.nn.static_bidirectional_rnn(lstm_cell, lstm_cell, lstm_1_outputs, initial_state_fw=state_2_in_fw, initial_state_bw=state_2_in_bw, sequence_length=step_size)\r\n            lstm_3_outputs, lstm_3_state_fw, lstm_3_state_bw = tf.nn.static_bidirectional_rnn(lstm_cell, lstm_cell, lstm_2_outputs, initial_state_fw=state_3_in_fw, initial_state_bw=state_3_in_bw, sequence_length=step_size)\r\n            lstm_4_outputs, lstm_4_state_fw, lstm_4_state_bw = tf.nn.static_bidirectional_rnn(lstm_cell, lstm_cell, lstm_3_outputs, initial_state_fw=state_4_in_fw, initial_state_bw=state_4_in_bw, sequence_length=step_size)\r\n            lstm_5_outputs, lstm_5_state_fw, lstm_5_state_bw = tf.nn.static_bidirectional_rnn(lstm_cell, lstm_cell, lstm_4_outputs, initial_state_fw=state_5_in_fw, initial_state_bw=state_5_in_bw, sequence_length=step_size)\r\n            lstm_6_outputs, lstm_6_state_fw, lstm_6_state_bw = tf.nn.static_bidirectional_rnn(lstm_cell, lstm_cell, lstm_5_outputs, initial_state_fw=state_6_in_fw, initial_state_bw=state_6_in_bw, sequence_length=step_size)\r\n```\r\n", "comments": ["Thank you for your post. We noticed you have not filled out the following field in the issue template. Could you update them if they are relevant in your case, or leave them as N/A? Thanks.\nHave I written custom code\nOS Platform and Distribution\nTensorFlow installed from\nTensorFlow version\nBazel version\nCUDA/cuDNN version\nGPU model and memory\nExact command to reproduce", "- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: No\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Windows 7 6.1.7601 Service Pack 1 Build 7601\r\n- **TensorFlow installed from (source or binary)**: pip install\r\n- **TensorFlow version (use command below)**: 1.7.0\r\n- **Python version**: 3.6\r\n- **Bazel version (if compiling from source)**: n/a\r\n- **GCC/Compiler version (if compiling from source)**: n/a\r\n- **CUDA/cuDNN version**: 9\r\n- **GPU model and memory**: GTX 750 Ti 2GB and GTX 1080 Ti 11GB\r\n- **Exact command to reproduce**: n/a", "I think inputs needs to be a list more than the appropriate shape.", "It has been 35 days with no activity and the `awaiting response` label was assigned. Is this still an issue?", "We are closing this issue for now due to lack of activity. Please comment if this is still an issue for you. Thanks!"]}, {"number": 18325, "title": "Caught OutOfRangeError. Stopping Training. FIFOQueue '_3_prefetch_queue' is closed and has insufficient elements (requested 1, current size 0)", "body": "- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: No\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:Linux Ubuntu 16.04 (PaperSpace Quadro P4000\r\n- **TensorFlow installed from (source or binary)**: Binary\r\n- **TensorFlow version (use command below)**: 1.70\r\n- **Python version**:  3.6.3\r\n- **Bazel version (if compiling from source)**:\r\n- **GCC/Compiler version (if compiling from source)**:\r\n- **CUDA/cuDNN version**: Cuda-repo-Ubuntu1604-9-1-local..9.1.85-1..amd64 , cudnn-9.1-linux-x64-v7.1\r\n- **GPU model and memory**: Quadro P4000 - 8GB\r\n- **Exact command to reproduce**:python3 train.py --logtostderr --train_dir=training/ --pipeline_config_path=training/pipeline.config\r\n\r\nWhile running the above command for \"faster_rcnn_resnet101_kitti\" model in the PaperSpace cloud in the machine Quadro P4000 it throws the error as follows:\r\n    \r\n    INFO:tensorflow:Caught OutOfRangeError. Stopping Training. FIFOQueue '_3_prefetch_queue' is \r\n    closed and has insufficient elements (requested 1, current size 0)\r\n\t [[Node: prefetch_queue_Dequeue = QueueDequeueV2[component_types=[DT_STRING, DT_INT32, \r\n    DT_FLOAT, DT_INT32, DT_FLOAT, ..., DT_INT32, DT_INT32, DT_INT32, DT_STRING, DT_INT32], \r\n    timeout_ms=-1, _device=\"/job:localhost/replica:0/task:0/device:CPU:0\"](prefetch_queue)]]\r\n\t [[Node: BatchMultiClassNonMaxSuppression/map/TensorArray_9/_2883 = \r\n    _Recv[client_terminated=false, recv_device=\"/job:localhost/replica:0/task:0/device:GPU:0\", \r\n    send_device=\"/job:localhost/replica:0/task:0/device:CPU:0\", send_device_incarnation=1, \r\n    tensor_name=\"edge_3507_BatchMultiClassNonMaxSuppression/map/TensorArray_9\", \r\n    tensor_type=DT_FLOAT, _device=\"/job:localhost/replica:0/task:0/device:GPU:0\"]()]]\r\n\r\n    Caused by op 'prefetch_queue_Dequeue', defined at:\r\n      File \"train.py\", line 167, in <module>\r\n       tf.app.run()\r\n      File \"/home/paperspace/anaconda3/lib/python3.6/site- \r\n    packages/tensorflow/python/platform/app.py\", line 126, in run\r\n    _sys.exit(main(argv))\r\n      File \"train.py\", line 163, in main\r\n     worker_job_name, is_chief, FLAGS.train_dir)\r\n     File \"/home/paperspace/Desktop/models-master/research/object_detection/trainer.py\", line 246, in \r\n    train\r\n    clones = model_deploy.create_clones(deploy_config, model_fn, [input_queue])\r\n    File \"/home/paperspace/Desktop/models-master/research/slim/deployment/model_deploy.py\", line \r\n    193, in create_clones\r\n     outputs = model_fn(*args, **kwargs)\r\n    File \"/home/paperspace/Desktop/models-master/research/object_detection/trainer.py\", line 158, in \r\n    _create_losses\r\n     train_config.merge_multiple_label_boxes)\r\n     File \"/home/paperspace/Desktop/models-master/research/object_detection/trainer.py\", line 114, in \r\n     get_inputs\r\n     read_data_list = input_queue.dequeue()\r\n     File \"/home/paperspace/Desktop/models-master/research/object_detection/core/batcher.py\", line \r\n     111, in dequeue\r\n     batched_tensors = self._queue.dequeue()\r\n     File \"/home/paperspace/anaconda3/lib/python3.6/site- \r\n     packages/tensorflow/python/ops/data_flow_ops.py\", line 440, in dequeue\r\n     self._queue_ref, self._dtypes, name=name)\r\n     File \"/home/paperspace/anaconda3/lib/python3.6/site- \r\n     packages/tensorflow/python/ops/gen_data_flow_ops.py\", line 3730, in queue_dequeue_v2\r\n     timeout_ms=timeout_ms, name=name)\r\n     File \"/home/paperspace/anaconda3/lib/python3.6/site- \r\n     packages/tensorflow/python/framework/op_def_library.py\", line 787, in _apply_op_helper\r\n     op_def=op_def)\r\n     File \"/home/paperspace/anaconda3/lib/python3.6/site- \r\n     packages/tensorflow/python/framework/ops.py\", line 3290, in create_op\r\n     op_def=op_def)\r\n     File \"/home/paperspace/anaconda3/lib/python3.6/site- \r\n     packages/tensorflow/python/framework/ops.py\", line 1654, in __init__\r\n     self._traceback = self._graph._extract_stack()  # pylint: disable=protected-access\r\n\r\n     OutOfRangeError (see above for traceback): FIFOQueue '_3_prefetch_queue' is closed and has \r\n     insufficient elements (requested 1, current size 0)\r\n\t [[Node: prefetch_queue_Dequeue = QueueDequeueV2[component_types=[DT_STRING, DT_INT32, \r\n     DT_FLOAT, DT_INT32, DT_FLOAT, ..., DT_INT32, DT_INT32, DT_INT32, DT_STRING, DT_INT32], t \r\n     imeout_ms=-1, _device=\"/job:localhost/replica:0/task:0/device:CPU:0\"](prefetch_queue)]]\r\n\t [[Node: BatchMultiClassNonMaxSuppression/map/TensorArray_9/_2883 = \r\n     _Recv[client_terminated=false, recv_device=\"/job:localhost/replica:0/task:0/device:GPU:0\", \r\n     send_device=\"/job:localhost/replica:0/task:0/device:CPU:0\", send_device_incarnation=1, \r\n     tensor_name=\"edge_3507_BatchMultiClassNonMaxSuppression/map/TensorArray_9\", \r\n     tensor_type=DT_FLOAT, _device=\"/job:localhost/replica:0/task:0/device:GPU:0\"]()]]\r\n\r\n     INFO:tensorflow:Finished training! Saving model to disk.\r\n", "comments": ["I got same error, Did you managed to resolve it?", "@humayun No, nobody came for help.", "I have the same error, if I undusterstand, it is a problem with the database. A file is corrumpted. But I use my jpeg only, and all files are correct. I don't understand how to resolve?", "Two questions : Are your memories (RAM) full during the trainning? Do you work on black and white pictures?", "same error. ", "same error here using ssd_mobilenet_v2_coco.config. I have checked all the paths and everything seems correct", "ok I solved!!!The issue was on my ssd_mobilenet_v2_coco.config file in the input_path. I was following a tutorial and in that tutorial, the directory was data/train.record. This can work if your config file is in the same directory, but since I was following a tutorial the config file was in another folder. For instance, the issue was with the path so make sure your record's file has the right path.", "Solved as well. I had the same issue, it was because I'm used to name Tensorflow standard file *.tfrecord. Nevertheless, this time I used a generator that produce *.record and forgot to mention it in the config file. \r\n", "Nagging Assignee @bignamehyp: It has been 16 days with no activity and this issue has an assignee. Please update the label and/or status accordingly.", "yes, it's definitely a file not found issue. Solved as well on my side\n\nLe dim. 27 mai 2018 \u00e0 12:58, Rehman Zafar <notifications@github.com> a\n\u00e9crit :\n\n> Solved, I had the same error and fixed it by creating the test.record and\n> train.record files using the following two commands:\n> `python generate_tfrecord.py --csv_input=images/train_labels.csv\n> --image_dir=images/train --output_path=train.record\n>\n> python generate_tfrecord.py --csv_input=images/test_labels.csv\n> --image_dir=images/test --output_path=test.record`\n>\n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/tensorflow/tensorflow/issues/18325#issuecomment-392321973>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/ABOTbOvGM3GQdgmXeJD78G1WCWZ8Y2zNks5t2obAgaJpZM4TLiTi>\n> .\n>\n", "Nagging Assignee @bignamehyp: It has been 15 days with no activity and this issue has an assignee. Please update the label and/or status accordingly.", "Hi, I have the same issue while running open_pose training code on my own dataset. but my dataset is .mat file as depth image(grayscale). I load it with the scipy.io module in python. and repeat it on two other channels to convert 3 channels. \r\nbut I receive this issue during training\r\nCan someone help me?\r\nthank you\r\n", "> * **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: No\r\n> * **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:Linux Ubuntu 16.04 (PaperSpace Quadro P4000\r\n> * **TensorFlow installed from (source or binary)**: Binary\r\n> * **TensorFlow version (use command below)**: 1.70\r\n> * **Python version**:  3.6.3\r\n> * **Bazel version (if compiling from source)**:\r\n> * **GCC/Compiler version (if compiling from source)**:\r\n> * **CUDA/cuDNN version**: Cuda-repo-Ubuntu1604-9-1-local..9.1.85-1..amd64 , cudnn-9.1-linux-x64-v7.1\r\n> * **GPU model and memory**: Quadro P4000 - 8GB\r\n> * **Exact command to reproduce**:python3 train.py --logtostderr --train_dir=training/ --pipeline_config_path=training/pipeline.config\r\n> \r\n> While running the above command for \"faster_rcnn_resnet101_kitti\" model in the PaperSpace cloud in the machine Quadro P4000 it throws the error as follows:\r\n> \r\n> ```\r\n> INFO:tensorflow:Caught OutOfRangeError. Stopping Training. FIFOQueue '_3_prefetch_queue' is \r\n> closed and has insufficient elements (requested 1, current size 0)\r\n>  [[Node: prefetch_queue_Dequeue = QueueDequeueV2[component_types=[DT_STRING, DT_INT32, \r\n> DT_FLOAT, DT_INT32, DT_FLOAT, ..., DT_INT32, DT_INT32, DT_INT32, DT_STRING, DT_INT32], \r\n> timeout_ms=-1, _device=\"/job:localhost/replica:0/task:0/device:CPU:0\"](prefetch_queue)]]\r\n>  [[Node: BatchMultiClassNonMaxSuppression/map/TensorArray_9/_2883 = \r\n> _Recv[client_terminated=false, recv_device=\"/job:localhost/replica:0/task:0/device:GPU:0\", \r\n> send_device=\"/job:localhost/replica:0/task:0/device:CPU:0\", send_device_incarnation=1, \r\n> tensor_name=\"edge_3507_BatchMultiClassNonMaxSuppression/map/TensorArray_9\", \r\n> tensor_type=DT_FLOAT, _device=\"/job:localhost/replica:0/task:0/device:GPU:0\"]()]]\r\n> \r\n> Caused by op 'prefetch_queue_Dequeue', defined at:\r\n>   File \"train.py\", line 167, in <module>\r\n>    tf.app.run()\r\n>   File \"/home/paperspace/anaconda3/lib/python3.6/site- \r\n> packages/tensorflow/python/platform/app.py\", line 126, in run\r\n> _sys.exit(main(argv))\r\n>   File \"train.py\", line 163, in main\r\n>  worker_job_name, is_chief, FLAGS.train_dir)\r\n>  File \"/home/paperspace/Desktop/models-master/research/object_detection/trainer.py\", line 246, in \r\n> train\r\n> clones = model_deploy.create_clones(deploy_config, model_fn, [input_queue])\r\n> File \"/home/paperspace/Desktop/models-master/research/slim/deployment/model_deploy.py\", line \r\n> 193, in create_clones\r\n>  outputs = model_fn(*args, **kwargs)\r\n> File \"/home/paperspace/Desktop/models-master/research/object_detection/trainer.py\", line 158, in \r\n> _create_losses\r\n>  train_config.merge_multiple_label_boxes)\r\n>  File \"/home/paperspace/Desktop/models-master/research/object_detection/trainer.py\", line 114, in \r\n>  get_inputs\r\n>  read_data_list = input_queue.dequeue()\r\n>  File \"/home/paperspace/Desktop/models-master/research/object_detection/core/batcher.py\", line \r\n>  111, in dequeue\r\n>  batched_tensors = self._queue.dequeue()\r\n>  File \"/home/paperspace/anaconda3/lib/python3.6/site- \r\n>  packages/tensorflow/python/ops/data_flow_ops.py\", line 440, in dequeue\r\n>  self._queue_ref, self._dtypes, name=name)\r\n>  File \"/home/paperspace/anaconda3/lib/python3.6/site- \r\n>  packages/tensorflow/python/ops/gen_data_flow_ops.py\", line 3730, in queue_dequeue_v2\r\n>  timeout_ms=timeout_ms, name=name)\r\n>  File \"/home/paperspace/anaconda3/lib/python3.6/site- \r\n>  packages/tensorflow/python/framework/op_def_library.py\", line 787, in _apply_op_helper\r\n>  op_def=op_def)\r\n>  File \"/home/paperspace/anaconda3/lib/python3.6/site- \r\n>  packages/tensorflow/python/framework/ops.py\", line 3290, in create_op\r\n>  op_def=op_def)\r\n>  File \"/home/paperspace/anaconda3/lib/python3.6/site- \r\n>  packages/tensorflow/python/framework/ops.py\", line 1654, in __init__\r\n>  self._traceback = self._graph._extract_stack()  # pylint: disable=protected-access\r\n> \r\n>  OutOfRangeError (see above for traceback): FIFOQueue '_3_prefetch_queue' is closed and has \r\n>  insufficient elements (requested 1, current size 0)\r\n>  [[Node: prefetch_queue_Dequeue = QueueDequeueV2[component_types=[DT_STRING, DT_INT32, \r\n>  DT_FLOAT, DT_INT32, DT_FLOAT, ..., DT_INT32, DT_INT32, DT_INT32, DT_STRING, DT_INT32], t \r\n>  imeout_ms=-1, _device=\"/job:localhost/replica:0/task:0/device:CPU:0\"](prefetch_queue)]]\r\n>  [[Node: BatchMultiClassNonMaxSuppression/map/TensorArray_9/_2883 = \r\n>  _Recv[client_terminated=false, recv_device=\"/job:localhost/replica:0/task:0/device:GPU:0\", \r\n>  send_device=\"/job:localhost/replica:0/task:0/device:CPU:0\", send_device_incarnation=1, \r\n>  tensor_name=\"edge_3507_BatchMultiClassNonMaxSuppression/map/TensorArray_9\", \r\n>  tensor_type=DT_FLOAT, _device=\"/job:localhost/replica:0/task:0/device:GPU:0\"]()]]\r\n> \r\n>  INFO:tensorflow:Finished training! Saving model to disk.\r\n> ```\r\n\r\nI changed the function for distributed training from tf.distribute.Server() to tf.train.Server() in the train.py file and it worked."]}, {"number": 18324, "title": "can tensorflow lite be accelerated on android devices below 8.0? can renderscript or any gpu acceleration do the tricks?", "body": "Please go to Stack Overflow for help and support:\r\n\r\nhttps://stackoverflow.com/questions/tagged/tensorflow\r\n\r\nIf you open a GitHub issue, here is our policy:\r\n\r\n1. It must be a bug, a feature request, or a significant problem with documentation (for small docs fixes please send a PR instead).\r\n2. The form below must be filled out.\r\n3. It shouldn't be a TensorBoard issue. Those go [here](https://github.com/tensorflow/tensorboard/issues).\r\n\r\n**Here's why we have that policy**: TensorFlow developers respond to issues. We want to focus on work that benefits the whole community, e.g., fixing bugs and adding features. Support only helps individuals. GitHub also notifies thousands of people when issues are filed. We want them to see you communicating an interesting problem, rather than being redirected to Stack Overflow.\r\n\r\n------------------------\r\n\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:\r\n- **TensorFlow installed from (source or binary)**:\r\n- **TensorFlow version (use command below)**:\r\n- **Python version**: \r\n- **Bazel version (if compiling from source)**:\r\n- **GCC/Compiler version (if compiling from source)**:\r\n- **CUDA/cuDNN version**:\r\n- **GPU model and memory**:\r\n- **Exact command to reproduce**:\r\n\r\nYou can collect some of this information using our environment capture script:\r\n\r\nhttps://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh\r\n\r\nYou can obtain the TensorFlow version with\r\n\r\npython -c \"import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)\"\r\n\r\n### Describe the problem\r\nDescribe the problem clearly here. Be sure to convey here why it's a bug in TensorFlow or a feature request.\r\n\r\n### Source code / logs\r\nInclude any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached. Try to provide a reproducible test case that is the bare minimum necessary to generate the problem.\r\n", "comments": ["As the documentation says, the Android NNAPI is only available for version 8.1 and above. \r\nhttps://www.tensorflow.org/mobile/tflite/\r\n\r\nTF Lite does not appear to support any other Android acceleration framework.  Some people report some success adapting TF to use renderscript, e.g.\r\nhttps://github.com/EE202B/RenderScriptOps ", "thx, I'm a fresher, can you provide some advise to tune the performance to classify using tensorflow lite on android. it seems like with the same model, tensorflow lite run on IOS is much faster\r\nbtw, i run a test on nexus5x (android 8.1), it cost 800ms to classify a frame, but only 300ms on HUAWEI P9  i don't whether the nnapi is enabled?", "Here's the documentation for tuning mobile models:\r\n\r\nhttps://www.tensorflow.org/mobile/optimizing\r\n \r\nFor further advice, try StackOverflow, as this forum is for bug reports.", "I have tested the tflite camera demo on Nexus5X (android 8.1), I found the prediction is slower using NNAPI than not using NNAPI, the time consumes about 500ms per frame when using NNAPI, while 300ms per frame when NNAPI turned off.\r\nIt is confused"]}, {"number": 18323, "title": "The LSTM does not generate reproducible results, but GRU does", "body": "I can not get reproducible results by just using the LSTM, but GRU is Okay.\r\n\r\nLet me explain what happens.\r\n\r\nif I train an identical LSTM, 10 times in a loop, for the first 6 run it handles MSE equal to value `a` and for the rest 4 run it handles MSE value `b`. weird isn't? \r\nJust value `a` OR `b`. it means an identical LSTM can handle two MSEs by random and just two MSE values.\r\n\r\nand if I just replace the LSTM with GRU, all 10 runs handle identical MSEs.\r\n\r\nI use Tensorflow 1.7 and Keras 2.1.5, I run on the CPU.", "comments": ["The code is not something special, just a loop and Keras guides to make reproducible results, something like this:\r\n\r\n\r\n\r\n```python-traceback\r\n\r\nimport os\r\nos.environ['PYTHONHASHSEED'] = '0'\r\nimport numpy as np\r\nnp.random.seed(12)\r\nimport random as rn\r\nrn.seed(123)\r\nimport tensorflow as tf\r\ntf.set_random_seed(1234)\r\n\r\nsession_conf = tf.ConfigProto(intra_op_parallelism_threads=1, inter_op_parallelism_threads=1)\r\nfrom keras import backend as K\r\nsess = tf.Session(graph=tf.get_default_graph(), config=session_conf)\r\nK.set_session(sess)\r\n.\r\n.\r\n..... some other initialization and codes\r\n.\r\n\r\nfor cnt in range(0, 10):    \r\n            \r\n    model = Sequential()        \r\n    model.add(LSTM(10, input_shape=(1, 5), return_sequences=False))\r\n    model.add(Dense(1, activation = \"linear\")) \r\n    model.compile(loss='mse', optimizer='adam')\r\n    model.summary()\r\n    history = model.fit(train_X, train_y, epochs=5, batch_size=1, validation_data=(test_X, test_y), \r\n                    verbose = 2, shuffle = False, callbacks=[tbCallBack])          \r\n  \r\n    del model\r\n    K.clear_session() \r\n    np.random.seed(12)    \r\n    rn.seed(123)    \r\n    tf.set_random_seed(1234)\r\n\r\n```", "Why nobody considers this?  :-(", "This question is better asked on [StackOverflow](http://stackoverflow.com/questions/tagged/tensorflow) since it is not a bug or feature request. There is also a larger community that reads questions there.\r\n\r\nIf you think we've misinterpreted a bug, please comment again with a clear explanation, as well as all of the information requested in the [issue template](https://github.com/tensorflow/tensorflow/issues/new). Thanks!\r\n", "explanation is clear, but you have a great talent to just close issues. this is a clear bug. \r\n\r\nI gave a clear explanation with sample code. You just making buggy products and crash other developers who make similar libraries just because you have money. if you don't know how to solve it, say I can not because I just got hired by friendship and connection.", "Can you print the MSE differences?\r\n\r\nCan you compare the graphdefs generated for each entry of the loop and ensure the ops are created in the same order?", "Can you use tf.reset_default_graph() between iterations?", "@ebrevdo \r\n\r\nI trained both LSTM and GRU, each 10 times in a loop. both for 5 epochs. everything is identical for both.\r\n\r\n**GRU:**\r\n\r\nAll 10 runs handle the same results as below and all are identical:\r\n\r\n```\r\nEpoch 1/5\r\n - 2s - loss: 0.0085 - val_loss: 0.0011\r\nEpoch 2/5\r\n - 1s - loss: 0.0087 - val_loss: 1.4272e-04\r\nEpoch 3/5\r\n - 1s - loss: 0.0049 - val_loss: 5.7577e-05\r\nEpoch 4/5\r\n - 1s - loss: 0.0025 - val_loss: 7.7277e-04\r\nEpoch 5/5\r\n - 1s - loss: 0.0013 - val_loss: 0.0019\r\n```\r\n\r\n**LSTM:**\r\n\r\nWithin 10 runs, sometimes it delivers the results like A and sometimes like B. it is something like a rotary switch that randomly goes to A or B.\r\n\r\nA:\r\n```\r\nEpoch 1/5\r\n - 2s - loss: 0.0146 - val_loss: 6.0151e-04\r\nEpoch 2/5\r\n - 1s - loss: 0.0111 - val_loss: 1.2672e-04\r\nEpoch 3/5\r\n - 1s - loss: 0.0071 - val_loss: 2.7325e-04\r\nEpoch 4/5\r\n - 1s - loss: 0.0041 - val_loss: 6.2337e-04\r\nEpoch 5/5\r\n - 1s - loss: 0.0021 - val_loss: 8.3224e-04  \r\n```\r\n\r\nB:\r\n```\r\nEpoch 1/5\r\n - 2s - loss: 0.0146 - val_loss: 6.0327e-04\r\nEpoch 2/5\r\n - 1s - loss: 0.0111 - val_loss: 1.2939e-04\r\nEpoch 3/5\r\n - 1s - loss: 0.0071 - val_loss: 2.7630e-04\r\nEpoch 4/5\r\n - 1s - loss: 0.0041 - val_loss: 6.2675e-04\r\nEpoch 5/5\r\n - 2s - loss: 0.0021 - val_loss: 8.3687e-04\r\n```\r\n\r\n> Can you use tf.reset_default_graph() between iterations?\r\n\r\nI tried it. unfortunately it did not change the situation.\r\n\r\n> Can you compare the graphdefs generated for each entry of the loop and ensure the ops are created in the same order?\r\n\r\nI could not get the point. Would you please explain it more?", "print(tf.get_default_graph().as_graph_def()) to file between each session\nand diff the files to see what's out of order.\n\nOn Wed, Apr 11, 2018, 2:21 PM Hesam Moshiri <notifications@github.com>\nwrote:\n\n> @ebrevdo <https://github.com/ebrevdo>\n>\n> I trained both LSTM and GRU for 10 times in a loop. both for 5 epochs.\n> everything is identical for both.\n>\n> *GRU:*\n>\n> All 10 runs handle the same results as below and all are identical:\n>\n> Epoch 1/5\n>  - 2s - loss: 0.0085 - val_loss: 0.0011\n> Epoch 2/5\n>  - 1s - loss: 0.0087 - val_loss: 1.4272e-04\n> Epoch 3/5\n>  - 1s - loss: 0.0049 - val_loss: 5.7577e-05\n> Epoch 4/5\n>  - 1s - loss: 0.0025 - val_loss: 7.7277e-04\n> Epoch 5/5\n>  - 1s - loss: 0.0013 - val_loss: 0.0019\n>\n> *LSTM:*\n>\n> Within 10 runs, sometimes it delivers the results like A and sometimes\n> like B. it is something like rotary switch that randomly goes to A or to B.\n>\n> A:\n>\n> Epoch 1/5\n>  - 2s - loss: 0.0146 - val_loss: 6.0151e-04\n> Epoch 2/5\n>  - 1s - loss: 0.0111 - val_loss: 1.2672e-04\n> Epoch 3/5\n>  - 1s - loss: 0.0071 - val_loss: 2.7325e-04\n> Epoch 4/5\n>  - 1s - loss: 0.0041 - val_loss: 6.2337e-04\n> Epoch 5/5\n>  - 1s - loss: 0.0021 - val_loss: 8.3224e-04\n>\n> B:\n>\n> Epoch 1/5\n>  - 2s - loss: 0.0146 - val_loss: 6.0327e-04\n> Epoch 2/5\n>  - 1s - loss: 0.0111 - val_loss: 1.2939e-04\n> Epoch 3/5\n>  - 1s - loss: 0.0071 - val_loss: 2.7630e-04\n> Epoch 4/5\n>  - 1s - loss: 0.0041 - val_loss: 6.2675e-04\n> Epoch 5/5\n>  - 2s - loss: 0.0021 - val_loss: 8.3687e-04\n>\n> Can you use tf.reset_default_graph() between iterations?\n>\n> I tried it. unfortunately it did not change the situation.\n>\n> Can you compare the graphdefs generated for each entry of the loop and\n> ensure the ops are created in the same order?\n>\n> I could not get the point. Would you please explain it more?\n>\n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/tensorflow/tensorflow/issues/18323#issuecomment-380599426>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/ABtimw7NPqU6WCFl0edPxY8ckjqlneq3ks5tnnPsgaJpZM4TLdQt>\n> .\n>\n", "@ebrevdo \r\n\r\nI used a python code like this to record the result of each session of the loop in a separate `.txt` file:\r\n\r\n```python-traceback\r\nwith open(str(cnt) + \".txt\", 'w') as f:        \r\n        print(tf.get_default_graph().as_graph_def(), file=f)\r\n```\r\n\r\nand used a code like this to find a difference in the texts where A and B happens, because the content of each file is quite long (33,239 lines):\r\n\r\n```python-traceback\r\nfile1 = open(\"1.txt\", 'r')\r\nfile2 = open(\"3.txt\", 'r')\r\nDict1 = file1.readlines()\r\nDict2 = file2.readlines()\r\nDF = [ x for x in Dict1 if x not in Dict2 ]\r\nprint(DF)\r\n```\r\n\r\n\r\nbut it could not find any difference!", "@ebrevdo \r\n\r\nany more ideas?", "Check the graph def to see if all ops with the type containing \"random\" have a seed and seed2 attr set.", "@ebrevdo \r\n\r\nYes, both attributes are set, but seed2 values are different in two places where seed2 have been set\r\n\r\n```\r\nattr {\r\n    key: \"seed\"\r\n    value {\r\n      i: 1234\r\n    }\r\n  }\r\n  attr {\r\n    key: \"seed2\"\r\n    value {\r\n      i: 7812939\r\n    }\r\n  }\r\n```\r\n\r\n```\r\nattr {\r\n    key: \"seed\"\r\n    value {\r\n      i: 1234\r\n    }\r\n  }\r\n  attr {\r\n    key: \"seed2\"\r\n    value {\r\n      i: 1027356\r\n    }\r\n  }\r\n```", "Different across different graphdefs?\n\nOn Sat, Apr 14, 2018, 4:22 PM Hesam Moshiri <notifications@github.com>\nwrote:\n\n> @ebrevdo <https://github.com/ebrevdo>\n>\n> Yes, both attributes are set, but seed2 values are different in two places\n> where seed2 have been set\n>\n> attr {\n>     key: \"seed\"\n>     value {\n>       i: 1234\n>     }\n>   }\n>   attr {\n>     key: \"seed2\"\n>     value {\n>       i: 7812939\n>     }\n>   }\n>\n> attr {\n>     key: \"seed\"\n>     value {\n>       i: 1234\n>     }\n>   }\n>   attr {\n>     key: \"seed2\"\n>     value {\n>       i: 1027356\n>     }\n>   }\n>\n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/tensorflow/tensorflow/issues/18323#issuecomment-381367670>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/ABtim9jXNMs372kxrLVrNY_lgdvHweaKks5tooTCgaJpZM4TLdQt>\n> .\n>\n", "> Different across different graphdefs?\r\n\r\nNo, it is different across the same files. if anything was different across two files (where it generates A and B), I was detecting it in the previous step with the code. All files are identical.\r\n\r\n`seed` and `seed2` are written in two places in a file and `seed2` value, as I wrote above, has two values in the file, but as you see `seed` is fixed to `1234` in both", "I attached one of them if it can help.\r\n\r\n[1.txt](https://github.com/tensorflow/tensorflow/files/1911714/1.txt)\r\n", "Are the results consistent if you do everything in float64?\n\nOn Sat, Apr 14, 2018, 11:01 PM Hesam Moshiri <notifications@github.com>\nwrote:\n\n> I attached one of them if it can help.\n>\n> 1.txt <https://github.com/tensorflow/tensorflow/files/1911714/1.txt>\n>\n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/tensorflow/tensorflow/issues/18323#issuecomment-381382456>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/ABtim-nJJg0POMrxLA4vjA17pBcld1oiks5touJWgaJpZM4TLdQt>\n> .\n>\n", "I tested it and it made no difference unfortunately.\r\n\r\nThe data is written in a `csv` file and I read it using Pandas. before your tips, I was converting the type to float like this (`db` is the loaded data)\r\n\r\n`db = db.astype('float')`\r\n\r\nand now I changed to\r\n\r\n`db = db.astype('float64')`\r\n\r\n![2018-04-16_0-09-07](https://user-images.githubusercontent.com/18719591/38782543-6f7d4002-410a-11e8-8098-55f23bfd4364.png)\r\n\r\nbut still it shows same problem. It is quite weird that GRU is okay but LSTM shows this behavior.", "Please consider this issue with developers because I'm doing some research with this and this can not be accepted as a scientific work, if the results are not reproducible.\r\n\r\nI have used Caffe for image processing before (although initially it was made by one person), and even with using GPU, Cuda, CuDNN and complex networks, such as GoogleNet, AlexNet and similar all results were exactly reproducible. Here I had to go to CPU and tolerate low speed but still I can not get satisfactory results.", "is it repeatable ", "are the results consistent if you use static_rnn instead of dynamic_rnn?", "(in order for us to test this properly on our end; we need a full reproducible code example; as minimal as possible)", "> are the results consistent if you use static_rnn instead of dynamic_rnn?\r\n\r\nis it implemented in Keras?", "Are you using keras for your LSTM or tf.nn.dynamic_rnn?\n\nOn Wed, Apr 18, 2018 at 8:41 AM, Hesam Moshiri <notifications@github.com>\nwrote:\n\n> are the results consistent if you use static_rnn instead of dynamic_rnn?\n>\n> is it implemented in Keras?\n>\n> \u2014\n> You are receiving this because you modified the open/close state.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/tensorflow/tensorflow/issues/18323#issuecomment-382432142>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/ABtim5hgLZv0yDp1mxSa66qzqRRd6RWCks5tp16wgaJpZM4TLdQt>\n> .\n>\n", "> Are you using keras for your LSTM or tf.nn.dynamic_rnn?\r\n\r\n`from keras.layers import LSTM`\r\n\r\nthen I used it for training exactly like the aforementioned code. \r\n\r\n> (in order for us to test this properly on our end; we need a full reproducible code example; as minimal as possible)\r\n\r\nBelieve me the main code is just what I provided above. the rest is just data preparation for the network. anyway if you still think my code is something special, I can send it to you.", "@fchollet owns the keras LSTM code; he will be able to guide you.", "Actually I had asked this either in the Keras repo 11 days ago, but they are not responsive to issues.\r\n\r\nhttps://github.com/keras-team/keras/issues/9876", "@ebrevdo \r\n@fchollet \r\n\r\nLet me give a minimal code for you to test and confirm. \r\n\r\nI attached the database as a numpy array. so you can import it to the `Spyder` variables explorer and run the code and consider the training results as I provided above, You can also switch the LSTM with GRU and see the results.\r\n\r\n- Create an Anaconda python environment with python=3.6.4\r\n- install Tensorflow (1.7), Keras (2.1.5) and other dependencies.\r\n- install the Spyder\r\n- unzip and import the attached numpy array to the Spyder variable explorer: `values.npy`\r\n[values.zip](https://github.com/tensorflow/tensorflow/files/1928544/values.zip)\r\n\r\n```python-traceback\r\nimport os\r\nos.environ['PYTHONHASHSEED'] = '0'\r\nimport numpy as np\r\nnp.random.seed(12)\r\nimport random as rn\r\nrn.seed(123)\r\nimport tensorflow as tf\r\ntf.set_random_seed(1234)\r\n\r\nsession_conf = tf.ConfigProto(intra_op_parallelism_threads=1, inter_op_parallelism_threads=1)\r\nfrom keras import backend as K\r\n\r\nsess = tf.Session(graph=tf.get_default_graph(), config=session_conf)\r\n\r\nK.set_session(sess)\r\n\r\nfrom keras import initializers\r\nfrom keras.optimizers import Adam\r\nfrom keras.callbacks import EarlyStopping, TensorBoard\r\nfrom keras.models import Sequential\r\nfrom keras.layers import LSTM, GRU, Dense\r\n\r\nlag = 5\r\n\r\ntrain = values[:(450 - lag - 1), :]\r\ntest = values[(450 - lag - 1):, :]\r\n\r\nnum_parameters = 5\r\nfeature = num_parameters - 1\r\n\r\ntrain_X, train_y = train[:, 0:num_parameters * lag], train[:, feature - num_parameters]\r\ntrain_X = train_X.reshape((train_X.shape[0], lag, num_parameters))\r\n\r\ntest_X, test_y = test[:, 0:num_parameters * lag], test[:, feature - num_parameters]\r\ntest_X = test_X.reshape((test_X.shape[0], lag, num_parameters))\r\n\r\nprint(train_X.shape, train_y.shape, test_X.shape, test_y.shape)\r\n\r\ntbCallBack = TensorBoard(log_dir='logs', histogram_freq=0, batch_size=32,\r\nwrite_graph=True, write_grads=False, write_images=True, embeddings_freq=0, \r\nembeddings_layer_names=None, embeddings_metadata=None)\r\n\r\n#===============================================\r\n\r\nfor counter in range(1, 11):    \r\n            \r\n    model = Sequential()\r\n    model.add(LSTM(5, input_shape=(lag, num_parameters), return_sequences=False))\r\n    model.add(Dense(1, activation = \"linear\"))\r\n    model.compile(loss='mse', optimizer='adam')\r\n    model.summary()\r\n    history = model.fit(train_X, train_y, epochs=5, batch_size=1, validation_data=(test_X, test_y), \r\n                    verbose = 2, shuffle = False, callbacks=[tbCallBack])    \r\n          \r\n    with open(str(counter) + \".txt\", 'w') as f:        \r\n        print(tf.get_default_graph().as_graph_def(), file=f)\r\n        \r\n    print(\"Counter=\", counter)    \r\n    del model\r\n    K.clear_session() \r\n    tf.reset_default_graph()\r\n    np.random.seed(12)    \r\n    rn.seed(123)    \r\n    tf.set_random_seed(1234)\r\n```\r\n\r\n\r\n**------------- The results you should get-----------------------**\r\n\r\n**GRU:**\r\n\r\nAll 10 runs handle the same results as below and all are identical:\r\n\r\n```\r\nEpoch 1/5\r\n - 2s - loss: 0.0085 - val_loss: 0.0011\r\nEpoch 2/5\r\n - 1s - loss: 0.0087 - val_loss: 1.4272e-04\r\nEpoch 3/5\r\n - 1s - loss: 0.0049 - val_loss: 5.7577e-05\r\nEpoch 4/5\r\n - 1s - loss: 0.0025 - val_loss: 7.7277e-04\r\nEpoch 5/5\r\n - 1s - loss: 0.0013 - val_loss: 0.0019\r\n```\r\n\r\n**LSTM:**\r\n\r\nWithin 10 runs, sometimes it delivers the results like A and sometimes like B. it is something like a rotary switch that randomly goes to A or B.\r\n\r\nA:\r\n```\r\nEpoch 1/5\r\n - 2s - loss: 0.0146 - val_loss: 6.0151e-04\r\nEpoch 2/5\r\n - 1s - loss: 0.0111 - val_loss: 1.2672e-04\r\nEpoch 3/5\r\n - 1s - loss: 0.0071 - val_loss: 2.7325e-04\r\nEpoch 4/5\r\n - 1s - loss: 0.0041 - val_loss: 6.2337e-04\r\nEpoch 5/5\r\n - 1s - loss: 0.0021 - val_loss: 8.3224e-04  \r\n```\r\n\r\nB:\r\n```\r\nEpoch 1/5\r\n - 2s - loss: 0.0146 - val_loss: 6.0327e-04\r\nEpoch 2/5\r\n - 1s - loss: 0.0111 - val_loss: 1.2939e-04\r\nEpoch 3/5\r\n - 1s - loss: 0.0071 - val_loss: 2.7630e-04\r\nEpoch 4/5\r\n - 1s - loss: 0.0041 - val_loss: 6.2675e-04\r\nEpoch 5/5\r\n - 2s - loss: 0.0021 - val_loss: 8.3687e-04\r\n```\r\n", "No idea? :-( \r\n\r\nReally I got tired.", "My research project has stuck because of this. ", "Today I upgraded to the Tensorflow 1.8, \r\n\r\nI can't believe that the problem was solved now! \r\n\r\nI don't know what you have changed in the code which relates to this, but I can not see this specific issue anymore. But please keep this open till I do more tests.\r\n\r\nI had upgraded the Keras to 2.1.6 before (because it had released sooner), but it did not change the situation.", "Well, the problem still exists but now it happens when we add a `Dropout` layer. The results are all identical for the GRU, but switches between two values for the LSTM !!\r\n\r\nYou don't want to hire me as a software tester?!\r\n\r\n========================================\r\n\r\nI attached the database as a numpy array. so you can import it to the `Spyder` variables explorer and run the code and consider the training results as I provided below, You can also switch the LSTM with GRU and see the results.\r\n\r\n- Create an Anaconda python environment with python=3.6.4\r\n- install Tensorflow (1.8), Keras (2.1.6) and other dependencies.\r\n- install the Spyder\r\n- unzip and import the attached numpy array to the Spyder variable explorer: `values.npy`\r\n[values.zip](https://github.com/tensorflow/tensorflow/files/1981667/values.zip)\r\n\r\n\r\n```python-traceback\r\nimport os\r\nos.environ['PYTHONHASHSEED'] = '0'\r\nimport numpy as np\r\nnp.random.seed(12)\r\nimport random as rn\r\nrn.seed(123)\r\nimport tensorflow as tf\r\ntf.set_random_seed(1234)\r\n\r\nsession_conf = tf.ConfigProto(intra_op_parallelism_threads=1, inter_op_parallelism_threads=1)\r\nfrom keras import backend as K\r\n\r\nsess = tf.Session(graph=tf.get_default_graph(), config=session_conf)\r\n\r\nK.set_session(sess)\r\n\r\nfrom keras import initializers\r\nfrom keras.optimizers import Adam\r\nfrom keras.callbacks import EarlyStopping, TensorBoard\r\nfrom keras.models import Sequential\r\nfrom keras.layers import LSTM, GRU, Dense\r\n\r\nlag = 5\r\n\r\ntrain = values[:(450 - lag - 1), :]\r\ntest = values[(450 - lag - 1):, :]\r\n\r\nnum_parameters = 5\r\nfeature = num_parameters - 1\r\n\r\ntrain_X, train_y = train[:, 0:num_parameters * lag], train[:, feature - num_parameters]\r\ntrain_X = train_X.reshape((train_X.shape[0], lag, num_parameters))\r\n\r\ntest_X, test_y = test[:, 0:num_parameters * lag], test[:, feature - num_parameters]\r\ntest_X = test_X.reshape((test_X.shape[0], lag, num_parameters))\r\n\r\nprint(train_X.shape, train_y.shape, test_X.shape, test_y.shape)\r\n\r\ntbCallBack = TensorBoard(log_dir='logs', histogram_freq=0, batch_size=32,\r\nwrite_graph=True, write_grads=False, write_images=True, embeddings_freq=0, \r\nembeddings_layer_names=None, embeddings_metadata=None)\r\n\r\n#===============================================\r\n\r\nfor counter in range(1, 11):    \r\n            \r\n    model = Sequential()\r\n    model.add(LSTM(60, input_shape=(lag, num_parameters), return_sequences=False))\r\n    model.add(Dropout(0.05))\r\n    model.add(Dense(1, activation = \"linear\"))\r\n    model.compile(loss='mse', optimizer='adam')\r\n    model.summary()\r\n    history = model.fit(train_X, train_y, epochs=5, batch_size=1, validation_data=(test_X, test_y), \r\n                    verbose = 2, shuffle = False, callbacks=[tbCallBack])    \r\n          \r\n    with open(str(counter) + \".txt\", 'w') as f:        \r\n        print(tf.get_default_graph().as_graph_def(), file=f)\r\n        \r\n    print(\"Counter=\", counter)    \r\n    del model\r\n    K.clear_session() \r\n    tf.reset_default_graph()\r\n    np.random.seed(12)    \r\n    rn.seed(123)    \r\n    tf.set_random_seed(1234)\r\n```\r\n\r\n\r\n**------------- The results you should get-----------------------**\r\n\r\n**GRU:**\r\n\r\nAll 10 runs handle the same results as below and all are identical:\r\n\r\n```\r\nEpoch 1/5\r\n - 2s - loss: 0.0023 - val_loss: 0.0037\r\nEpoch 2/5\r\n - 2s - loss: 0.0034 - val_loss: 2.9823e-04\r\nEpoch 3/5\r\n - 1s - loss: 0.0022 - val_loss: 0.0025\r\nEpoch 4/5\r\n - 1s - loss: 0.0019 - val_loss: 0.0013\r\nEpoch 5/5\r\n - 1s - loss: 0.0016 - val_loss: 1.0047e-04\r\n```\r\n\r\n\r\n**LSTM:**\r\n\r\nWithin 10 runs, sometimes it delivers the results like A and sometimes like B. it is something like a rotary switch that randomly goes to A or B.\r\n\r\n**A:**\r\n\r\n```\r\nEpoch 1/5\r\n - 2s - loss: 0.0021 - val_loss: 0.0101\r\nEpoch 2/5\r\n - 2s - loss: 0.0058 - val_loss: 2.3162e-04\r\nEpoch 3/5\r\n - 2s - loss: 0.0053 - val_loss: 3.7952e-04\r\nEpoch 4/5\r\n - 2s - loss: 0.0044 - val_loss: 3.2818e-04\r\nEpoch 5/5\r\n - 2s - loss: 0.0042 - val_loss: 1.4068e-04\r\n```\r\n\r\n**B:**\r\n\r\n```\r\nEpoch 1/5\r\n - 2s - loss: 0.0020 - val_loss: 0.0101\r\nEpoch 2/5\r\n - 2s - loss: 0.0057 - val_loss: 2.4354e-04\r\nEpoch 3/5\r\n - 2s - loss: 0.0052 - val_loss: 3.7617e-04\r\nEpoch 4/5\r\n - 2s - loss: 0.0044 - val_loss: 3.7726e-04\r\nEpoch 5/5\r\n - 2s - loss: 0.0042 - val_loss: 1.4422e-04\r\n```", "I updated to the Keras 2.2.0 (TF 1.8.0)\r\n\r\nThe above code exits the loop after iteration 3 (counter=3), with no error or warning or something like that, just it exists the loop!. Unbelievable. \r\n\r\nKeras 2.1.6 does not have this specific problem.", "Same problem here. I am setting every seed to 0, even in Dropout layers, but LSTM still gives different results.\r\nTensorflow version: 2.5.0\r\n\r\n```\r\nseed = 0\r\nrandom.seed(seed)\r\ntf.random.set_seed(seed)\r\nnp.random.seed(seed)\r\n```\r\n\r\nand the model\r\n\r\n```\r\nmodel = tf.keras.Sequential([\r\n    LSTM(units=32, activation=elu, return_sequences=True),\r\n    BatchNormalization(),\r\n    Dropout(rate=0.3, seed=seed),\r\n    LSTM(units=32, activation=elu),\r\n    Dense(64, activation=elu),\r\n    BatchNormalization(),\r\n    Dropout(rate=0.4, seed=seed),\r\n    Dense(2, activation=softmax),\r\n])\r\n\r\nmodel.compile(\r\n    optimizer=Adam(learning_rate=0.001),\r\n    loss=BinaryCrossentropy(), \r\n    metrics=['acc', 'mae', \r\n             tf.keras.metrics.Recall(), \r\n             tf.keras.metrics.Precision(), \r\n            ]\r\n)\r\n```", "Can you also try setting the `seed` for the `kernel_initializer` in each layer ?\r\n```python\r\nLSTM(units=32, activation='elu', kernel_initializer=tf.keras.initializers.glorot_uniform(seed=1), return_sequences=True)\r\n. . . \r\n```"]}, {"number": 18322, "title": "Tensorflow 1.7.0 - Illegal instruction", "body": "Hy everyone!\r\n\r\nI have Illegal instruction with tensorflow (v. 1.7) when I just type the import command:\r\n\r\nPython 2.7.14 |Anaconda, Inc.| (default, Mar 27 2018, 17:29:31) \r\n[GCC 7.2.0] on linux2\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import tensorflow as tf\r\nIllegal instruction ( core dumped creato )\r\n\r\nSurface the internet for the solution, I found that I can downgrade at 1.5 but I cannot downgrade at 1.5 because I need new attribute that are located in 1.6 and 1.7. (the attribute is tf.contrib.data.shuffle_and_repeat).\r\n\r\nHow can I fix the problem?\r\n\r\nThis is my CPU: AMD A4-3300M APU with Radeon(tm) HD Graphics\r\nIt's to old to run tensorflow? Is tensorflow works with new CPU and GPU? My PC is 6-7 years old.\r\n", "comments": ["This CPU does not support the AVX instructions. The prebuilt binaries (after 1.6) require it. Please install from source.", "Yup, as @xysmlx said : TensorFlow release binaries are now compiled with AVX support. If your CPU does not support that, you'll have to build from source for now. (see [\"Release Notes\"](https://github.com/tensorflow/tensorflow/releases/tag/v1.6.0) for 1.6)"]}, {"number": 18321, "title": "contrib/lite: Avoid building benchmark_model for RPi", "body": "Now benchmark_model depends on //tensorflow/core library.", "comments": ["This is a solution for #17822 ,\r\nSolution as #17796 .", "Nagging Assignee @andrewharp: It has been 14 days with no activity and this issue has an assignee. Please update the label and/or status accordingly.", "Nagging Assignee @petewarden: It has been 14 days with no activity and this issue has an assignee. Please update the label and/or status accordingly.", "Nagging Assignee @petewarden: It has been 30 days with no activity and this issue has an assignee. Please update the label and/or status accordingly."]}, {"number": 18320, "title": "How to solve the problem that the unsupported operations", "body": "### Describe the problem\r\nI want to convert my project to xxx.tflite,but i meet the problem blew \"Didn't find custom op for name 'FLOOR'\". So how to solve this problem?\r\n\r\n### Source code / logs\r\n![image](https://user-images.githubusercontent.com/15247604/38462856-e05f469e-3b1f-11e8-8e0e-07c61f28cedf.png)\r\n", "comments": ["Thank you for your post. We noticed you have not filled out the following field in the issue template. Could you update them if they are relevant in your case, or leave them as N/A? Thanks.\nHave I written custom code\nOS Platform and Distribution\nTensorFlow installed from\nTensorFlow version\nBazel version\nCUDA/cuDNN version\nGPU model and memory\nExact command to reproduce", "It has been 15 days with no activity and the `awaiting response` label was assigned. Is this still an issue?", "It has been 16 days with no activity and the `awaiting response` label was assigned. Is this still an issue?", "It has been 16 days with no activity and the `awaiting response` label was assigned. Is this still an issue?", "It has been 14 days with no activity and the `awaiting response` label was assigned. Is this still an issue?", "We are closing this issue for now due to lack of activity. Please comment if this is still an issue for you. Thanks!"]}, {"number": 18319, "title": "Fix typo in error message", "body": "", "comments": ["\nThanks for your pull request. It looks like this may be your first contribution to a Google open source project (if not, look below for help). Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).\n\n:memo: **Please visit <https://cla.developers.google.com/> to sign.**\n\nOnce you've signed (or fixed any issues), please reply here (e.g. `I signed it!`) and we'll verify it.\n\n----\n\n#### What to do if you already signed the CLA\n\n##### Individual signers\n\n*   It's possible we don't have your GitHub username or you're using a different email address on your commit. Check [your existing CLA data](https://cla.developers.google.com/clas) and verify that your [email is set on your git commits](https://help.github.com/articles/setting-your-email-in-git/).\n\n##### Corporate signers\n\n*   Your company has a Point of Contact who decides which employees are authorized to participate. Ask your POC to be added to the group of authorized contributors. If you don't know who your Point of Contact is, direct the Google project maintainer to [go/cla#troubleshoot](go/cla#troubleshoot) ([Public version](https://opensource.google.com/docs/cla/#troubleshoot)).\n*   The email used to register you as an authorized contributor must be the email used for the Git commit. Check [your existing CLA data](https://cla.developers.google.com/clas) and verify that your [email is set on your git commits](https://help.github.com/articles/setting-your-email-in-git/).\n*   The email used to register you as an authorized contributor must also be [attached to your GitHub account](https://github.com/settings/emails).\n\t\t\n\n<!-- need_sender_cla -->", "I signed it!", "CLAs look good, thanks!\n\n<!-- ok -->"]}, {"number": 18318, "title": "Is input of tf.contrib.cudnn_rnn.CudnnLSTM time-major?", "body": "\r\n\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: 17.10\r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version (use command below)**: 1.6\r\n- **Python version**: 3.6\r\n- **Bazel version (if compiling from source)**:\r\n- **GCC/Compiler version (if compiling from source)**:\r\n- **CUDA/cuDNN version**:9/7.0\r\n- **GPU model and memory**:\r\n- **Exact command to reproduce**:\r\n\r\n### Describe the problem\r\n\r\nI save this in tensorflow/models: [quick_draw exmple](https://github.com/tensorflow/models/blob/master/tutorials/rnn/quickdraw/train_model.py)\r\n\r\nyou can see that in the comment of this function.  it says that CudnnLSTM is time-major, so it need a transpose. But I don't find this information in documentation [here](https://tensorflow.google.cn/versions/r1.6/api_docs/python/tf/contrib/cudnn_rnn/CudnnLSTM#__call__):\r\n\r\nWhere can I get confirmation of this ?\r\n```\r\n  def _add_cudnn_rnn_layers(convolved):\r\n    \"\"\"Adds CUDNN LSTM layers.\"\"\"\r\n    # Convolutions output [B, L, Ch], while CudnnLSTM is time-major.\r\n    convolved = tf.transpose(convolved, [1, 0, 2])\r\n    lstm = tf.contrib.cudnn_rnn.CudnnLSTM(\r\n        num_layers=params.num_layers,\r\n        num_units=params.num_nodes,\r\n        dropout=params.dropout if mode == tf.estimator.ModeKeys.TRAIN else 0.0,\r\n        direction=\"bidirectional\")\r\n    outputs, _ = lstm(convolved)\r\n    # Convert back from time-major outputs to batch-major outputs.\r\n    outputs = tf.transpose(outputs, [1, 0, 2])\r\n    return outputs\r\n\r\n```\r\n", "comments": ["Nagging Assignee @shivaniag: It has been 15 days with no activity and this issue has an assignee. Please update the label and/or status accordingly.", "Nagging Assignee @shivaniag: It has been 16 days with no activity and this issue has an assignee. Please update the label and/or status accordingly.", "I also meet this problem and it takes hours for me to figure out that CudnnLSTM is time-major according to this [answer](https://stackoverflow.com/questions/49183538/simple-example-of-cudnngru-based-rnn-implementation-in-tensorflow).    \r\nFor a beginner like me, it is also likely to use CudnnLSTM as a substitution of RNNCell and falsely use it as the input of tf.nn.bidirectional_dynamic_rnn.   \r\nWould it be possible to clarify the input and output of tf.contrib.cudnn_rnn.CudnnLSTM more clearly in the [documentation](https://www.tensorflow.org/api_docs/python/tf/contrib/cudnn_rnn/CudnnLSTM)?  \r\nThanks!\r\n\r\n\r\n\r\n"]}, {"number": 18317, "title": "[bug] FtrlOptimizer with l2_shrinkage_regularization_strength is incorrect", "body": "The result of `accum` in FtrlOptimizer with l2_shrinkage_regularization_strength seems incorrect.\r\n\r\nTest code:\r\n```\r\nimport tensorflow as tf\r\n\r\nfrom tensorflow.python.framework import constant_op\r\nfrom tensorflow.python.ops import variables\r\nfrom tensorflow.python.training import ftrl\r\n\r\ndtype = \"float32\"\r\n\r\nwith tf.Session() as sess:\r\n  var0 = variables.Variable([1.0], dtype=dtype)\r\n  grads0 = constant_op.constant([0.1], dtype=dtype)\r\n  opt = ftrl.FtrlOptimizer(\r\n      3.0,\r\n      initial_accumulator_value=0.0,\r\n      l1_regularization_strength=0.0,\r\n      l2_regularization_strength=0.0,\r\n      l2_shrinkage_regularization_strength=0.5)\r\n  update = opt.apply_gradients(zip([grads0], [var0]))\r\n  variables.global_variables_initializer().run()\r\n\r\n  v0_val = sess.run(var0)\r\n\r\n  update.run()\r\n\r\n  v0_val = sess.run(var0)\r\n  print (sess.run(opt._slots))\r\n  print (v0_val)\r\n```\r\n\r\nMy result is \r\n```\r\n{'accum': {(<tensorflow.python.framework.ops.Graph object at 0x7f1d1221a990>, u'Variable'): array([3.61], dtype=float32)}, 'linear': {(<tensorflow.python.framework.ops.Graph object at 0x7f1d1221a990>, u'Variable'): array([0.73333335], dtype=float32)}}\r\n[-2.]\r\n```\r\nOS Platform and Distribution\r\nOS: Ubuntu 16.04\r\nTensorflow version: 1.7.0\r\nCPU: i7 4790\r\n\r\nTensorFlow installed from\r\npypi\r\n\r\nAccording to comments of apply_ftrl_v2 in gen_training_ops.py\r\n```\r\ngrad_with_shrinkage = grad + 2 * l2_shrinkage * var\r\naccum_new = accum + grad_with_shrinkage * grad_with_shrinkage\r\nlinear += grad_with_shrinkage +\r\n      (accum_new^(-lr_power) - accum^(-lr_power)) / lr * var\r\nquadratic = 1.0 / (accum_new^(lr_power) * lr) + 2 * l2\r\nvar = (sign(linear) * l1 - linear) / quadratic if |linear| > l1 else 0.0\r\naccum = accum_new\r\n```\r\ngrad_with_shrinkage should be [0.1] + 2 * 0.5 * [1.0] = 1.1\r\naccum_new should be [0.0] + [1.1] * [1.1] = [1.21]\r\nso accum should be [1.21], but the result of accum from the test code is [3.61] ???\r\n\r\n", "comments": ["Thank you for your post. We noticed you have not filled out the following field in the issue template. Could you update them if they are relevant in your case, or leave them as N/A? Thanks.\nHave I written custom code\nOS Platform and Distribution\nTensorFlow installed from\nBazel version\nCUDA/cuDNN version\nGPU model and memory\nExact command to reproduce", "@rohan100jain Any update\uff1f", "* Have I written custom code\r\nNo.\r\n* OS Platform and Distribution\r\nOS: Ubuntu 16.04\r\nCPU: i7 4790\r\n* TensorFlow installed from\r\npypi\r\n* TensorFlow version\r\n1.7.0\r\n* Bazel version\r\nN/A\r\n* CUDA/cuDNN version\r\nN/A\r\n* GPU model and memory\r\nN/A\r\n* Exact command to reproduce\r\n\r\n```\r\nimport tensorflow as tf\r\n\r\nfrom tensorflow.python.framework import constant_op\r\nfrom tensorflow.python.ops import variables\r\nfrom tensorflow.python.training import ftrl\r\n\r\ndtype = \"float32\"\r\n\r\nwith tf.Session() as sess:\r\n  var0 = variables.Variable([1.0], dtype=dtype)\r\n  grads0 = constant_op.constant([0.1], dtype=dtype)\r\n  opt = ftrl.FtrlOptimizer(\r\n      3.0,\r\n      initial_accumulator_value=0.0,\r\n      l1_regularization_strength=0.0,\r\n      l2_regularization_strength=0.0,\r\n      l2_shrinkage_regularization_strength=0.5)\r\n  update = opt.apply_gradients(zip([grads0], [var0]))\r\n  variables.global_variables_initializer().run()\r\n\r\n  v0_val = sess.run(var0)\r\n\r\n  update.run()\r\n\r\n  v0_val = sess.run(var0)\r\n  print (sess.run(opt._slots))\r\n  print (v0_val)\r\n```\r\n\r\nAccording to comments of apply_ftrl_v2 in gen_training_ops.py\r\n```\r\ngrad_with_shrinkage = grad + 2 * l2_shrinkage * var\r\naccum_new = accum + grad_with_shrinkage * grad_with_shrinkage\r\nlinear += grad_with_shrinkage +\r\n      (accum_new^(-lr_power) - accum^(-lr_power)) / lr * var\r\nquadratic = 1.0 / (accum_new^(lr_power) * lr) + 2 * l2\r\nvar = (sign(linear) * l1 - linear) / quadratic if |linear| > l1 else 0.0\r\naccum = accum_new\r\n```\r\n\r\ngrad_with_shrinkage should be [0.1] + 2 * 0.5 * [1.0] = 1.1\r\naccum_new should be [0.0] + [1.1] * [1.1] = [1.21]\r\nso accum should be [1.21], but the result of accum from the test code is [3.61] ???\r\n", "The root cause is when [this line](https://github.com/tensorflow/tensorflow/blob/15a9de7763aa736e97d7e636d9487c0dde372d4b/tensorflow/core/kernels/training_ops.cc#L217) or [this line](https://github.com/tensorflow/tensorflow/blob/15a9de7763aa736e97d7e636d9487c0dde372d4b/tensorflow/core/kernels/training_ops.cc#L224) update```var``` value, the ```grad_with_shrinkage``` is also changed, although it is defined before those lines. So when update accum, the accum_new is not the expected one.\r\n\r\nFrom [this paper](https://www.eecs.tufts.edu/~dsculley/papers/ad-click-prediction.pdf), the ```accum``` should be the sum of gradient square in equation (2). So looks like the update of the ```accum_new``` is not correct.\r\n", "@yangli2 to take a look", "Nagging Assignee @rohan100jain: It has been 80 days with no activity and this issue has an assignee. Please update the label and/or status accordingly.", "https://github.com/tensorflow/tensorflow/commit/20d5683b826be03776978af3b8108fc3b5dc9cb8#diff-fee33779233fb6ff133bbb93c7830880 should have fixed the bug"]}, {"number": 18316, "title": "TensorFlow-GPU random GPU crashes while training", "body": "### System information\r\n- Custom code - Simple q learning model using Keras with TF and Open AI Gym\r\n- Windows 10\r\n- Tensorflow installed with pip\r\n- TensorFlow-gpu 1.7.0\r\n- Python 3.6.4\r\n- CUDA 9.0, cuDNN 7\r\n- Nvidia GeForce GTX 1050 Ti GDDR5 4GB\r\n\r\n### Describtion\r\nWhen I'm running a script randomly two types of errors happen:\r\n\r\n-  Blue Screen with Driver Power State Failure\r\n- TensorFlow cannot locate gpu \" failed call to cuInit: CUDA_ERROR_NO_DEVICE\"\r\n\r\nThis happens approximately once per 10 runs. GeForce is my secondary gpu card, so I assume, that it is not related to watchdog timer.\r\n\r\nResult od deviceQuery:\r\n> Device 0: \"GeForce GTX 1050 Ti\"\r\n>   CUDA Driver Version / Runtime Version          9.0 / 9.0\r\n>   CUDA Capability Major/Minor version number:    6.1\r\n>   Total amount of global memory:                 4096 MBytes (4294967296 bytes)\r\n>   ( 6) Multiprocessors, (128) CUDA Cores/MP:     768 CUDA Cores\r\n>   GPU Max Clock rate:                            1620 MHz (1.62 GHz)\r\n>   Memory Clock rate:                             3504 Mhz\r\n>   Memory Bus Width:                              128-bit\r\n>   L2 Cache Size:                                 1048576 bytes\r\n>   Maximum Texture Dimension Size (x,y,z)         1D=(131072), 2D=(131072, 65536), 3D=(16384, 16384, 16384)\r\n>   Maximum Layered 1D Texture Size, (num) layers  1D=(32768), 2048 layers\r\n>   Maximum Layered 2D Texture Size, (num) layers  2D=(32768, 32768), 2048 layers\r\n>   Total amount of constant memory:               65536 bytes\r\n>   Total amount of shared memory per block:       49152 bytes\r\n>   Total number of registers available per block: 65536\r\n>   Warp size:                                     32\r\n>   Maximum number of threads per multiprocessor:  2048\r\n>   Maximum number of threads per block:           1024\r\n>   Max dimension size of a thread block (x,y,z): (1024, 1024, 64)\r\n>   Max dimension size of a grid size    (x,y,z): (2147483647, 65535, 65535)\r\n>   Maximum memory pitch:                          2147483647 bytes\r\n>   Texture alignment:                             512 bytes\r\n>   Concurrent copy and kernel execution:          Yes with 2 copy engine(s)\r\n>   Run time limit on kernels:                     Yes\r\n>   Integrated GPU sharing Host Memory:            No\r\n>   Support host page-locked memory mapping:       Yes\r\n>   Alignment requirement for Surfaces:            Yes\r\n>   Device has ECC support:                        Disabled\r\n>   CUDA Device Driver Mode (TCC or WDDM):         WDDM (Windows Display Driver Model)\r\n>   Device supports Unified Addressing (UVA):      Yes\r\n>   Supports Cooperative Kernel Launch:            No\r\n>   Supports MultiDevice Co-op Kernel Launch:      No\r\n>   Device PCI Domain ID / Bus ID / location ID:   0 / 1 / 0\r\n>   Compute Mode:\r\n>      < Default (multiple host threads can use ::cudaSetDevice() with device simultaneously) >\r\n> \r\n> deviceQuery, CUDA Driver = CUDART, CUDA Driver Version = 9.0, CUDA Runtime Version = 9.0, NumDevs = 1\r\n> Result = PASS\r\n", "comments": ["Thank you for your post. We noticed you have not filled out the following field in the issue template. Could you update them if they are relevant in your case, or leave them as N/A? Thanks.\nHave I written custom code\nOS Platform and Distribution\nTensorFlow installed from\nTensorFlow version\nBazel version\nCUDA/cuDNN version\nGPU model and memory\nExact command to reproduce", "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:  Windows 10\r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version (use command below)**: 1.7.0\r\n- **Python version**: 3.6.5\r\n- **Bazel version (if compiling from source)**: N/A\r\n- **GCC/Compiler version (if compiling from source)**: N/A\r\n- **CUDA/cuDNN version**: 9.0/7.0.3.11\r\n- **GPU model and memory**: GeForce GTX 1050 Ti GDDR5 4GB\r\n- **Exact command to reproduce**: N/A\r\n\r\nI can add, that that BSOD happens at the end of the script, so it might be an issue with delating objects or freeing GPU memory.", "Do you have a reproducible code that contains tensorflow script only? It might be a Open AI Gym issue ", "This happened previously without Open AI Gym when I was using Jupyter notebook from Intel's course on tensorflow. \r\nI tried to reproduce this bug using both example code and my script but since I've updated tf-gpu to 1.8.0 issue seems to go away. I'll update if problem returns.", "20 mins after posting previous comment error returned. When I was training my DDPG agent error occured after ~600 episodes:\r\n\r\n> 2018-05-03 15:24:23.086336: E T:\\src\\github\\tensorflow\\tensorflow\\stream_executor\\cuda\\cuda_event.cc:49] Error polling for event status: failed to query event: CUDA_ERROR_UNKNOWN\r\n2018-05-03 15:24:23.091324: F T:\\src\\github\\tensorflow\\tensorflow\\core\\common_runtime\\gpu\\gpu_event_mgr.cc:208] Unexpected Event status: 1\r\n\r\nMaybe it is related to GPU running at full speed for a long time?\r\n\r\nI will try to reproduce this using code without open ai gym, but I have to find an example that uses gpu for extended time first.", "Hi @NightCrawler96!\r\nI'm facing the same issue as you described. \r\nHere is my setup: \r\n- Custom code - Keras with TF on\r\n- Windows 10\r\n- Tensorflow installed with pip\r\n- TensorFlow-gpu 1.8.0\r\n- Python 3.6.2\r\n- CUDA 9.0, cuDNN 7\r\n- Nvidia GeForce GTX 1070 GDDR5 8GB\r\n\r\nBy the way, did you find any solution for it?", "It has been 30 days with no activity and the `awaiting response` label was assigned. Is this still an issue?", "Automatically closing due to lack of recent activity. Please update the issue when new information becomes available, and we will reopen the issue. Thanks!\r\n", "Sorry for long time without an activity. I had some health issues and had to focus on that first.\r\n***\r\nI think this issue has been **solved**.\r\nMy laptop finally broke and I had to reinstall everything. With my current setup everything runned for about 9 hours using GPU, so I think it is unlikely to return again.\r\nWhen I was writing this comment I figured out, that I had forgotten to install cuDNN. It was running smoothly without it.\r\n\r\nCurrent setup:\r\n\r\n- OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Windows 10\r\n- TensorFlow installed from (source or binary): binary\r\n- TensorFlow version (use command below): 1.9.0\r\n- Python version: 3.6.6\r\n- CUDA/cuDNN version: 9.2.148/None\r\n- GPU model and memory: GeForce GTX 1050 Ti GDDR5 4GB"]}, {"number": 18315, "title": "Fix WARNING in BatchNormalization", "body": "The keep_dims for reduce_mean has been deprecated and replaced\r\nwith keepdims. This casues the following WARNING in BatchNormalization:\r\n```\r\nnormalization.py:584: calling reduce_mean (from tensorflow.python.ops.math_ops) with keep_dims is deprecated and will be removed in a future version.\r\nInstructions for updating:\r\nkeep_dims is deprecated, use keepdims instead\r\n```\r\n\r\nThis fix fixes the warning in BatchNormalization.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>", "comments": ["Looks like there are conflicts. Mind taking a look?", "Thanks @jhseu. The PR has been rebased."]}, {"number": 18314, "title": "Feature Request: Allow extending Estimator", "body": "Our model is time based and we are doing continuous training and eval on the same machine. The model is very large and takes 1+ minutes to load, so we don't want the overhead of reloading the graph and weights every time we switch from training to eval https://github.com/tensorflow/tensorflow/issues/13895#issuecomment-375990484.\r\n\r\nI tried to subclass Estimator to override the `_train_model fn` but it is not allowed due to this [white-list](https://github.com/tensorflow/tensorflow/blob/e7f158858479400f17a1b6351e9827e3aa83e7ff/tensorflow/python/estimator/estimator.py#L524-L528). Can you remove this restriction and let people override methods at their own peril?\r\n\r\n`Subclasses of Estimator cannot override members of Estimator. <class ... does override ['_train_model']` (relates to https://github.com/tensorflow/tensorflow/issues/12908).", "comments": ["Hacked around this with a noop `Estimator._assert_members_are_not_overridden = lambda _: None`", "Hey @jperl , im trying to skip creating the model_fn ( creating the graph) each time, can you please advice me how can i skip that using above snippet where i need to modify my model ?\r\n\r\nThanks", "@djovanoski I decided to not use or subclass Estimator and instead built my own \"Estimator\" like class that wraps `MonitoredSession`."]}]