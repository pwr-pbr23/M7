[{"number": 7356, "title": "Potential UnboundLocalError in error-handling context manager", "body": "I'm working on unrelated things while this came up, and it's possibly unlikely to happen in real development, but just to track it in case someone cares,\r\n\r\nhttps://github.com/tensorflow/tensorflow/blob/5e5dc97dd3523509ce5f536d7be5122d016fc6b5/tensorflow/python/framework/errors_impl.py#L471\r\n\r\nthat is an `UnboundLocalError` if it was line 463 that raised there (i.e. if TF_NewStatus failed entirely).\r\n\r\nWithout any insider knowledge, possibly that line belongs outside the try block.", "comments": ["Nice catch, thank you!  I'll fix, unless you feel like submitting a PR.", "how to make tensorflow pull request https://gist.github.com/yaroslavvb/bdb0a92f2a516ebbe2d386c48f5e2c45"]}, {"number": 7355, "title": "Add QueueBase.is_closed()", "body": "Can we add `bool QueueBase.is_closed()` or `bool QueueBase.is_opened()`?\r\nIt will be mainly for debugging purposes.\r\n", "comments": ["@josh11b Seems reasonable to me.  Objections?  It looks like it requires another C++ op."]}, {"number": 7354, "title": "dynamic_rnn_decoder doesn't have an initial_state argument", "body": "The `rnn_decoder` function used to have a `initial_state` argument earlier, which was useful for custom cell state initializations.\r\n\r\nHowever, in the new API, the `dynamic_rnn_decoder` method doesn't have this argument. Is there any other to initialize cell state in this case?", "comments": ["@ebrevdo Where did the initial state go?  It's not obvious to me either from the code.", "Apologies for the confusing API.\n\nI hope to **remove the dynamic_rnn_decoder function next week**; it's\nlimited and bug-prone.  We have a new object oriented API which should be\nmuch easier to use (examples of use here\n<https://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/seq2seq/python/kernel_tests/decoder_test.py#L132>).\nWhat remains is adding a Decoder that supports attention; it should go in\nin the next week or two.  Then we will remove the old function-based\napproach from the repo.\n\nOn Wed, Feb 8, 2017 at 7:48 AM, Geoffrey Irving <notifications@github.com>\nwrote:\n\n> @ebrevdo <https://github.com/ebrevdo> Where did the initial state go?\n> It's not obvious to me either from the code.\n>\n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/tensorflow/tensorflow/issues/7354#issuecomment-278366147>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/ABtim7Cf4WtPuFIpOPQ5fksEdHc_eQ3Iks5raePggaJpZM4L6eSm>\n> .\n>\n", "@ebrevdo, +1 for the new attention decoder to also support beams.\r\n\r\nLooking forward to the new attention decoder!  We tried the original dynamic_rnn_decoder approach but got better results with fixed length padded buckets (with dynamic, attention never converged \"on the diagonal\").\r\n\r\nFor attention we used an approach recommended by @pbhatia243 in issue #654 - results are much better than naive argmax, but the implementation is limited to batch=1.", "@ebrevdo thanks for the easier API! It seems like the current implementation in master doesn't contain attention yet, is that right? Will this be added by the next TF release (and is there an estimate of when that'll be)?\r\n\r\n", "@ebrevdo any updates? Is this resolved?", "Yes, we got rid of this function.\n\nOn Jun 16, 2017 11:58 AM, \"Skye Wanderman-Milne\" <notifications@github.com>\nwrote:\n\n> @ebrevdo <https://github.com/ebrevdo> any updates? Is this resolved?\n>\n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/tensorflow/tensorflow/issues/7354#issuecomment-309107712>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/ABtim9VGBFtRwrbm9QkLAXaaIethaVhzks5sEtBHgaJpZM4L6eSm>\n> .\n>\n"]}, {"number": 7353, "title": "Session run timeout causes memory leak and saving stuck", "body": "I am using distributed tensorflow, one of my machines was something wrong and caused almost all session run timeout, eventually memory reached 80G and been killed. This also caused worker0 process failed to save model, saver.save() stuck forever.\r\n\r\nI am using 0.12.1 windows build. I searched and nobody ever reported issues like this. Any idea and advice to confirm and fix it?", "comments": ["I don't think we'll be able to debug this with the information provided.  Can you reproduce the problem?  It may be worth checking if TensorFlow 1.0 solves it for you.", "I ran into this issue two times, however I will try 1.0 version. But calling saving.save without shard=True stuck forever each time when I have lots of workers, for example 40 ps machines and 80 worker machines, each worker machine starts 10 worker processes.\r\n\r\nhere is the stack of master worker that calls saving, maybe you guys could get some idea:\r\n\r\n```\r\n # Child-SP          RetAddr           Call Site\r\n00 0000000f`df7ec918 00007ffb`befff58f ntdll!ZwRemoveIoCompletion+0x14 [d:\\rs1.obj.amd64fre\\minkernel\\ntdll\\daytona\\objfre\\amd64\\usrstubs.asm @ 251]\r\n01 0000000f`df7ec920 00007ffb`9957fdd9 KERNELBASE!GetQueuedCompletionStatus+0x3f [d:\\rs1\\minkernel\\kernelbase\\error.c @ 844]\r\n02 0000000f`df7ec980 00007ffb`995693e6 _pywrap_tensorflow!grpc_iocp_work+0x69 [d:\\tensorflow\\tensorscripts\\src\\tensorflow\\tensorflow\\contrib\\cmake\\build\\grpc\\src\\grpc\\src\\core\\lib\\iomgr\\iocp_windows.c @ 87]\r\n03 0000000f`df7eca10 00007ffb`99549466 _pywrap_tensorflow!grpc_pollset_work+0xb6 [d:\\tensorflow\\tensorscripts\\src\\tensorflow\\tensorflow\\contrib\\cmake\\build\\grpc\\src\\grpc\\src\\core\\lib\\iomgr\\pollset_windows.c @ 152]\r\n04 0000000f`df7ecac0 00007ffb`99537fa1 _pywrap_tensorflow!grpc_completion_queue_pluck+0x256 [d:\\tensorflow\\tensorscripts\\src\\tensorflow\\tensorflow\\contrib\\cmake\\build\\grpc\\src\\grpc\\src\\core\\lib\\surface\\completion_queue.c @ 510]\r\n05 0000000f`df7ecc00 00007ffb`9751127b _pywrap_tensorflow!grpc::CoreCodegen::grpc_completion_queue_pluck+0x41 [d:\\tensorflow\\tensorscripts\\src\\tensorflow\\tensorflow\\contrib\\cmake\\build\\grpc\\src\\grpc\\src\\cpp\\common\\core_codegen.cc @ 66]\r\n06 (Inline Function) --------`-------- _pywrap_tensorflow!grpc::CompletionQueue::Pluck+0x53 [d:\\tensorflow\\tensorscripts\\src\\tensorflow\\tensorflow\\contrib\\cmake\\build\\grpc\\src\\grpc\\include\\grpc++\\impl\\codegen\\completion_queue.h @ 207]\r\n07 0000000f`df7ecc60 00007ffb`97515f96 _pywrap_tensorflow!grpc::BlockingUnaryCall<tensorflow::RunStepRequest,tensorflow::RunStepResponse>+0x32b [d:\\tensorflow\\tensorscripts\\src\\tensorflow\\tensorflow\\contrib\\cmake\\build\\grpc\\src\\grpc\\include\\grpc++\\impl\\codegen\\client_unary_call.h @ 72]\r\n08 0000000f`df7ece80 00007ffb`97518af4 _pywrap_tensorflow!tensorflow::grpc::MasterService::Stub::RunStep+0x36 [d:\\tensorflow\\tensorscripts\\src\\tensorflow\\tensorflow\\core\\distributed_runtime\\rpc\\grpc_master_service_impl.cc @ 80]\r\n09 0000000f`df7eced0 00007ffb`97533fa4 _pywrap_tensorflow!tensorflow::GrpcRemoteMaster::RunStep+0xa4 [d:\\tensorflow\\tensorscripts\\src\\tensorflow\\tensorflow\\core\\distributed_runtime\\rpc\\grpc_remote_master.cc @ 60]\r\n0a 0000000f`df7ed0a0 00007ffb`9753387b _pywrap_tensorflow!tensorflow::GrpcSession::RunProto+0x124 [d:\\tensorflow\\tensorscripts\\src\\tensorflow\\tensorflow\\core\\distributed_runtime\\rpc\\grpc_session.cc @ 238]\r\n0b 0000000f`df7ed100 00007ffb`971bc0a0 _pywrap_tensorflow!tensorflow::GrpcSession::Run+0x4cb [d:\\tensorflow\\tensorscripts\\src\\tensorflow\\tensorflow\\core\\distributed_runtime\\rpc\\grpc_session.cc @ 188]\r\n0c 0000000f`df7ed430 00007ffb`971c8a7a _pywrap_tensorflow!TF_Run_Helper+0x1c0 [d:\\tensorflow\\tensorscripts\\src\\tensorflow\\tensorflow\\c\\c_api.cc @ 543]\r\n0d 0000000f`df7ed5d0 00007ffb`9719a509 _pywrap_tensorflow!TF_Run+0x1ba [d:\\tensorflow\\tensorscripts\\src\\tensorflow\\tensorflow\\c\\c_api.cc @ 606]\r\n0e 0000000f`df7ed6a0 00007ffb`97199e1a _pywrap_tensorflow!tensorflow::TF_Run_wrapper_helper+0x6c9 [d:\\tensorflow\\tensorscripts\\src\\tensorflow\\tensorflow\\python\\client\\tf_session_helper.cc @ 500]\r\n0f 0000000f`df7ed970 00007ffb`971d07ac _pywrap_tensorflow!tensorflow::TF_Run_wrapper+0x4a [d:\\tensorflow\\tensorscripts\\src\\tensorflow\\tensorflow\\python\\client\\tf_session_helper.cc @ 550]\r\n10 0000000f`df7ed9d0 00000000`6eb0e512 _pywrap_tensorflow!_wrap_TF_Run+0x40c [d:\\tensorflow\\tensorscripts\\src\\tensorflow\\tensorflow\\contrib\\cmake\\build\\pywrap_tensorflow.cc @ 5862]\r\n11 0000000f`df7edc00 00000000`6eb89e20 python35!PyCFunction_Call+0x122\r\n12 0000000f`df7edc30 00000000`6eb86bc1 python35!PyEval_GetFuncDesc+0x3b0\r\n13 0000000f`df7edc90 00000000`6eb88a9e python35!PyEval_EvalFrameEx+0x3241\r\n14 0000000f`df7edd90 00000000`6eaf8751 python35!PyEval_EvalFrameEx+0x511e\r\n15 0000000f`df7ede30 00000000`6eac6058 python35!PyFunction_SetAnnotations+0xb71\r\n16 0000000f`df7edee0 00000000`6eb8a7cd python35!PyObject_Call+0x78\r\n17 0000000f`df7edf10 00000000`6eb86c66 python35!PyEval_GetFuncDesc+0xd5d\r\n18 0000000f`df7edf80 00000000`6eb88a9e python35!PyEval_EvalFrameEx+0x32e6\r\n19 0000000f`df7ee080 00000000`6eb8a070 python35!PyEval_EvalFrameEx+0x511e\r\n1a 0000000f`df7ee120 00000000`6eb89ea1 python35!PyEval_GetFuncDesc+0x600\r\n1b 0000000f`df7ee1c0 00000000`6eb86bc1 python35!PyEval_GetFuncDesc+0x431\r\n1c 0000000f`df7ee220 00000000`6eb88a9e python35!PyEval_EvalFrameEx+0x3241\r\n1d 0000000f`df7ee320 00000000`6eb8a070 python35!PyEval_EvalFrameEx+0x511e\r\n1e 0000000f`df7ee3c0 00000000`6eb89ea1 python35!PyEval_GetFuncDesc+0x600\r\n1f 0000000f`df7ee460 00000000`6eb86bc1 python35!PyEval_GetFuncDesc+0x431\r\n20 0000000f`df7ee4c0 00000000`6eb89fe8 python35!PyEval_EvalFrameEx+0x3241\r\n21 0000000f`df7ee5c0 00000000`6eb89ea1 python35!PyEval_GetFuncDesc+0x578\r\n22 0000000f`df7ee660 00000000`6eb86bc1 python35!PyEval_GetFuncDesc+0x431\r\n23 0000000f`df7ee6c0 00000000`6eb88a9e python35!PyEval_EvalFrameEx+0x3241\r\n24 0000000f`df7ee7c0 00000000`6eb8a070 python35!PyEval_EvalFrameEx+0x511e\r\n25 0000000f`df7ee860 00000000`6eb89ea1 python35!PyEval_GetFuncDesc+0x600\r\n26 0000000f`df7ee900 00000000`6eb86bc1 python35!PyEval_GetFuncDesc+0x431\r\n27 0000000f`df7ee960 00000000`6eb88a9e python35!PyEval_EvalFrameEx+0x3241\r\n28 0000000f`df7eea60 00000000`6eb8a070 python35!PyEval_EvalFrameEx+0x511e\r\n29 0000000f`df7eeb00 00000000`6eb89ea1 python35!PyEval_GetFuncDesc+0x600\r\n2a 0000000f`df7eeba0 00000000`6eb86bc1 python35!PyEval_GetFuncDesc+0x431\r\n2b 0000000f`df7eec00 00000000`6eb89fe8 python35!PyEval_EvalFrameEx+0x3241\r\n2c 0000000f`df7eed00 00000000`6eb89ea1 python35!PyEval_GetFuncDesc+0x578\r\n2d 0000000f`df7eeda0 00000000`6eb86bc1 python35!PyEval_GetFuncDesc+0x431\r\n2e 0000000f`df7eee00 00000000`6eb88a9e python35!PyEval_EvalFrameEx+0x3241\r\n2f 0000000f`df7eef00 00000000`6eb8a070 python35!PyEval_EvalFrameEx+0x511e\r\n30 0000000f`df7eefa0 00000000`6eb89ea1 python35!PyEval_GetFuncDesc+0x600\r\n31 0000000f`df7ef040 00000000`6eb86bc1 python35!PyEval_GetFuncDesc+0x431\r\n32 0000000f`df7ef0a0 00000000`6eb88a9e python35!PyEval_EvalFrameEx+0x3241\r\n33 0000000f`df7ef1a0 00000000`6eb8a070 python35!PyEval_EvalFrameEx+0x511e\r\n34 0000000f`df7ef240 00000000`6eb89ea1 python35!PyEval_GetFuncDesc+0x600\r\n35 0000000f`df7ef2e0 00000000`6eb86bc1 python35!PyEval_GetFuncDesc+0x431\r\n36 0000000f`df7ef340 00000000`6eb88a9e python35!PyEval_EvalFrameEx+0x3241\r\n37 0000000f`df7ef440 00000000`6ebd423a python35!PyEval_EvalFrameEx+0x511e\r\n38 0000000f`df7ef4e0 00000000`6ebd3f78 python35!PyRun_FileExFlags+0x38a\r\n39 0000000f`df7ef560 00000000`6ebd273e python35!PyRun_FileExFlags+0xc8\r\n3a 0000000f`df7ef5d0 00000000`6ebd19b3 python35!PyRun_SimpleFileExFlags+0x2be\r\n3b 0000000f`df7ef660 00000000`6ea5f215 python35!PyRun_AnyFileExFlags+0x63\r\n3c 0000000f`df7ef690 00000000`6ea5fc5d python35!Py_hashtable_copy+0x71f5\r\n3d 0000000f`df7ef6d0 00000000`1cb01264 python35!Py_Main+0xa0d\r\n3e 0000000f`df7ef7c0 00007ffb`c1488364 python+0x1264\r\n3f 0000000f`df7ef800 00007ffb`c2b270d1 kernel32!BaseThreadInitThunk+0x14\r\n40 0000000f`df7ef830 00000000`00000000 ntdll!RtlUserThreadStart+0x21 [d:\\rs1\\minkernel\\ntdll\\rtlstrt.c @ 997]\r\n # Child-SP          RetAddr           Call Site\r\n00 0000000f`dffaed28 00007ffb`beffc4a7 ntdll!ZwDelayExecution+0x14 [d:\\rs1.obj.amd64fre\\minkernel\\ntdll\\daytona\\objfre\\amd64\\usrstubs.asm @ 595]\r\n01 0000000f`dffaed30 00000000`6ea8de6e KERNELBASE!SleepEx+0xa7 [d:\\rs1\\minkernel\\kernelbase\\thread.c @ 2247]\r\n02 0000000f`dffaedd0 00000000`6ea8c437 python35!PyOS_SigintEvent+0x698e\r\n03 0000000f`dffaee20 00000000`6eb89d00 python35!PyOS_SigintEvent+0x4f57\r\n04 0000000f`dffaee50 00000000`6eb86bc1 python35!PyEval_GetFuncDesc+0x290\r\n05 0000000f`dffaeeb0 00000000`6eb88a9e python35!PyEval_EvalFrameEx+0x3241\r\n06 0000000f`dffaefb0 00000000`6eaf8751 python35!PyEval_EvalFrameEx+0x511e\r\n07 0000000f`dffaf050 00000000`6eac6058 python35!PyFunction_SetAnnotations+0xb71\r\n08 0000000f`dffaf100 00000000`6eb8a7cd python35!PyObject_Call+0x78\r\n09 0000000f`dffaf130 00000000`6eb86c66 python35!PyEval_GetFuncDesc+0xd5d\r\n0a 0000000f`dffaf1a0 00000000`6eb89fe8 python35!PyEval_EvalFrameEx+0x32e6\r\n0b 0000000f`dffaf2a0 00000000`6eb89ea1 python35!PyEval_GetFuncDesc+0x578\r\n0c 0000000f`dffaf340 00000000`6eb86bc1 python35!PyEval_GetFuncDesc+0x431\r\n0d 0000000f`dffaf3a0 00000000`6eb89fe8 python35!PyEval_EvalFrameEx+0x3241\r\n0e 0000000f`dffaf4a0 00000000`6eb89ea1 python35!PyEval_GetFuncDesc+0x578\r\n0f 0000000f`dffaf540 00000000`6eb86bc1 python35!PyEval_GetFuncDesc+0x431\r\n10 0000000f`dffaf5a0 00000000`6eb88a9e python35!PyEval_EvalFrameEx+0x3241\r\n11 0000000f`dffaf6a0 00000000`6eaf8751 python35!PyEval_EvalFrameEx+0x511e\r\n12 0000000f`dffaf740 00000000`6eac6058 python35!PyFunction_SetAnnotations+0xb71\r\n13 0000000f`dffaf7f0 00000000`6eadd82d python35!PyObject_Call+0x78\r\n14 0000000f`dffaf820 00000000`6eac6058 python35!PyMethod_New+0xa9d\r\n15 0000000f`dffaf860 00000000`6eb899ec python35!PyObject_Call+0x78\r\n16 0000000f`dffaf890 00000000`6ea89193 python35!PyEval_CallObjectWithKeywords+0xcc\r\n17 0000000f`dffaf8c0 00000000`6ebde352 python35!PyOS_SigintEvent+0x1cb3\r\n*** ERROR: Symbol file could not be found.  Defaulted to export symbols for ucrtbase.dll - \r\n18 0000000f`dffaf900 00007ffb`bf3bcab0 python35!PyThread_init_thread+0x4b2\r\n19 0000000f`dffaf930 00007ffb`c1488364 ucrtbase!o__realloc_base+0x60\r\n1a 0000000f`dffaf960 00007ffb`c2b270d1 kernel32!BaseThreadInitThunk+0x14\r\n1b 0000000f`dffaf990 00000000`00000000 ntdll!RtlUserThreadStart+0x21 [d:\\rs1\\minkernel\\ntdll\\rtlstrt.c @ 997]\r\n # Child-SP          RetAddr           Call Site\r\n00 0000000f`e019f668 00007ffb`c2b2cfb5 ntdll!ZwWaitForAlertByThreadId+0x14 [d:\\rs1.obj.amd64fre\\minkernel\\ntdll\\daytona\\objfre\\amd64\\usrstubs.asm @ 3731]\r\n01 0000000f`e019f670 00007ffb`bf018d28 ntdll!RtlSleepConditionVariableSRW+0xf5 [d:\\rs1\\minkernel\\ntos\\rtl\\condition.c @ 1109]\r\n*** ERROR: Symbol file could not be found.  Defaulted to export symbols for msvcp140.dll - \r\n02 0000000f`e019f6f0 00007ffb`b6978368 KERNELBASE!SleepConditionVariableSRW+0x28 [d:\\rs1\\minkernel\\kernelbase\\synch.c @ 2020]\r\n03 0000000f`e019f730 00007ffb`b6978530 msvcp140!std::_Syserror_map+0x198\r\n04 0000000f`e019f760 00007ffb`971e89e7 msvcp140!Cnd_destroy+0x70\r\n05 (Inline Function) --------`-------- _pywrap_tensorflow!std::_Cnd_waitX+0xd [c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\thr\\xthread @ 95]\r\n06 (Inline Function) --------`-------- _pywrap_tensorflow!std::condition_variable::wait+0xd [c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\mutex @ 565]\r\n07 0000000f`e019f7e0 00007ffb`971e80f9 _pywrap_tensorflow!Eigen::EventCount::Park+0x67 [d:\\tensorflow\\tensorscripts\\src\\tensorflow\\tensorflow\\contrib\\cmake\\build\\external\\eigen_archive\\unsupported\\eigen\\cxx11\\src\\threadpool\\eventcount.h @ 208]\r\n08 0000000f`e019f830 00007ffb`971e98a0 _pywrap_tensorflow!Eigen::EventCount::CommitWait+0xc9 [d:\\tensorflow\\tensorscripts\\src\\tensorflow\\tensorflow\\contrib\\cmake\\build\\external\\eigen_archive\\unsupported\\eigen\\cxx11\\src\\threadpool\\eventcount.h @ 103]\r\n09 0000000f`e019f870 00007ffb`971e9bc3 _pywrap_tensorflow!Eigen::NonBlockingThreadPoolTempl<tensorflow::thread::EigenEnvironment>::WaitForWork+0x180 [d:\\tensorflow\\tensorscripts\\src\\tensorflow\\tensorflow\\contrib\\cmake\\build\\external\\eigen_archive\\unsupported\\eigen\\cxx11\\src\\threadpool\\nonblockingthreadpool.h @ 233]\r\n0a 0000000f`e019f8b0 00007ffb`971e9f6e _pywrap_tensorflow!Eigen::NonBlockingThreadPoolTempl<tensorflow::thread::EigenEnvironment>::WorkerLoop+0x293 [d:\\tensorflow\\tensorscripts\\src\\tensorflow\\tensorflow\\contrib\\cmake\\build\\external\\eigen_archive\\unsupported\\eigen\\cxx11\\src\\threadpool\\nonblockingthreadpool.h @ 160]\r\n0b (Inline Function) --------`-------- _pywrap_tensorflow!std::_Func_class<void>::operator()+0x16 [c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\functional @ 279]\r\n0c (Inline Function) --------`-------- _pywrap_tensorflow!tensorflow::thread::EigenEnvironment::CreateThread::__l2::<lambda_3e5df898eaffef9b52307b4af9ee50ab>::operator()+0x2c [d:\\tensorflow\\tensorscripts\\src\\tensorflow\\tensorflow\\core\\lib\\core\\threadpool.cc @ 57]\r\n0d (Inline Function) --------`-------- _pywrap_tensorflow!std::_Invoker_functor::_Call+0x2c [c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\type_traits @ 1398]\r\n0e (Inline Function) --------`-------- _pywrap_tensorflow!std::invoke+0x2c [c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\type_traits @ 1466]\r\n0f (Inline Function) --------`-------- _pywrap_tensorflow!std::_Invoke_ret+0x2c [c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\type_traits @ 1484]\r\n10 0000000f`e019f920 00007ffb`9721ce25 _pywrap_tensorflow!std::_Func_impl<<lambda_3e5df898eaffef9b52307b4af9ee50ab>,std::allocator<int>,void>::_Do_call+0x3e [c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\functional @ 212]\r\n11 (Inline Function) --------`-------- _pywrap_tensorflow!std::_Func_class<void>::operator()+0x16 [c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\functional @ 279]\r\n12 (Inline Function) --------`-------- _pywrap_tensorflow!std::_Invoker_functor::_Call+0x16 [c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\type_traits @ 1398]\r\n13 (Inline Function) --------`-------- _pywrap_tensorflow!std::invoke+0x16 [c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\type_traits @ 1466]\r\n14 (Inline Function) --------`-------- _pywrap_tensorflow!std::_LaunchPad<std::unique_ptr<std::tuple<std::function<void __cdecl(void)> >,std::default_delete<std::tuple<std::function<void __cdecl(void)> > > > >::_Execute+0x16 [c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\thr\\xthread @ 240]\r\n15 0000000f`e019f960 00007ffb`9721cab9 _pywrap_tensorflow!std::_LaunchPad<std::unique_ptr<std::tuple<std::function<void __cdecl(void)> >,std::default_delete<std::tuple<std::function<void __cdecl(void)> > > > >::_Run+0x85 [c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\thr\\xthread @ 247]\r\n16 0000000f`e019f9a0 00007ffb`bf3bcab0 _pywrap_tensorflow!std::_Pad::_Call_func+0x9 [c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\thr\\xthread @ 210]\r\n17 0000000f`e019f9d0 00007ffb`c1488364 ucrtbase!o__realloc_base+0x60\r\n18 0000000f`e019fa00 00007ffb`c2b270d1 kernel32!BaseThreadInitThunk+0x14\r\n19 0000000f`e019fa30 00000000`00000000 ntdll!RtlUserThreadStart+0x21 [d:\\rs1\\minkernel\\ntdll\\rtlstrt.c @ 997]\r\n # Child-SP          RetAddr           Call Site\r\n00 0000000f`e038f6f8 00007ffb`c2b2d119 ntdll!ZwWaitForAlertByThreadId+0x14 [d:\\rs1.obj.amd64fre\\minkernel\\ntdll\\daytona\\objfre\\amd64\\usrstubs.asm @ 3731]\r\n01 0000000f`e038f700 00007ffb`bf018d78 ntdll!RtlSleepConditionVariableCS+0xc9 [d:\\rs1\\minkernel\\ntos\\rtl\\condition.c @ 927]\r\n02 0000000f`e038f770 00007ffb`99585d6e KERNELBASE!SleepConditionVariableCS+0x28 [d:\\rs1\\minkernel\\kernelbase\\synch.c @ 1985]\r\n03 0000000f`e038f7a0 00007ffb`995694a9 _pywrap_tensorflow!gpr_cv_wait+0x11e [d:\\tensorflow\\tensorscripts\\src\\tensorflow\\tensorflow\\contrib\\cmake\\build\\grpc\\src\\grpc\\src\\core\\lib\\support\\sync_windows.c @ 103]\r\n04 0000000f`e038f800 00007ffb`99548fb2 _pywrap_tensorflow!grpc_pollset_work+0x179 [d:\\tensorflow\\tensorscripts\\src\\tensorflow\\tensorflow\\contrib\\cmake\\build\\grpc\\src\\grpc\\src\\core\\lib\\iomgr\\pollset_windows.c @ 182]\r\n05 0000000f`e038f8b0 00007ffb`99537cae _pywrap_tensorflow!grpc_completion_queue_next+0x1f2 [d:\\tensorflow\\tensorscripts\\src\\tensorflow\\tensorflow\\contrib\\cmake\\build\\grpc\\src\\grpc\\src\\core\\lib\\surface\\completion_queue.c @ 380]\r\n06 0000000f`e038f9f0 00007ffb`975359e1 _pywrap_tensorflow!grpc::CompletionQueue::AsyncNextInternal+0x3e [d:\\tensorflow\\tensorscripts\\src\\tensorflow\\tensorflow\\contrib\\cmake\\build\\grpc\\src\\grpc\\src\\cpp\\common\\completion_queue.cc @ 56]\r\n07 (Inline Function) --------`-------- _pywrap_tensorflow!grpc::CompletionQueue::Next+0xa5 [d:\\tensorflow\\tensorscripts\\src\\tensorflow\\tensorflow\\contrib\\cmake\\build\\grpc\\src\\grpc\\include\\grpc++\\impl\\codegen\\completion_queue.h @ 147]\r\n08 0000000f`e038fa40 00007ffb`9721ce25 _pywrap_tensorflow!<lambda_ea64bb373946421891242c9b912b7e25>::operator()+0xc1 [d:\\tensorflow\\tensorscripts\\src\\tensorflow\\tensorflow\\core\\distributed_runtime\\rpc\\grpc_worker_cache.cc @ 38]\r\n09 (Inline Function) --------`-------- _pywrap_tensorflow!std::_Func_class<void>::operator()+0x16 [c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\functional @ 279]\r\n0a (Inline Function) --------`-------- _pywrap_tensorflow!std::_Invoker_functor::_Call+0x16 [c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\type_traits @ 1398]\r\n0b (Inline Function) --------`-------- _pywrap_tensorflow!std::invoke+0x16 [c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\type_traits @ 1466]\r\n0c (Inline Function) --------`-------- _pywrap_tensorflow!std::_LaunchPad<std::unique_ptr<std::tuple<std::function<void __cdecl(void)> >,std::default_delete<std::tuple<std::function<void __cdecl(void)> > > > >::_Execute+0x16 [c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\thr\\xthread @ 240]\r\n0d 0000000f`e038fab0 00007ffb`9721cab9 _pywrap_tensorflow!std::_LaunchPad<std::unique_ptr<std::tuple<std::function<void __cdecl(void)> >,std::default_delete<std::tuple<std::function<void __cdecl(void)> > > > >::_Run+0x85 [c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\thr\\xthread @ 247]\r\n0e 0000000f`e038faf0 00007ffb`bf3bcab0 _pywrap_tensorflow!std::_Pad::_Call_func+0x9 [c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\thr\\xthread @ 210]\r\n0f 0000000f`e038fb20 00007ffb`c1488364 ucrtbase!o__realloc_base+0x60\r\n10 0000000f`e038fb50 00007ffb`c2b270d1 kernel32!BaseThreadInitThunk+0x14\r\n11 0000000f`e038fb80 00000000`00000000 ntdll!RtlUserThreadStart+0x21 [d:\\rs1\\minkernel\\ntdll\\rtlstrt.c @ 997]\r\n # Child-SP          RetAddr           Call Site\r\n00 0000000f`e057fb88 00007ffb`c2b2cfb5 ntdll!ZwWaitForAlertByThreadId+0x14 [d:\\rs1.obj.amd64fre\\minkernel\\ntdll\\daytona\\objfre\\amd64\\usrstubs.asm @ 3731]\r\n01 0000000f`e057fb90 00007ffb`bf018d28 ntdll!RtlSleepConditionVariableSRW+0xf5 [d:\\rs1\\minkernel\\ntos\\rtl\\condition.c @ 1109]\r\n02 0000000f`e057fc10 00007ffb`b6978368 KERNELBASE!SleepConditionVariableSRW+0x28 [d:\\rs1\\minkernel\\kernelbase\\synch.c @ 2020]\r\n03 0000000f`e057fc50 00007ffb`b6978530 msvcp140!std::_Syserror_map+0x198\r\n04 0000000f`e057fc80 00007ffb`971e89e7 msvcp140!Cnd_destroy+0x70\r\n05 (Inline Function) --------`-------- _pywrap_tensorflow!std::_Cnd_waitX+0xd [c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\thr\\xthread @ 95]\r\n06 (Inline Function) --------`-------- _pywrap_tensorflow!std::condition_variable::wait+0xd [c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\mutex @ 565]\r\n07 0000000f`e057fd00 00007ffb`971e80f9 _pywrap_tensorflow!Eigen::EventCount::Park+0x67 [d:\\tensorflow\\tensorscripts\\src\\tensorflow\\tensorflow\\contrib\\cmake\\build\\external\\eigen_archive\\unsupported\\eigen\\cxx11\\src\\threadpool\\eventcount.h @ 208]\r\n08 0000000f`e057fd50 00007ffb`971e98a0 _pywrap_tensorflow!Eigen::EventCount::CommitWait+0xc9 [d:\\tensorflow\\tensorscripts\\src\\tensorflow\\tensorflow\\contrib\\cmake\\build\\external\\eigen_archive\\unsupported\\eigen\\cxx11\\src\\threadpool\\eventcount.h @ 103]\r\n09 0000000f`e057fd90 00007ffb`971e9bc3 _pywrap_tensorflow!Eigen::NonBlockingThreadPoolTempl<tensorflow::thread::EigenEnvironment>::WaitForWork+0x180 [d:\\tensorflow\\tensorscripts\\src\\tensorflow\\tensorflow\\contrib\\cmake\\build\\external\\eigen_archive\\unsupported\\eigen\\cxx11\\src\\threadpool\\nonblockingthreadpool.h @ 233]\r\n0a 0000000f`e057fdd0 00007ffb`971e9f6e _pywrap_tensorflow!Eigen::NonBlockingThreadPoolTempl<tensorflow::thread::EigenEnvironment>::WorkerLoop+0x293 [d:\\tensorflow\\tensorscripts\\src\\tensorflow\\tensorflow\\contrib\\cmake\\build\\external\\eigen_archive\\unsupported\\eigen\\cxx11\\src\\threadpool\\nonblockingthreadpool.h @ 160]\r\n0b (Inline Function) --------`-------- _pywrap_tensorflow!std::_Func_class<void>::operator()+0x16 [c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\functional @ 279]\r\n0c (Inline Function) --------`-------- _pywrap_tensorflow!tensorflow::thread::EigenEnvironment::CreateThread::__l2::<lambda_3e5df898eaffef9b52307b4af9ee50ab>::operator()+0x2c [d:\\tensorflow\\tensorscripts\\src\\tensorflow\\tensorflow\\core\\lib\\core\\threadpool.cc @ 57]\r\n0d (Inline Function) --------`-------- _pywrap_tensorflow!std::_Invoker_functor::_Call+0x2c [c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\type_traits @ 1398]\r\n0e (Inline Function) --------`-------- _pywrap_tensorflow!std::invoke+0x2c [c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\type_traits @ 1466]\r\n0f (Inline Function) --------`-------- _pywrap_tensorflow!std::_Invoke_ret+0x2c [c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\type_traits @ 1484]\r\n10 0000000f`e057fe40 00007ffb`9721ce25 _pywrap_tensorflow!std::_Func_impl<<lambda_3e5df898eaffef9b52307b4af9ee50ab>,std::allocator<int>,void>::_Do_call+0x3e [c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\functional @ 212]\r\n11 (Inline Function) --------`-------- _pywrap_tensorflow!std::_Func_class<void>::operator()+0x16 [c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\functional @ 279]\r\n12 (Inline Function) --------`-------- _pywrap_tensorflow!std::_Invoker_functor::_Call+0x16 [c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\type_traits @ 1398]\r\n13 (Inline Function) --------`-------- _pywrap_tensorflow!std::invoke+0x16 [c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\type_traits @ 1466]\r\n14 (Inline Function) --------`-------- _pywrap_tensorflow!std::_LaunchPad<std::unique_ptr<std::tuple<std::function<void __cdecl(void)> >,std::default_delete<std::tuple<std::function<void __cdecl(void)> > > > >::_Execute+0x16 [c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\thr\\xthread @ 240]\r\n15 0000000f`e057fe80 00007ffb`9721cab9 _pywrap_tensorflow!std::_LaunchPad<std::unique_ptr<std::tuple<std::function<void __cdecl(void)> >,std::default_delete<std::tuple<std::function<void __cdecl(void)> > > > >::_Run+0x85 [c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\thr\\xthread @ 247]\r\n16 0000000f`e057fec0 00007ffb`bf3bcab0 _pywrap_tensorflow!std::_Pad::_Call_func+0x9 [c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\thr\\xthread @ 210]\r\n17 0000000f`e057fef0 00007ffb`c1488364 ucrtbase!o__realloc_base+0x60\r\n18 0000000f`e057ff20 00007ffb`c2b270d1 kernel32!BaseThreadInitThunk+0x14\r\n19 0000000f`e057ff50 00000000`00000000 ntdll!RtlUserThreadStart+0x21 [d:\\rs1\\minkernel\\ntdll\\rtlstrt.c @ 997]\r\n # Child-SP          RetAddr           Call Site\r\n00 0000000f`e076f918 00007ffb`c2b2d119 ntdll!ZwWaitForAlertByThreadId+0x14 [d:\\rs1.obj.amd64fre\\minkernel\\ntdll\\daytona\\objfre\\amd64\\usrstubs.asm @ 3731]\r\n01 0000000f`e076f920 00007ffb`bf018d78 ntdll!RtlSleepConditionVariableCS+0xc9 [d:\\rs1\\minkernel\\ntos\\rtl\\condition.c @ 927]\r\n02 0000000f`e076f990 00007ffb`99585d6e KERNELBASE!SleepConditionVariableCS+0x28 [d:\\rs1\\minkernel\\kernelbase\\synch.c @ 1985]\r\n03 0000000f`e076f9c0 00007ffb`995694a9 _pywrap_tensorflow!gpr_cv_wait+0x11e [d:\\tensorflow\\tensorscripts\\src\\tensorflow\\tensorflow\\contrib\\cmake\\build\\grpc\\src\\grpc\\src\\core\\lib\\support\\sync_windows.c @ 103]\r\n04 0000000f`e076fa20 00007ffb`99548fb2 _pywrap_tensorflow!grpc_pollset_work+0x179 [d:\\tensorflow\\tensorscripts\\src\\tensorflow\\tensorflow\\contrib\\cmake\\build\\grpc\\src\\grpc\\src\\core\\lib\\iomgr\\pollset_windows.c @ 182]\r\n05 0000000f`e076fad0 00007ffb`99537cae _pywrap_tensorflow!grpc_completion_queue_next+0x1f2 [d:\\tensorflow\\tensorscripts\\src\\tensorflow\\tensorflow\\contrib\\cmake\\build\\grpc\\src\\grpc\\src\\core\\lib\\surface\\completion_queue.c @ 380]\r\n06 0000000f`e076fc10 00007ffb`9750a8da _pywrap_tensorflow!grpc::CompletionQueue::AsyncNextInternal+0x3e [d:\\tensorflow\\tensorscripts\\src\\tensorflow\\tensorflow\\contrib\\cmake\\build\\grpc\\src\\grpc\\src\\cpp\\common\\completion_queue.cc @ 56]\r\n07 (Inline Function) --------`-------- _pywrap_tensorflow!grpc::CompletionQueue::Next+0xe1 [d:\\tensorflow\\tensorscripts\\src\\tensorflow\\tensorflow\\contrib\\cmake\\build\\grpc\\src\\grpc\\include\\grpc++\\impl\\codegen\\completion_queue.h @ 147]\r\n08 0000000f`e076fc60 00007ffb`9721ce25 _pywrap_tensorflow!tensorflow::GrpcMasterService::HandleRPCsLoop+0x56a [d:\\tensorflow\\tensorscripts\\src\\tensorflow\\tensorflow\\core\\distributed_runtime\\rpc\\grpc_master_service.cc @ 116]\r\n09 (Inline Function) --------`-------- _pywrap_tensorflow!std::_Func_class<void>::operator()+0x16 [c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\functional @ 279]\r\n0a (Inline Function) --------`-------- _pywrap_tensorflow!std::_Invoker_functor::_Call+0x16 [c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\type_traits @ 1398]\r\n0b (Inline Function) --------`-------- _pywrap_tensorflow!std::invoke+0x16 [c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\type_traits @ 1466]\r\n0c (Inline Function) --------`-------- _pywrap_tensorflow!std::_LaunchPad<std::unique_ptr<std::tuple<std::function<void __cdecl(void)> >,std::default_delete<std::tuple<std::function<void __cdecl(void)> > > > >::_Execute+0x16 [c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\thr\\xthread @ 240]\r\n0d 0000000f`e076fd70 00007ffb`9721cab9 _pywrap_tensorflow!std::_LaunchPad<std::unique_ptr<std::tuple<std::function<void __cdecl(void)> >,std::default_delete<std::tuple<std::function<void __cdecl(void)> > > > >::_Run+0x85 [c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\thr\\xthread @ 247]\r\n0e 0000000f`e076fdb0 00007ffb`bf3bcab0 _pywrap_tensorflow!std::_Pad::_Call_func+0x9 [c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\thr\\xthread @ 210]\r\n0f 0000000f`e076fde0 00007ffb`c1488364 ucrtbase!o__realloc_base+0x60\r\n10 0000000f`e076fe10 00007ffb`c2b270d1 kernel32!BaseThreadInitThunk+0x14\r\n11 0000000f`e076fe40 00000000`00000000 ntdll!RtlUserThreadStart+0x21 [d:\\rs1\\minkernel\\ntdll\\rtlstrt.c @ 997]\r\n # Child-SP          RetAddr           Call Site\r\n00 0000000f`e095f8c8 00007ffb`c2b2d119 ntdll!ZwWaitForAlertByThreadId+0x14 [d:\\rs1.obj.amd64fre\\minkernel\\ntdll\\daytona\\objfre\\amd64\\usrstubs.asm @ 3731]\r\n01 0000000f`e095f8d0 00007ffb`bf018d78 ntdll!RtlSleepConditionVariableCS+0xc9 [d:\\rs1\\minkernel\\ntos\\rtl\\condition.c @ 927]\r\n02 0000000f`e095f940 00007ffb`99585d6e KERNELBASE!SleepConditionVariableCS+0x28 [d:\\rs1\\minkernel\\kernelbase\\synch.c @ 1985]\r\n03 0000000f`e095f970 00007ffb`995694a9 _pywrap_tensorflow!gpr_cv_wait+0x11e [d:\\tensorflow\\tensorscripts\\src\\tensorflow\\tensorflow\\contrib\\cmake\\build\\grpc\\src\\grpc\\src\\core\\lib\\support\\sync_windows.c @ 103]\r\n04 0000000f`e095f9d0 00007ffb`99548fb2 _pywrap_tensorflow!grpc_pollset_work+0x179 [d:\\tensorflow\\tensorscripts\\src\\tensorflow\\tensorflow\\contrib\\cmake\\build\\grpc\\src\\grpc\\src\\core\\lib\\iomgr\\pollset_windows.c @ 182]\r\n05 0000000f`e095fa80 00007ffb`99537cae _pywrap_tensorflow!grpc_completion_queue_next+0x1f2 [d:\\tensorflow\\tensorscripts\\src\\tensorflow\\tensorflow\\contrib\\cmake\\build\\grpc\\src\\grpc\\src\\core\\lib\\surface\\completion_queue.c @ 380]\r\n06 0000000f`e095fbc0 00007ffb`9754189b _pywrap_tensorflow!grpc::CompletionQueue::AsyncNextInternal+0x3e [d:\\tensorflow\\tensorscripts\\src\\tensorflow\\tensorflow\\contrib\\cmake\\build\\grpc\\src\\grpc\\src\\cpp\\common\\completion_queue.cc @ 56]\r\n07 (Inline Function) --------`-------- _pywrap_tensorflow!grpc::CompletionQueue::Next+0xed [d:\\tensorflow\\tensorscripts\\src\\tensorflow\\tensorflow\\contrib\\cmake\\build\\grpc\\src\\grpc\\include\\grpc++\\impl\\codegen\\completion_queue.h @ 147]\r\n08 0000000f`e095fc10 00007ffb`9721ce25 _pywrap_tensorflow!tensorflow::`anonymous namespace'::GrpcWorkerService::HandleRPCsLoop+0x6cb [d:\\tensorflow\\tensorscripts\\src\\tensorflow\\tensorflow\\core\\distributed_runtime\\rpc\\grpc_worker_service.cc @ 145]\r\n09 (Inline Function) --------`-------- _pywrap_tensorflow!std::_Func_class<void>::operator()+0x16 [c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\functional @ 279]\r\n0a (Inline Function) --------`-------- _pywrap_tensorflow!std::_Invoker_functor::_Call+0x16 [c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\type_traits @ 1398]\r\n0b (Inline Function) --------`-------- _pywrap_tensorflow!std::invoke+0x16 [c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\type_traits @ 1466]\r\n0c (Inline Function) --------`-------- _pywrap_tensorflow!std::_LaunchPad<std::unique_ptr<std::tuple<std::function<void __cdecl(void)> >,std::default_delete<std::tuple<std::function<void __cdecl(void)> > > > >::_Execute+0x16 [c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\thr\\xthread @ 240]\r\n0d 0000000f`e095fd50 00007ffb`9721cab9 _pywrap_tensorflow!std::_LaunchPad<std::unique_ptr<std::tuple<std::function<void __cdecl(void)> >,std::default_delete<std::tuple<std::function<void __cdecl(void)> > > > >::_Run+0x85 [c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\thr\\xthread @ 247]\r\n0e 0000000f`e095fd90 00007ffb`bf3bcab0 _pywrap_tensorflow!std::_Pad::_Call_func+0x9 [c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\thr\\xthread @ 210]\r\n0f 0000000f`e095fdc0 00007ffb`c1488364 ucrtbase!o__realloc_base+0x60\r\n10 0000000f`e095fdf0 00007ffb`c2b270d1 kernel32!BaseThreadInitThunk+0x14\r\n11 0000000f`e095fe20 00000000`00000000 ntdll!RtlUserThreadStart+0x21 [d:\\rs1\\minkernel\\ntdll\\rtlstrt.c @ 997]\r\n # Child-SP          RetAddr           Call Site\r\n00 0000000f`e18de858 00007ffb`befc75ff ntdll!ZwWaitForSingleObject+0x14 [d:\\rs1.obj.amd64fre\\minkernel\\ntdll\\daytona\\objfre\\amd64\\usrstubs.asm @ 211]\r\n01 0000000f`e18de860 00000000`6ebde1bc KERNELBASE!WaitForSingleObjectEx+0x8f [d:\\rs1\\minkernel\\kernelbase\\synch.c @ 1328]\r\n02 0000000f`e18de900 00000000`6ebde56e python35!PyThread_init_thread+0x31c\r\n03 0000000f`e18de940 00000000`6ea87df7 python35!PyThread_acquire_lock_timed+0x6e\r\n04 0000000f`e18de970 00000000`6ea88099 python35!PyOS_SigintEvent+0x917\r\n05 0000000f`e18de9c0 00000000`6eb0e420 python35!PyOS_SigintEvent+0xbb9\r\n06 0000000f`e18de9f0 00000000`6eb89e20 python35!PyCFunction_Call+0x30\r\n07 0000000f`e18dea20 00000000`6eb86bc1 python35!PyEval_GetFuncDesc+0x3b0\r\n08 0000000f`e18dea80 00000000`6eb88a9e python35!PyEval_EvalFrameEx+0x3241\r\n09 0000000f`e18deb80 00000000`6eb8a070 python35!PyEval_EvalFrameEx+0x511e\r\n0a 0000000f`e18dec20 00000000`6eb89ea1 python35!PyEval_GetFuncDesc+0x600\r\n0b 0000000f`e18decc0 00000000`6eb86bc1 python35!PyEval_GetFuncDesc+0x431\r\n0c 0000000f`e18ded20 00000000`6eb88a9e python35!PyEval_EvalFrameEx+0x3241\r\n0d 0000000f`e18dee20 00000000`6eb8a070 python35!PyEval_EvalFrameEx+0x511e\r\n0e 0000000f`e18deec0 00000000`6eb89ea1 python35!PyEval_GetFuncDesc+0x600\r\n0f 0000000f`e18def60 00000000`6eb86bc1 python35!PyEval_GetFuncDesc+0x431\r\n10 0000000f`e18defc0 00000000`6eb88a9e python35!PyEval_EvalFrameEx+0x3241\r\n11 0000000f`e18df0c0 00000000`6eb8a070 python35!PyEval_EvalFrameEx+0x511e\r\n12 0000000f`e18df160 00000000`6eb89ea1 python35!PyEval_GetFuncDesc+0x600\r\n13 0000000f`e18df200 00000000`6eb86bc1 python35!PyEval_GetFuncDesc+0x431\r\n14 0000000f`e18df260 00000000`6eb88a9e python35!PyEval_EvalFrameEx+0x3241\r\n15 0000000f`e18df360 00000000`6eaf8751 python35!PyEval_EvalFrameEx+0x511e\r\n16 0000000f`e18df400 00000000`6eac6058 python35!PyFunction_SetAnnotations+0xb71\r\n17 0000000f`e18df4b0 00000000`6eb8a7cd python35!PyObject_Call+0x78\r\n18 0000000f`e18df4e0 00000000`6eb86c66 python35!PyEval_GetFuncDesc+0xd5d\r\n19 0000000f`e18df550 00000000`6eb89fe8 python35!PyEval_EvalFrameEx+0x32e6\r\n1a 0000000f`e18df650 00000000`6eb89ea1 python35!PyEval_GetFuncDesc+0x578\r\n1b 0000000f`e18df6f0 00000000`6eb86bc1 python35!PyEval_GetFuncDesc+0x431\r\n1c 0000000f`e18df750 00000000`6eb89fe8 python35!PyEval_EvalFrameEx+0x3241\r\n1d 0000000f`e18df850 00000000`6eb89ea1 python35!PyEval_GetFuncDesc+0x578\r\n1e 0000000f`e18df8f0 00000000`6eb86bc1 python35!PyEval_GetFuncDesc+0x431\r\n1f 0000000f`e18df950 00000000`6eb88a9e python35!PyEval_EvalFrameEx+0x3241\r\n20 0000000f`e18dfa50 00000000`6eaf8751 python35!PyEval_EvalFrameEx+0x511e\r\n21 0000000f`e18dfaf0 00000000`6eac6058 python35!PyFunction_SetAnnotations+0xb71\r\n22 0000000f`e18dfba0 00000000`6eadd82d python35!PyObject_Call+0x78\r\n23 0000000f`e18dfbd0 00000000`6eac6058 python35!PyMethod_New+0xa9d\r\n24 0000000f`e18dfc10 00000000`6eb899ec python35!PyObject_Call+0x78\r\n25 0000000f`e18dfc40 00000000`6ea89193 python35!PyEval_CallObjectWithKeywords+0xcc\r\n26 0000000f`e18dfc70 00000000`6ebde352 python35!PyOS_SigintEvent+0x1cb3\r\n27 0000000f`e18dfcb0 00007ffb`bf3bcab0 python35!PyThread_init_thread+0x4b2\r\n28 0000000f`e18dfce0 00007ffb`c1488364 ucrtbase!o__realloc_base+0x60\r\n29 0000000f`e18dfd10 00007ffb`c2b270d1 kernel32!BaseThreadInitThunk+0x14\r\n2a 0000000f`e18dfd40 00000000`00000000 ntdll!RtlUserThreadStart+0x21 [d:\\rs1\\minkernel\\ntdll\\rtlstrt.c @ 997]\r\n # Child-SP          RetAddr           Call Site\r\n00 0000000f`e247f628 00007ffb`c2b2cfb5 ntdll!ZwWaitForAlertByThreadId+0x14 [d:\\rs1.obj.amd64fre\\minkernel\\ntdll\\daytona\\objfre\\amd64\\usrstubs.asm @ 3731]\r\n01 0000000f`e247f630 00007ffb`bf018d28 ntdll!RtlSleepConditionVariableSRW+0xf5 [d:\\rs1\\minkernel\\ntos\\rtl\\condition.c @ 1109]\r\n02 0000000f`e247f6b0 00007ffb`b6978368 KERNELBASE!SleepConditionVariableSRW+0x28 [d:\\rs1\\minkernel\\kernelbase\\synch.c @ 2020]\r\n03 0000000f`e247f6f0 00007ffb`b6978530 msvcp140!std::_Syserror_map+0x198\r\n04 0000000f`e247f720 00007ffb`971e89e7 msvcp140!Cnd_destroy+0x70\r\n05 (Inline Function) --------`-------- _pywrap_tensorflow!std::_Cnd_waitX+0xd [c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\thr\\xthread @ 95]\r\n06 (Inline Function) --------`-------- _pywrap_tensorflow!std::condition_variable::wait+0xd [c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\mutex @ 565]\r\n07 0000000f`e247f7a0 00007ffb`971e80f9 _pywrap_tensorflow!Eigen::EventCount::Park+0x67 [d:\\tensorflow\\tensorscripts\\src\\tensorflow\\tensorflow\\contrib\\cmake\\build\\external\\eigen_archive\\unsupported\\eigen\\cxx11\\src\\threadpool\\eventcount.h @ 208]\r\n08 0000000f`e247f7f0 00007ffb`971e98a0 _pywrap_tensorflow!Eigen::EventCount::CommitWait+0xc9 [d:\\tensorflow\\tensorscripts\\src\\tensorflow\\tensorflow\\contrib\\cmake\\build\\external\\eigen_archive\\unsupported\\eigen\\cxx11\\src\\threadpool\\eventcount.h @ 103]\r\n09 0000000f`e247f830 00007ffb`971e9bc3 _pywrap_tensorflow!Eigen::NonBlockingThreadPoolTempl<tensorflow::thread::EigenEnvironment>::WaitForWork+0x180 [d:\\tensorflow\\tensorscripts\\src\\tensorflow\\tensorflow\\contrib\\cmake\\build\\external\\eigen_archive\\unsupported\\eigen\\cxx11\\src\\threadpool\\nonblockingthreadpool.h @ 233]\r\n0a 0000000f`e247f870 00007ffb`971e9f6e _pywrap_tensorflow!Eigen::NonBlockingThreadPoolTempl<tensorflow::thread::EigenEnvironment>::WorkerLoop+0x293 [d:\\tensorflow\\tensorscripts\\src\\tensorflow\\tensorflow\\contrib\\cmake\\build\\external\\eigen_archive\\unsupported\\eigen\\cxx11\\src\\threadpool\\nonblockingthreadpool.h @ 160]\r\n0b (Inline Function) --------`-------- _pywrap_tensorflow!std::_Func_class<void>::operator()+0x16 [c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\functional @ 279]\r\n0c (Inline Function) --------`-------- _pywrap_tensorflow!tensorflow::thread::EigenEnvironment::CreateThread::__l2::<lambda_3e5df898eaffef9b52307b4af9ee50ab>::operator()+0x2c [d:\\tensorflow\\tensorscripts\\src\\tensorflow\\tensorflow\\core\\lib\\core\\threadpool.cc @ 57]\r\n0d (Inline Function) --------`-------- _pywrap_tensorflow!std::_Invoker_functor::_Call+0x2c [c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\type_traits @ 1398]\r\n0e (Inline Function) --------`-------- _pywrap_tensorflow!std::invoke+0x2c [c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\type_traits @ 1466]\r\n0f (Inline Function) --------`-------- _pywrap_tensorflow!std::_Invoke_ret+0x2c [c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\type_traits @ 1484]\r\n10 0000000f`e247f8e0 00007ffb`9721ce25 _pywrap_tensorflow!std::_Func_impl<<lambda_3e5df898eaffef9b52307b4af9ee50ab>,std::allocator<int>,void>::_Do_call+0x3e [c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\functional @ 212]\r\n11 (Inline Function) --------`-------- _pywrap_tensorflow!std::_Func_class<void>::operator()+0x16 [c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\functional @ 279]\r\n12 (Inline Function) --------`-------- _pywrap_tensorflow!std::_Invoker_functor::_Call+0x16 [c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\type_traits @ 1398]\r\n13 (Inline Function) --------`-------- _pywrap_tensorflow!std::invoke+0x16 [c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\type_traits @ 1466]\r\n14 (Inline Function) --------`-------- _pywrap_tensorflow!std::_LaunchPad<std::unique_ptr<std::tuple<std::function<void __cdecl(void)> >,std::default_delete<std::tuple<std::function<void __cdecl(void)> > > > >::_Execute+0x16 [c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\thr\\xthread @ 240]\r\n15 0000000f`e247f920 00007ffb`9721cab9 _pywrap_tensorflow!std::_LaunchPad<std::unique_ptr<std::tuple<std::function<void __cdecl(void)> >,std::default_delete<std::tuple<std::function<void __cdecl(void)> > > > >::_Run+0x85 [c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\thr\\xthread @ 247]\r\n16 0000000f`e247f960 00007ffb`bf3bcab0 _pywrap_tensorflow!std::_Pad::_Call_func+0x9 [c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\thr\\xthread @ 210]\r\n17 0000000f`e247f990 00007ffb`c1488364 ucrtbase!o__realloc_base+0x60\r\n18 0000000f`e247f9c0 00007ffb`c2b270d1 kernel32!BaseThreadInitThunk+0x14\r\n19 0000000f`e247f9f0 00000000`00000000 ntdll!RtlUserThreadStart+0x21 [d:\\rs1\\minkernel\\ntdll\\rtlstrt.c @ 997]\r\n # Child-SP          RetAddr           Call Site\r\n00 0000001c`6cb7ec58 00007ffb`c2b2cfb5 ntdll!ZwWaitForAlertByThreadId+0x14 [d:\\rs1.obj.amd64fre\\minkernel\\ntdll\\daytona\\objfre\\amd64\\usrstubs.asm @ 3731]\r\n01 0000001c`6cb7ec60 00007ffb`bf018d28 ntdll!RtlSleepConditionVariableSRW+0xf5 [d:\\rs1\\minkernel\\ntos\\rtl\\condition.c @ 1109]\r\n02 0000001c`6cb7ece0 00007ffb`b6978368 KERNELBASE!SleepConditionVariableSRW+0x28 [d:\\rs1\\minkernel\\kernelbase\\synch.c @ 2020]\r\n03 0000001c`6cb7ed20 00007ffb`b6978530 msvcp140!std::_Syserror_map+0x198\r\n04 0000001c`6cb7ed50 00007ffb`973a6ecd msvcp140!Cnd_destroy+0x70\r\n05 (Inline Function) --------`-------- _pywrap_tensorflow!std::_Cnd_waitX+0xd [c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\thr\\xthread @ 95]\r\n06 (Inline Function) --------`-------- _pywrap_tensorflow!std::condition_variable::wait+0xd [c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\mutex @ 565]\r\n07 0000001c`6cb7edd0 00007ffb`974f35e3 _pywrap_tensorflow!tensorflow::BlockingCounter::Wait+0x7d [d:\\tensorflow\\tensorscripts\\src\\tensorflow\\tensorflow\\core\\lib\\core\\blocking_counter.h @ 53]\r\n08 (Inline Function) --------`-------- _pywrap_tensorflow!tensorflow::RunManyGraphs::Wait+0xc [d:\\tensorflow\\tensorscripts\\src\\tensorflow\\tensorflow\\core\\distributed_runtime\\master_session.cc @ 476]\r\n09 0000001c`6cb7ee20 00007ffb`974f01c2 _pywrap_tensorflow!tensorflow::MasterSession::ReffedClientGraph::RunPartitions+0xb03 [d:\\tensorflow\\tensorscripts\\src\\tensorflow\\tensorflow\\core\\distributed_runtime\\master_session.cc @ 622]\r\n0a 0000001c`6cb7f640 00007ffb`974f29a3 _pywrap_tensorflow!tensorflow::MasterSession::DoRunWithLocalExecution+0x362 [d:\\tensorflow\\tensorscripts\\src\\tensorflow\\tensorflow\\core\\distributed_runtime\\master_session.cc @ 1360]\r\n0b 0000001c`6cb7f880 00007ffb`974dfabb _pywrap_tensorflow!tensorflow::MasterSession::Run+0xc3 [d:\\tensorflow\\tensorscripts\\src\\tensorflow\\tensorflow\\core\\distributed_runtime\\master_session.cc @ 1161]\r\n0c 0000001c`6cb7f8f0 00007ffb`9721ce25 _pywrap_tensorflow!<lambda_81a3b772d3ac2aa00a42b8da5cebc5eb>::operator()+0x3b [d:\\tensorflow\\tensorscripts\\src\\tensorflow\\tensorflow\\core\\distributed_runtime\\master.cc @ 325]\r\n0d (Inline Function) --------`-------- _pywrap_tensorflow!std::_Func_class<void>::operator()+0x16 [c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\functional @ 279]\r\n0e (Inline Function) --------`-------- _pywrap_tensorflow!std::_Invoker_functor::_Call+0x16 [c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\type_traits @ 1398]\r\n0f (Inline Function) --------`-------- _pywrap_tensorflow!std::invoke+0x16 [c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\type_traits @ 1466]\r\n10 (Inline Function) --------`-------- _pywrap_tensorflow!std::_LaunchPad<std::unique_ptr<std::tuple<std::function<void __cdecl(void)> >,std::default_delete<std::tuple<std::function<void __cdecl(void)> > > > >::_Execute+0x16 [c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\thr\\xthread @ 240]\r\n11 0000001c`6cb7f950 00007ffb`9721cab9 _pywrap_tensorflow!std::_LaunchPad<std::unique_ptr<std::tuple<std::function<void __cdecl(void)> >,std::default_delete<std::tuple<std::function<void __cdecl(void)> > > > >::_Run+0x85 [c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\thr\\xthread @ 247]\r\n12 0000001c`6cb7f990 00007ffb`bf3bcab0 _pywrap_tensorflow!std::_Pad::_Call_func+0x9 [c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\thr\\xthread @ 210]\r\n13 0000001c`6cb7f9c0 00007ffb`c1488364 ucrtbase!o__realloc_base+0x60\r\n14 0000001c`6cb7f9f0 00007ffb`c2b270d1 kernel32!BaseThreadInitThunk+0x14\r\n15 0000001c`6cb7fa20 00000000`00000000 ntdll!RtlUserThreadStart+0x21 [d:\\rs1\\minkernel\\ntdll\\rtlstrt.c @ 997]\r\n```", "wow, I've never seen windows stack trace before, cc @mrry ", "from my experience, windows version is not very stable, i also ran into session run stuck when I enabled full tracing option with one custom operator built in, and setting timeout did not work, sometimes the first step could get stuck, but after i disabled full tracing everything is fine. but the script under linux is ok, no stuck happened.\r\n\r\nand here is the stack:\r\n\r\n```\r\n# Child-SP          RetAddr           Call Site\r\n00 00000053`c09bc8f8 00007ff9`554423c3 ntdll!ZwRemoveIoCompletion+0xa [d:\\blue.obj.amd64fre\\minkernel\\ntdll\\daytona\\objfre\\amd64\\usrstubs.asm @ 238]\r\n01 00000053`c09bc900 00007ff9`0420fdd9 KERNELBASE!GetQueuedCompletionStatus+0x3f [d:\\blue\\minkernel\\kernelbase\\error.c @ 706]\r\n02 00000053`c09bc960 00007ff9`041f93e6 _pywrap_tensorflow!grpc_iocp_work+0x69 [d:\\tensorflow\\tensorscripts\\src\\tensorflow\\tensorflow\\contrib\\cmake\\build\\grpc\\src\\grpc\\src\\core\\lib\\iomgr\\iocp_windows.c @ 87]\r\n03 00000053`c09bc9f0 00007ff9`041d9466 _pywrap_tensorflow!grpc_pollset_work+0xb6 [d:\\tensorflow\\tensorscripts\\src\\tensorflow\\tensorflow\\contrib\\cmake\\build\\grpc\\src\\grpc\\src\\core\\lib\\iomgr\\pollset_windows.c @ 152]\r\n04 00000053`c09bcaa0 00007ff9`041c7fa1 _pywrap_tensorflow!grpc_completion_queue_pluck+0x256 [d:\\tensorflow\\tensorscripts\\src\\tensorflow\\tensorflow\\contrib\\cmake\\build\\grpc\\src\\grpc\\src\\core\\lib\\surface\\completion_queue.c @ 510]\r\n05 00000053`c09bcbe0 00007ff9`021a127b _pywrap_tensorflow!grpc::CoreCodegen::grpc_completion_queue_pluck+0x41 [d:\\tensorflow\\tensorscripts\\src\\tensorflow\\tensorflow\\contrib\\cmake\\build\\grpc\\src\\grpc\\src\\cpp\\common\\core_codegen.cc @ 66]\r\n06 (Inline Function) --------`-------- _pywrap_tensorflow!grpc::CompletionQueue::Pluck+0x53 [d:\\tensorflow\\tensorscripts\\src\\tensorflow\\tensorflow\\contrib\\cmake\\build\\grpc\\src\\grpc\\include\\grpc++\\impl\\codegen\\completion_queue.h @ 207]\r\n07 00000053`c09bcc40 00007ff9`021a5f96 _pywrap_tensorflow!grpc::BlockingUnaryCall<tensorflow::RunStepRequest,tensorflow::RunStepResponse>+0x32b [d:\\tensorflow\\tensorscripts\\src\\tensorflow\\tensorflow\\contrib\\cmake\\build\\grpc\\src\\grpc\\include\\grpc++\\impl\\codegen\\client_unary_call.h @ 72]\r\n08 00000053`c09bce60 00007ff9`021a8af4 _pywrap_tensorflow!tensorflow::grpc::MasterService::Stub::RunStep+0x36 [d:\\tensorflow\\tensorscripts\\src\\tensorflow\\tensorflow\\core\\distributed_runtime\\rpc\\grpc_master_service_impl.cc @ 80]\r\n09 00000053`c09bceb0 00007ff9`021c3fa4 _pywrap_tensorflow!tensorflow::GrpcRemoteMaster::RunStep+0xa4 [d:\\tensorflow\\tensorscripts\\src\\tensorflow\\tensorflow\\core\\distributed_runtime\\rpc\\grpc_remote_master.cc @ 60]\r\n0a 00000053`c09bd080 00007ff9`021c387b _pywrap_tensorflow!tensorflow::GrpcSession::RunProto+0x124 [d:\\tensorflow\\tensorscripts\\src\\tensorflow\\tensorflow\\core\\distributed_runtime\\rpc\\grpc_session.cc @ 238]\r\n0b 00000053`c09bd0e0 00007ff9`01e4c0a0 _pywrap_tensorflow!tensorflow::GrpcSession::Run+0x4cb [d:\\tensorflow\\tensorscripts\\src\\tensorflow\\tensorflow\\core\\distributed_runtime\\rpc\\grpc_session.cc @ 188]\r\n0c 00000053`c09bd410 00007ff9`01e58a7a _pywrap_tensorflow!TF_Run_Helper+0x1c0 [d:\\tensorflow\\tensorscripts\\src\\tensorflow\\tensorflow\\c\\c_api.cc @ 543]\r\n0d 00000053`c09bd5b0 00007ff9`01e2a509 _pywrap_tensorflow!TF_Run+0x1ba [d:\\tensorflow\\tensorscripts\\src\\tensorflow\\tensorflow\\c\\c_api.cc @ 606]\r\n0e 00000053`c09bd680 00007ff9`01e29e1a _pywrap_tensorflow!tensorflow::TF_Run_wrapper_helper+0x6c9 [d:\\tensorflow\\tensorscripts\\src\\tensorflow\\tensorflow\\python\\client\\tf_session_helper.cc @ 500]\r\n0f 00000053`c09bd950 00007ff9`01e607ac _pywrap_tensorflow!tensorflow::TF_Run_wrapper+0x4a [d:\\tensorflow\\tensorscripts\\src\\tensorflow\\tensorflow\\python\\client\\tf_session_helper.cc @ 550]\r\n10 00000053`c09bd9b0 00000000`7597e512 _pywrap_tensorflow!_wrap_TF_Run+0x40c [d:\\tensorflow\\tensorscripts\\src\\tensorflow\\tensorflow\\contrib\\cmake\\build\\pywrap_tensorflow.cc @ 5862]\r\n11 00000053`c09bdbe0 00000000`759f9e20 python35!PyCFunction_Call+0x122\r\n12 00000053`c09bdc10 00000000`759f6bc1 python35!PyEval_GetFuncDesc+0x3b0\r\n13 00000053`c09bdc70 00000000`759f8a9e python35!PyEval_EvalFrameEx+0x3241\r\n14 00000053`c09bdd70 00000000`75968751 python35!PyEval_EvalFrameEx+0x511e\r\n15 00000053`c09bde10 00000000`75936058 python35!PyFunction_SetAnnotations+0xb71\r\n16 00000053`c09bdec0 00000000`759fa7cd python35!PyObject_Call+0x78\r\n17 00000053`c09bdef0 00000000`759f6c66 python35!PyEval_GetFuncDesc+0xd5d\r\n18 00000053`c09bdf60 00000000`759f8a9e python35!PyEval_EvalFrameEx+0x32e6\r\n19 00000053`c09be060 00000000`759fa070 python35!PyEval_EvalFrameEx+0x511e\r\n1a 00000053`c09be100 00000000`759f9ea1 python35!PyEval_GetFuncDesc+0x600\r\n1b 00000053`c09be1a0 00000000`759f6bc1 python35!PyEval_GetFuncDesc+0x431\r\n1c 00000053`c09be200 00000000`759f8a9e python35!PyEval_EvalFrameEx+0x3241\r\n1d 00000053`c09be300 00000000`759fa070 python35!PyEval_EvalFrameEx+0x511e\r\n1e 00000053`c09be3a0 00000000`759f9ea1 python35!PyEval_GetFuncDesc+0x600\r\n1f 00000053`c09be440 00000000`759f6bc1 python35!PyEval_GetFuncDesc+0x431\r\n20 00000053`c09be4a0 00000000`759f9fe8 python35!PyEval_EvalFrameEx+0x3241\r\n21 00000053`c09be5a0 00000000`759f9ea1 python35!PyEval_GetFuncDesc+0x578\r\n22 00000053`c09be640 00000000`759f6bc1 python35!PyEval_GetFuncDesc+0x431\r\n23 00000053`c09be6a0 00000000`759f8a9e python35!PyEval_EvalFrameEx+0x3241\r\n24 00000053`c09be7a0 00000000`759fa070 python35!PyEval_EvalFrameEx+0x511e\r\n25 00000053`c09be840 00000000`759f9ea1 python35!PyEval_GetFuncDesc+0x600\r\n26 00000053`c09be8e0 00000000`759f6bc1 python35!PyEval_GetFuncDesc+0x431\r\n27 00000053`c09be940 00000000`759f8a9e python35!PyEval_EvalFrameEx+0x3241\r\n28 00000053`c09bea40 00000000`75968751 python35!PyEval_EvalFrameEx+0x511e\r\n29 00000053`c09beae0 00000000`75936058 python35!PyFunction_SetAnnotations+0xb71\r\n2a 00000053`c09beb90 00000000`759fa7cd python35!PyObject_Call+0x78\r\n2b 00000053`c09bebc0 00000000`759f6c66 python35!PyEval_GetFuncDesc+0xd5d\r\n2c 00000053`c09bec30 00000000`759f9fe8 python35!PyEval_EvalFrameEx+0x32e6\r\n2d 00000053`c09bed30 00000000`759f9ea1 python35!PyEval_GetFuncDesc+0x578\r\n2e 00000053`c09bedd0 00000000`759f6bc1 python35!PyEval_GetFuncDesc+0x431\r\n2f 00000053`c09bee30 00000000`759f9fe8 python35!PyEval_EvalFrameEx+0x3241\r\n30 00000053`c09bef30 00000000`759f9ea1 python35!PyEval_GetFuncDesc+0x578\r\n31 00000053`c09befd0 00000000`759f6bc1 python35!PyEval_GetFuncDesc+0x431\r\n32 00000053`c09bf030 00000000`759f9fe8 python35!PyEval_EvalFrameEx+0x3241\r\n33 00000053`c09bf130 00000000`759f9ea1 python35!PyEval_GetFuncDesc+0x578\r\n34 00000053`c09bf1d0 00000000`759f6bc1 python35!PyEval_GetFuncDesc+0x431\r\n35 00000053`c09bf230 00000000`759f8a9e python35!PyEval_EvalFrameEx+0x3241\r\n36 00000053`c09bf330 00000000`759fa070 python35!PyEval_EvalFrameEx+0x511e\r\n37 00000053`c09bf3d0 00000000`759f9ea1 python35!PyEval_GetFuncDesc+0x600\r\n38 00000053`c09bf470 00000000`759f6bc1 python35!PyEval_GetFuncDesc+0x431\r\n39 00000053`c09bf4d0 00000000`759f8a9e python35!PyEval_EvalFrameEx+0x3241\r\n3a 00000053`c09bf5d0 00000000`75a4423a python35!PyEval_EvalFrameEx+0x511e\r\n3b 00000053`c09bf670 00000000`75a43e85 python35!PyRun_FileExFlags+0x38a\r\n3c 00000053`c09bf6f0 00000000`75a42831 python35!PyRun_StringFlags+0xf5\r\n3d 00000053`c09bf750 00000000`758cf119 python35!PyRun_SimpleStringFlags+0x41\r\n3e 00000053`c09bf790 00000000`758cfbb3 python35!Py_hashtable_copy+0x70f9\r\n3f 00000053`c09bf7c0 00000000`1ca01264 python35!Py_Main+0x963\r\n40 00000053`c09bf8b0 00007ff9`578f13d2 python+0x1264\r\n41 00000053`c09bf8f0 00007ff9`581254e4 kernel32!BaseThreadInitThunk+0x22 [d:\\9147\\base\\win32\\client\\thread.c @ 78]\r\n42 00000053`c09bf920 00000000`00000000 ntdll!RtlUserThreadStart+0x34 [d:\\blue\\minkernel\\ntdll\\rtlstrt.c @ 1026]\r\n # Child-SP          RetAddr           Call Site\r\n00 00000053`c61bf688 00007ff9`5818e65c ntdll!ZwWaitForAlertByThreadId+0xa [d:\\blue.obj.amd64fre\\minkernel\\ntdll\\daytona\\objfre\\amd64\\usrstubs.asm @ 3590]\r\n01 00000053`c61bf690 00007ff9`554b8da8 ntdll!RtlSleepConditionVariableSRW+0xec [d:\\blue\\minkernel\\ntdll\\condition.c @ 1115]\r\n02 00000053`c61bf700 00007ff9`43158678 KERNELBASE!SleepConditionVariableSRW+0x28 [d:\\blue\\minkernel\\kernelbase\\synch.c @ 1904]\r\n03 (Inline Function) --------`-------- msvcp140!Concurrency::details::stl_condition_variable_win7::wait_for+0x14 [f:\\dd\\vctools\\crt\\crtw32\\stdcpp\\thr\\primitives.h @ 216]\r\n04 00000053`c61bf740 00007ff9`43158840 msvcp140!Concurrency::details::stl_condition_variable_win7::wait+0x18 [f:\\dd\\vctools\\crt\\crtw32\\stdcpp\\thr\\primitives.h @ 210]\r\n05 00000053`c61bf770 00007ff9`01e789e7 msvcp140!do_wait+0x4c [f:\\dd\\vctools\\crt\\crtw32\\stdcpp\\thr\\cond.c @ 77]\r\n06 (Inline Function) --------`-------- _pywrap_tensorflow!std::_Cnd_waitX+0xd [c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\thr\\xthread @ 95]\r\n07 (Inline Function) --------`-------- _pywrap_tensorflow!std::condition_variable::wait+0xd [c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\mutex @ 565]\r\n08 00000053`c61bf7f0 00007ff9`01e780f9 _pywrap_tensorflow!Eigen::EventCount::Park+0x67 [d:\\tensorflow\\tensorscripts\\src\\tensorflow\\tensorflow\\contrib\\cmake\\build\\external\\eigen_archive\\unsupported\\eigen\\cxx11\\src\\threadpool\\eventcount.h @ 208]\r\n09 00000053`c61bf840 00007ff9`01e798a0 _pywrap_tensorflow!Eigen::EventCount::CommitWait+0xc9 [d:\\tensorflow\\tensorscripts\\src\\tensorflow\\tensorflow\\contrib\\cmake\\build\\external\\eigen_archive\\unsupported\\eigen\\cxx11\\src\\threadpool\\eventcount.h @ 103]\r\n0a 00000053`c61bf880 00007ff9`01e79bc3 _pywrap_tensorflow!Eigen::NonBlockingThreadPoolTempl<tensorflow::thread::EigenEnvironment>::WaitForWork+0x180 [d:\\tensorflow\\tensorscripts\\src\\tensorflow\\tensorflow\\contrib\\cmake\\build\\external\\eigen_archive\\unsupported\\eigen\\cxx11\\src\\threadpool\\nonblockingthreadpool.h @ 233]\r\n0b 00000053`c61bf8c0 00007ff9`01e79f6e _pywrap_tensorflow!Eigen::NonBlockingThreadPoolTempl<tensorflow::thread::EigenEnvironment>::WorkerLoop+0x293 [d:\\tensorflow\\tensorscripts\\src\\tensorflow\\tensorflow\\contrib\\cmake\\build\\external\\eigen_archive\\unsupported\\eigen\\cxx11\\src\\threadpool\\nonblockingthreadpool.h @ 160]\r\n0c (Inline Function) --------`-------- _pywrap_tensorflow!std::_Func_class<void>::operator()+0x16 [c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\functional @ 279]\r\n0d (Inline Function) --------`-------- _pywrap_tensorflow!tensorflow::thread::EigenEnvironment::CreateThread::__l2::<lambda_3e5df898eaffef9b52307b4af9ee50ab>::operator()+0x2c [d:\\tensorflow\\tensorscripts\\src\\tensorflow\\tensorflow\\core\\lib\\core\\threadpool.cc @ 57]\r\n0e (Inline Function) --------`-------- _pywrap_tensorflow!std::_Invoker_functor::_Call+0x2c [c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\type_traits @ 1398]\r\n0f (Inline Function) --------`-------- _pywrap_tensorflow!std::invoke+0x2c [c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\type_traits @ 1466]\r\n10 (Inline Function) --------`-------- _pywrap_tensorflow!std::_Invoke_ret+0x2c [c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\type_traits @ 1484]\r\n11 00000053`c61bf930 00007ff9`01eace25 _pywrap_tensorflow!std::_Func_impl<<lambda_3e5df898eaffef9b52307b4af9ee50ab>,std::allocator<int>,void>::_Do_call+0x3e [c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\functional @ 212]\r\n12 (Inline Function) --------`-------- _pywrap_tensorflow!std::_Func_class<void>::operator()+0x16 [c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\functional @ 279]\r\n13 (Inline Function) --------`-------- _pywrap_tensorflow!std::_Invoker_functor::_Call+0x16 [c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\type_traits @ 1398]\r\n14 (Inline Function) --------`-------- _pywrap_tensorflow!std::invoke+0x16 [c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\type_traits @ 1466]\r\n15 (Inline Function) --------`-------- _pywrap_tensorflow!std::_LaunchPad<std::unique_ptr<std::tuple<std::function<void __cdecl(void)> >,std::default_delete<std::tuple<std::function<void __cdecl(void)> > > > >::_Execute+0x16 [c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\thr\\xthread @ 240]\r\n16 00000053`c61bf970 00007ff9`01eacab9 _pywrap_tensorflow!std::_LaunchPad<std::unique_ptr<std::tuple<std::function<void __cdecl(void)> >,std::default_delete<std::tuple<std::function<void __cdecl(void)> > > > >::_Run+0x85 [c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\thr\\xthread @ 247]\r\n17 00000053`c61bf9b0 00007ff9`42ffbe1d _pywrap_tensorflow!std::_Pad::_Call_func+0x9 [c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\thr\\xthread @ 210]\r\n18 (Inline Function) --------`-------- ucrtbase!invoke_thread_procedure+0xe [d:\\th\\minkernel\\crts\\ucrt\\src\\appcrt\\startup\\thread.cpp @ 91]\r\n19 00000053`c61bf9e0 00007ff9`578f13d2 ucrtbase!thread_start<unsigned int (__cdecl*)(void * __ptr64)>+0x5d [d:\\th\\minkernel\\crts\\ucrt\\src\\appcrt\\startup\\thread.cpp @ 115]\r\n1a 00000053`c61bfa10 00007ff9`581254e4 kernel32!BaseThreadInitThunk+0x22 [d:\\9147\\base\\win32\\client\\thread.c @ 78]\r\n1b 00000053`c61bfa40 00000000`00000000 ntdll!RtlUserThreadStart+0x34 [d:\\blue\\minkernel\\ntdll\\rtlstrt.c @ 1026]\r\n # Child-SP          RetAddr           Call Site\r\n00 00000053`c7e2f748 00007ff9`5817a192 ntdll!ZwWaitForAlertByThreadId+0xa [d:\\blue.obj.amd64fre\\minkernel\\ntdll\\daytona\\objfre\\amd64\\usrstubs.asm @ 3590]\r\n01 00000053`c7e2f750 00007ff9`55478178 ntdll!RtlSleepConditionVariableCS+0xc2 [d:\\blue\\minkernel\\ntdll\\condition.c @ 937]\r\n02 00000053`c7e2f7c0 00007ff9`04215d6e KERNELBASE!SleepConditionVariableCS+0x28 [d:\\blue\\minkernel\\kernelbase\\synch.c @ 1869]\r\n03 00000053`c7e2f7f0 00007ff9`041f94a9 _pywrap_tensorflow!gpr_cv_wait+0x11e [d:\\tensorflow\\tensorscripts\\src\\tensorflow\\tensorflow\\contrib\\cmake\\build\\grpc\\src\\grpc\\src\\core\\lib\\support\\sync_windows.c @ 103]\r\n04 00000053`c7e2f850 00007ff9`041d8fb2 _pywrap_tensorflow!grpc_pollset_work+0x179 [d:\\tensorflow\\tensorscripts\\src\\tensorflow\\tensorflow\\contrib\\cmake\\build\\grpc\\src\\grpc\\src\\core\\lib\\iomgr\\pollset_windows.c @ 182]\r\n05 00000053`c7e2f900 00007ff9`041c7cae _pywrap_tensorflow!grpc_completion_queue_next+0x1f2 [d:\\tensorflow\\tensorscripts\\src\\tensorflow\\tensorflow\\contrib\\cmake\\build\\grpc\\src\\grpc\\src\\core\\lib\\surface\\completion_queue.c @ 380]\r\n06 00000053`c7e2fa40 00007ff9`021c59e1 _pywrap_tensorflow!grpc::CompletionQueue::AsyncNextInternal+0x3e [d:\\tensorflow\\tensorscripts\\src\\tensorflow\\tensorflow\\contrib\\cmake\\build\\grpc\\src\\grpc\\src\\cpp\\common\\completion_queue.cc @ 56]\r\n07 (Inline Function) --------`-------- _pywrap_tensorflow!grpc::CompletionQueue::Next+0xa5 [d:\\tensorflow\\tensorscripts\\src\\tensorflow\\tensorflow\\contrib\\cmake\\build\\grpc\\src\\grpc\\include\\grpc++\\impl\\codegen\\completion_queue.h @ 147]\r\n08 00000053`c7e2fa90 00007ff9`01eace25 _pywrap_tensorflow!<lambda_ea64bb373946421891242c9b912b7e25>::operator()+0xc1 [d:\\tensorflow\\tensorscripts\\src\\tensorflow\\tensorflow\\core\\distributed_runtime\\rpc\\grpc_worker_cache.cc @ 38]\r\n09 (Inline Function) --------`-------- _pywrap_tensorflow!std::_Func_class<void>::operator()+0x16 [c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\functional @ 279]\r\n0a (Inline Function) --------`-------- _pywrap_tensorflow!std::_Invoker_functor::_Call+0x16 [c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\type_traits @ 1398]\r\n0b (Inline Function) --------`-------- _pywrap_tensorflow!std::invoke+0x16 [c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\type_traits @ 1466]\r\n0c (Inline Function) --------`-------- _pywrap_tensorflow!std::_LaunchPad<std::unique_ptr<std::tuple<std::function<void __cdecl(void)> >,std::default_delete<std::tuple<std::function<void __cdecl(void)> > > > >::_Execute+0x16 [c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\thr\\xthread @ 240]\r\n0d 00000053`c7e2fb00 00007ff9`01eacab9 _pywrap_tensorflow!std::_LaunchPad<std::unique_ptr<std::tuple<std::function<void __cdecl(void)> >,std::default_delete<std::tuple<std::function<void __cdecl(void)> > > > >::_Run+0x85 [c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\thr\\xthread @ 247]\r\n0e 00000053`c7e2fb40 00007ff9`42ffbe1d _pywrap_tensorflow!std::_Pad::_Call_func+0x9 [c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\thr\\xthread @ 210]\r\n0f (Inline Function) --------`-------- ucrtbase!invoke_thread_procedure+0xe [d:\\th\\minkernel\\crts\\ucrt\\src\\appcrt\\startup\\thread.cpp @ 91]\r\n10 00000053`c7e2fb70 00007ff9`578f13d2 ucrtbase!thread_start<unsigned int (__cdecl*)(void * __ptr64)>+0x5d [d:\\th\\minkernel\\crts\\ucrt\\src\\appcrt\\startup\\thread.cpp @ 115]\r\n11 00000053`c7e2fba0 00007ff9`581254e4 kernel32!BaseThreadInitThunk+0x22 [d:\\9147\\base\\win32\\client\\thread.c @ 78]\r\n12 00000053`c7e2fbd0 00000000`00000000 ntdll!RtlUserThreadStart+0x34 [d:\\blue\\minkernel\\ntdll\\rtlstrt.c @ 1026]\r\n # Child-SP          RetAddr           Call Site\r\n00 00000053`c801f958 00007ff9`5818e65c ntdll!ZwWaitForAlertByThreadId+0xa [d:\\blue.obj.amd64fre\\minkernel\\ntdll\\daytona\\objfre\\amd64\\usrstubs.asm @ 3590]\r\n01 00000053`c801f960 00007ff9`554b8da8 ntdll!RtlSleepConditionVariableSRW+0xec [d:\\blue\\minkernel\\ntdll\\condition.c @ 1115]\r\n02 00000053`c801f9d0 00007ff9`43158678 KERNELBASE!SleepConditionVariableSRW+0x28 [d:\\blue\\minkernel\\kernelbase\\synch.c @ 1904]\r\n03 (Inline Function) --------`-------- msvcp140!Concurrency::details::stl_condition_variable_win7::wait_for+0x14 [f:\\dd\\vctools\\crt\\crtw32\\stdcpp\\thr\\primitives.h @ 216]\r\n04 00000053`c801fa10 00007ff9`43158840 msvcp140!Concurrency::details::stl_condition_variable_win7::wait+0x18 [f:\\dd\\vctools\\crt\\crtw32\\stdcpp\\thr\\primitives.h @ 210]\r\n05 00000053`c801fa40 00007ff9`01e789e7 msvcp140!do_wait+0x4c [f:\\dd\\vctools\\crt\\crtw32\\stdcpp\\thr\\cond.c @ 77]\r\n06 (Inline Function) --------`-------- _pywrap_tensorflow!std::_Cnd_waitX+0xd [c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\thr\\xthread @ 95]\r\n07 (Inline Function) --------`-------- _pywrap_tensorflow!std::condition_variable::wait+0xd [c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\mutex @ 565]\r\n08 00000053`c801fac0 00007ff9`01e780f9 _pywrap_tensorflow!Eigen::EventCount::Park+0x67 [d:\\tensorflow\\tensorscripts\\src\\tensorflow\\tensorflow\\contrib\\cmake\\build\\external\\eigen_archive\\unsupported\\eigen\\cxx11\\src\\threadpool\\eventcount.h @ 208]\r\n09 00000053`c801fb10 00007ff9`01e798a0 _pywrap_tensorflow!Eigen::EventCount::CommitWait+0xc9 [d:\\tensorflow\\tensorscripts\\src\\tensorflow\\tensorflow\\contrib\\cmake\\build\\external\\eigen_archive\\unsupported\\eigen\\cxx11\\src\\threadpool\\eventcount.h @ 103]\r\n0a 00000053`c801fb50 00007ff9`01e79bc3 _pywrap_tensorflow!Eigen::NonBlockingThreadPoolTempl<tensorflow::thread::EigenEnvironment>::WaitForWork+0x180 [d:\\tensorflow\\tensorscripts\\src\\tensorflow\\tensorflow\\contrib\\cmake\\build\\external\\eigen_archive\\unsupported\\eigen\\cxx11\\src\\threadpool\\nonblockingthreadpool.h @ 233]\r\n0b 00000053`c801fb90 00007ff9`01e79f6e _pywrap_tensorflow!Eigen::NonBlockingThreadPoolTempl<tensorflow::thread::EigenEnvironment>::WorkerLoop+0x293 [d:\\tensorflow\\tensorscripts\\src\\tensorflow\\tensorflow\\contrib\\cmake\\build\\external\\eigen_archive\\unsupported\\eigen\\cxx11\\src\\threadpool\\nonblockingthreadpool.h @ 160]\r\n0c (Inline Function) --------`-------- _pywrap_tensorflow!std::_Func_class<void>::operator()+0x16 [c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\functional @ 279]\r\n0d (Inline Function) --------`-------- _pywrap_tensorflow!tensorflow::thread::EigenEnvironment::CreateThread::__l2::<lambda_3e5df898eaffef9b52307b4af9ee50ab>::operator()+0x2c [d:\\tensorflow\\tensorscripts\\src\\tensorflow\\tensorflow\\core\\lib\\core\\threadpool.cc @ 57]\r\n0e (Inline Function) --------`-------- _pywrap_tensorflow!std::_Invoker_functor::_Call+0x2c [c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\type_traits @ 1398]\r\n0f (Inline Function) --------`-------- _pywrap_tensorflow!std::invoke+0x2c [c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\type_traits @ 1466]\r\n10 (Inline Function) --------`-------- _pywrap_tensorflow!std::_Invoke_ret+0x2c [c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\type_traits @ 1484]\r\n11 00000053`c801fc00 00007ff9`01eace25 _pywrap_tensorflow!std::_Func_impl<<lambda_3e5df898eaffef9b52307b4af9ee50ab>,std::allocator<int>,void>::_Do_call+0x3e [c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\functional @ 212]\r\n12 (Inline Function) --------`-------- _pywrap_tensorflow!std::_Func_class<void>::operator()+0x16 [c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\functional @ 279]\r\n13 (Inline Function) --------`-------- _pywrap_tensorflow!std::_Invoker_functor::_Call+0x16 [c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\type_traits @ 1398]\r\n14 (Inline Function) --------`-------- _pywrap_tensorflow!std::invoke+0x16 [c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\type_traits @ 1466]\r\n15 (Inline Function) --------`-------- _pywrap_tensorflow!std::_LaunchPad<std::unique_ptr<std::tuple<std::function<void __cdecl(void)> >,std::default_delete<std::tuple<std::function<void __cdecl(void)> > > > >::_Execute+0x16 [c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\thr\\xthread @ 240]\r\n16 00000053`c801fc40 00007ff9`01eacab9 _pywrap_tensorflow!std::_LaunchPad<std::unique_ptr<std::tuple<std::function<void __cdecl(void)> >,std::default_delete<std::tuple<std::function<void __cdecl(void)> > > > >::_Run+0x85 [c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\thr\\xthread @ 247]\r\n17 00000053`c801fc80 00007ff9`42ffbe1d _pywrap_tensorflow!std::_Pad::_Call_func+0x9 [c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\thr\\xthread @ 210]\r\n18 (Inline Function) --------`-------- ucrtbase!invoke_thread_procedure+0xe [d:\\th\\minkernel\\crts\\ucrt\\src\\appcrt\\startup\\thread.cpp @ 91]\r\n19 00000053`c801fcb0 00007ff9`578f13d2 ucrtbase!thread_start<unsigned int (__cdecl*)(void * __ptr64)>+0x5d [d:\\th\\minkernel\\crts\\ucrt\\src\\appcrt\\startup\\thread.cpp @ 115]\r\n1a 00000053`c801fce0 00007ff9`581254e4 kernel32!BaseThreadInitThunk+0x22 [d:\\9147\\base\\win32\\client\\thread.c @ 78]\r\n1b 00000053`c801fd10 00000000`00000000 ntdll!RtlUserThreadStart+0x34 [d:\\blue\\minkernel\\ntdll\\rtlstrt.c @ 1026]\r\n # Child-SP          RetAddr           Call Site\r\n00 00000053`c820f3e8 00007ff9`5817a192 ntdll!ZwWaitForAlertByThreadId+0xa [d:\\blue.obj.amd64fre\\minkernel\\ntdll\\daytona\\objfre\\amd64\\usrstubs.asm @ 3590]\r\n01 00000053`c820f3f0 00007ff9`55478178 ntdll!RtlSleepConditionVariableCS+0xc2 [d:\\blue\\minkernel\\ntdll\\condition.c @ 937]\r\n02 00000053`c820f460 00007ff9`04215d6e KERNELBASE!SleepConditionVariableCS+0x28 [d:\\blue\\minkernel\\kernelbase\\synch.c @ 1869]\r\n03 00000053`c820f490 00007ff9`041f94a9 _pywrap_tensorflow!gpr_cv_wait+0x11e [d:\\tensorflow\\tensorscripts\\src\\tensorflow\\tensorflow\\contrib\\cmake\\build\\grpc\\src\\grpc\\src\\core\\lib\\support\\sync_windows.c @ 103]\r\n04 00000053`c820f4f0 00007ff9`041d8fb2 _pywrap_tensorflow!grpc_pollset_work+0x179 [d:\\tensorflow\\tensorscripts\\src\\tensorflow\\tensorflow\\contrib\\cmake\\build\\grpc\\src\\grpc\\src\\core\\lib\\iomgr\\pollset_windows.c @ 182]\r\n05 00000053`c820f5a0 00007ff9`041c7cae _pywrap_tensorflow!grpc_completion_queue_next+0x1f2 [d:\\tensorflow\\tensorscripts\\src\\tensorflow\\tensorflow\\contrib\\cmake\\build\\grpc\\src\\grpc\\src\\core\\lib\\surface\\completion_queue.c @ 380]\r\n06 00000053`c820f6e0 00007ff9`0219a8da _pywrap_tensorflow!grpc::CompletionQueue::AsyncNextInternal+0x3e [d:\\tensorflow\\tensorscripts\\src\\tensorflow\\tensorflow\\contrib\\cmake\\build\\grpc\\src\\grpc\\src\\cpp\\common\\completion_queue.cc @ 56]\r\n07 (Inline Function) --------`-------- _pywrap_tensorflow!grpc::CompletionQueue::Next+0xe1 [d:\\tensorflow\\tensorscripts\\src\\tensorflow\\tensorflow\\contrib\\cmake\\build\\grpc\\src\\grpc\\include\\grpc++\\impl\\codegen\\completion_queue.h @ 147]\r\n08 00000053`c820f730 00007ff9`01eace25 _pywrap_tensorflow!tensorflow::GrpcMasterService::HandleRPCsLoop+0x56a [d:\\tensorflow\\tensorscripts\\src\\tensorflow\\tensorflow\\core\\distributed_runtime\\rpc\\grpc_master_service.cc @ 116]\r\n09 (Inline Function) --------`-------- _pywrap_tensorflow!std::_Func_class<void>::operator()+0x16 [c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\functional @ 279]\r\n0a (Inline Function) --------`-------- _pywrap_tensorflow!std::_Invoker_functor::_Call+0x16 [c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\type_traits @ 1398]\r\n0b (Inline Function) --------`-------- _pywrap_tensorflow!std::invoke+0x16 [c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\type_traits @ 1466]\r\n0c (Inline Function) --------`-------- _pywrap_tensorflow!std::_LaunchPad<std::unique_ptr<std::tuple<std::function<void __cdecl(void)> >,std::default_delete<std::tuple<std::function<void __cdecl(void)> > > > >::_Execute+0x16 [c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\thr\\xthread @ 240]\r\n0d 00000053`c820f840 00007ff9`01eacab9 _pywrap_tensorflow!std::_LaunchPad<std::unique_ptr<std::tuple<std::function<void __cdecl(void)> >,std::default_delete<std::tuple<std::function<void __cdecl(void)> > > > >::_Run+0x85 [c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\thr\\xthread @ 247]\r\n0e 00000053`c820f880 00007ff9`42ffbe1d _pywrap_tensorflow!std::_Pad::_Call_func+0x9 [c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\thr\\xthread @ 210]\r\n0f (Inline Function) --------`-------- ucrtbase!invoke_thread_procedure+0xe [d:\\th\\minkernel\\crts\\ucrt\\src\\appcrt\\startup\\thread.cpp @ 91]\r\n10 00000053`c820f8b0 00007ff9`578f13d2 ucrtbase!thread_start<unsigned int (__cdecl*)(void * __ptr64)>+0x5d [d:\\th\\minkernel\\crts\\ucrt\\src\\appcrt\\startup\\thread.cpp @ 115]\r\n11 00000053`c820f8e0 00007ff9`581254e4 kernel32!BaseThreadInitThunk+0x22 [d:\\9147\\base\\win32\\client\\thread.c @ 78]\r\n12 00000053`c820f910 00000000`00000000 ntdll!RtlUserThreadStart+0x34 [d:\\blue\\minkernel\\ntdll\\rtlstrt.c @ 1026]\r\n # Child-SP          RetAddr           Call Site\r\n00 00000053`c83ff9e8 00007ff9`5817a192 ntdll!ZwWaitForAlertByThreadId+0xa [d:\\blue.obj.amd64fre\\minkernel\\ntdll\\daytona\\objfre\\amd64\\usrstubs.asm @ 3590]\r\n01 00000053`c83ff9f0 00007ff9`55478178 ntdll!RtlSleepConditionVariableCS+0xc2 [d:\\blue\\minkernel\\ntdll\\condition.c @ 937]\r\n02 00000053`c83ffa60 00007ff9`04215d6e KERNELBASE!SleepConditionVariableCS+0x28 [d:\\blue\\minkernel\\kernelbase\\synch.c @ 1869]\r\n03 00000053`c83ffa90 00007ff9`041f94a9 _pywrap_tensorflow!gpr_cv_wait+0x11e [d:\\tensorflow\\tensorscripts\\src\\tensorflow\\tensorflow\\contrib\\cmake\\build\\grpc\\src\\grpc\\src\\core\\lib\\support\\sync_windows.c @ 103]\r\n04 00000053`c83ffaf0 00007ff9`041d8fb2 _pywrap_tensorflow!grpc_pollset_work+0x179 [d:\\tensorflow\\tensorscripts\\src\\tensorflow\\tensorflow\\contrib\\cmake\\build\\grpc\\src\\grpc\\src\\core\\lib\\iomgr\\pollset_windows.c @ 182]\r\n05 00000053`c83ffba0 00007ff9`041c7cae _pywrap_tensorflow!grpc_completion_queue_next+0x1f2 [d:\\tensorflow\\tensorscripts\\src\\tensorflow\\tensorflow\\contrib\\cmake\\build\\grpc\\src\\grpc\\src\\core\\lib\\surface\\completion_queue.c @ 380]\r\n06 00000053`c83ffce0 00007ff9`021d189b _pywrap_tensorflow!grpc::CompletionQueue::AsyncNextInternal+0x3e [d:\\tensorflow\\tensorscripts\\src\\tensorflow\\tensorflow\\contrib\\cmake\\build\\grpc\\src\\grpc\\src\\cpp\\common\\completion_queue.cc @ 56]\r\n07 (Inline Function) --------`-------- _pywrap_tensorflow!grpc::CompletionQueue::Next+0xed [d:\\tensorflow\\tensorscripts\\src\\tensorflow\\tensorflow\\contrib\\cmake\\build\\grpc\\src\\grpc\\include\\grpc++\\impl\\codegen\\completion_queue.h @ 147]\r\n08 00000053`c83ffd30 00007ff9`01eace25 _pywrap_tensorflow!tensorflow::`anonymous namespace'::GrpcWorkerService::HandleRPCsLoop+0x6cb [d:\\tensorflow\\tensorscripts\\src\\tensorflow\\tensorflow\\core\\distributed_runtime\\rpc\\grpc_worker_service.cc @ 145]\r\n09 (Inline Function) --------`-------- _pywrap_tensorflow!std::_Func_class<void>::operator()+0x16 [c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\functional @ 279]\r\n0a (Inline Function) --------`-------- _pywrap_tensorflow!std::_Invoker_functor::_Call+0x16 [c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\type_traits @ 1398]\r\n0b (Inline Function) --------`-------- _pywrap_tensorflow!std::invoke+0x16 [c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\type_traits @ 1466]\r\n0c (Inline Function) --------`-------- _pywrap_tensorflow!std::_LaunchPad<std::unique_ptr<std::tuple<std::function<void __cdecl(void)> >,std::default_delete<std::tuple<std::function<void __cdecl(void)> > > > >::_Execute+0x16 [c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\thr\\xthread @ 240]\r\n0d 00000053`c83ffe70 00007ff9`01eacab9 _pywrap_tensorflow!std::_LaunchPad<std::unique_ptr<std::tuple<std::function<void __cdecl(void)> >,std::default_delete<std::tuple<std::function<void __cdecl(void)> > > > >::_Run+0x85 [c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\thr\\xthread @ 247]\r\n0e 00000053`c83ffeb0 00007ff9`42ffbe1d _pywrap_tensorflow!std::_Pad::_Call_func+0x9 [c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\thr\\xthread @ 210]\r\n0f (Inline Function) --------`-------- ucrtbase!invoke_thread_procedure+0xe [d:\\th\\minkernel\\crts\\ucrt\\src\\appcrt\\startup\\thread.cpp @ 91]\r\n10 00000053`c83ffee0 00007ff9`578f13d2 ucrtbase!thread_start<unsigned int (__cdecl*)(void * __ptr64)>+0x5d [d:\\th\\minkernel\\crts\\ucrt\\src\\appcrt\\startup\\thread.cpp @ 115]\r\n11 00000053`c83fff10 00007ff9`581254e4 kernel32!BaseThreadInitThunk+0x22 [d:\\9147\\base\\win32\\client\\thread.c @ 78]\r\n12 00000053`c83fff40 00000000`00000000 ntdll!RtlUserThreadStart+0x34 [d:\\blue\\minkernel\\ntdll\\rtlstrt.c @ 1026]\r\n # Child-SP          RetAddr           Call Site\r\n00 00000053`c8e5e408 00007ff9`55441118 ntdll!ZwWaitForSingleObject+0xa [d:\\blue.obj.amd64fre\\minkernel\\ntdll\\daytona\\objfre\\amd64\\usrstubs.asm @ 198]\r\n01 00000053`c8e5e410 00000000`75a4e1bc KERNELBASE!WaitForSingleObjectEx+0x94 [d:\\blue\\minkernel\\kernelbase\\synch.c @ 1301]\r\n02 00000053`c8e5e4b0 00000000`75a4e56e python35!PyThread_init_thread+0x31c\r\n03 00000053`c8e5e4f0 00000000`758f7df7 python35!PyThread_acquire_lock_timed+0x6e\r\n04 00000053`c8e5e520 00000000`758f8099 python35!PyOS_SigintEvent+0x917\r\n05 00000053`c8e5e570 00000000`7597e420 python35!PyOS_SigintEvent+0xbb9\r\n06 00000053`c8e5e5a0 00000000`759f9e20 python35!PyCFunction_Call+0x30\r\n07 00000053`c8e5e5d0 00000000`759f6bc1 python35!PyEval_GetFuncDesc+0x3b0\r\n08 00000053`c8e5e630 00000000`759f8a9e python35!PyEval_EvalFrameEx+0x3241\r\n09 00000053`c8e5e730 00000000`759fa070 python35!PyEval_EvalFrameEx+0x511e\r\n0a 00000053`c8e5e7d0 00000000`759f9ea1 python35!PyEval_GetFuncDesc+0x600\r\n0b 00000053`c8e5e870 00000000`759f6bc1 python35!PyEval_GetFuncDesc+0x431\r\n0c 00000053`c8e5e8d0 00000000`759f8a9e python35!PyEval_EvalFrameEx+0x3241\r\n0d 00000053`c8e5e9d0 00000000`759fa070 python35!PyEval_EvalFrameEx+0x511e\r\n0e 00000053`c8e5ea70 00000000`759f9ea1 python35!PyEval_GetFuncDesc+0x600\r\n0f 00000053`c8e5eb10 00000000`759f6bc1 python35!PyEval_GetFuncDesc+0x431\r\n10 00000053`c8e5eb70 00000000`759f8a9e python35!PyEval_EvalFrameEx+0x3241\r\n11 00000053`c8e5ec70 00000000`759fa070 python35!PyEval_EvalFrameEx+0x511e\r\n12 00000053`c8e5ed10 00000000`759f9ea1 python35!PyEval_GetFuncDesc+0x600\r\n13 00000053`c8e5edb0 00000000`759f6bc1 python35!PyEval_GetFuncDesc+0x431\r\n14 00000053`c8e5ee10 00000000`759f8a9e python35!PyEval_EvalFrameEx+0x3241\r\n15 00000053`c8e5ef10 00000000`75968751 python35!PyEval_EvalFrameEx+0x511e\r\n16 00000053`c8e5efb0 00000000`75936058 python35!PyFunction_SetAnnotations+0xb71\r\n17 00000053`c8e5f060 00000000`759fa7cd python35!PyObject_Call+0x78\r\n18 00000053`c8e5f090 00000000`759f6c66 python35!PyEval_GetFuncDesc+0xd5d\r\n19 00000053`c8e5f100 00000000`759f9fe8 python35!PyEval_EvalFrameEx+0x32e6\r\n1a 00000053`c8e5f200 00000000`759f9ea1 python35!PyEval_GetFuncDesc+0x578\r\n1b 00000053`c8e5f2a0 00000000`759f6bc1 python35!PyEval_GetFuncDesc+0x431\r\n1c 00000053`c8e5f300 00000000`759f9fe8 python35!PyEval_EvalFrameEx+0x3241\r\n1d 00000053`c8e5f400 00000000`759f9ea1 python35!PyEval_GetFuncDesc+0x578\r\n1e 00000053`c8e5f4a0 00000000`759f6bc1 python35!PyEval_GetFuncDesc+0x431\r\n1f 00000053`c8e5f500 00000000`759f8a9e python35!PyEval_EvalFrameEx+0x3241\r\n20 00000053`c8e5f600 00000000`75968751 python35!PyEval_EvalFrameEx+0x511e\r\n21 00000053`c8e5f6a0 00000000`75936058 python35!PyFunction_SetAnnotations+0xb71\r\n22 00000053`c8e5f750 00000000`7594d82d python35!PyObject_Call+0x78\r\n23 00000053`c8e5f780 00000000`75936058 python35!PyMethod_New+0xa9d\r\n24 00000053`c8e5f7c0 00000000`759f99ec python35!PyObject_Call+0x78\r\n25 00000053`c8e5f7f0 00000000`758f9193 python35!PyEval_CallObjectWithKeywords+0xcc\r\n26 00000053`c8e5f820 00000000`75a4e352 python35!PyOS_SigintEvent+0x1cb3\r\n27 00000053`c8e5f860 00007ff9`42ffbe1d python35!PyThread_init_thread+0x4b2\r\n28 (Inline Function) --------`-------- ucrtbase!invoke_thread_procedure+0xe [d:\\th\\minkernel\\crts\\ucrt\\src\\appcrt\\startup\\thread.cpp @ 91]\r\n29 00000053`c8e5f890 00007ff9`578f13d2 ucrtbase!thread_start<unsigned int (__cdecl*)(void * __ptr64)>+0x5d [d:\\th\\minkernel\\crts\\ucrt\\src\\appcrt\\startup\\thread.cpp @ 115]\r\n2a 00000053`c8e5f8c0 00007ff9`581254e4 kernel32!BaseThreadInitThunk+0x22 [d:\\9147\\base\\win32\\client\\thread.c @ 78]\r\n2b 00000053`c8e5f8f0 00000000`00000000 ntdll!RtlUserThreadStart+0x34 [d:\\blue\\minkernel\\ntdll\\rtlstrt.c @ 1026]\r\n # Child-SP          RetAddr           Call Site\r\n00 00000053`c942f688 00007ff9`5818e65c ntdll!ZwWaitForAlertByThreadId+0xa [d:\\blue.obj.amd64fre\\minkernel\\ntdll\\daytona\\objfre\\amd64\\usrstubs.asm @ 3590]\r\n01 00000053`c942f690 00007ff9`554b8da8 ntdll!RtlSleepConditionVariableSRW+0xec [d:\\blue\\minkernel\\ntdll\\condition.c @ 1115]\r\n02 00000053`c942f700 00007ff9`43158678 KERNELBASE!SleepConditionVariableSRW+0x28 [d:\\blue\\minkernel\\kernelbase\\synch.c @ 1904]\r\n03 (Inline Function) --------`-------- msvcp140!Concurrency::details::stl_condition_variable_win7::wait_for+0x14 [f:\\dd\\vctools\\crt\\crtw32\\stdcpp\\thr\\primitives.h @ 216]\r\n04 00000053`c942f740 00007ff9`43158840 msvcp140!Concurrency::details::stl_condition_variable_win7::wait+0x18 [f:\\dd\\vctools\\crt\\crtw32\\stdcpp\\thr\\primitives.h @ 210]\r\n05 00000053`c942f770 00007ff9`01e789e7 msvcp140!do_wait+0x4c [f:\\dd\\vctools\\crt\\crtw32\\stdcpp\\thr\\cond.c @ 77]\r\n06 (Inline Function) --------`-------- _pywrap_tensorflow!std::_Cnd_waitX+0xd [c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\thr\\xthread @ 95]\r\n07 (Inline Function) --------`-------- _pywrap_tensorflow!std::condition_variable::wait+0xd [c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\mutex @ 565]\r\n08 00000053`c942f7f0 00007ff9`01e780f9 _pywrap_tensorflow!Eigen::EventCount::Park+0x67 [d:\\tensorflow\\tensorscripts\\src\\tensorflow\\tensorflow\\contrib\\cmake\\build\\external\\eigen_archive\\unsupported\\eigen\\cxx11\\src\\threadpool\\eventcount.h @ 208]\r\n09 00000053`c942f840 00007ff9`01e798a0 _pywrap_tensorflow!Eigen::EventCount::CommitWait+0xc9 [d:\\tensorflow\\tensorscripts\\src\\tensorflow\\tensorflow\\contrib\\cmake\\build\\external\\eigen_archive\\unsupported\\eigen\\cxx11\\src\\threadpool\\eventcount.h @ 103]\r\n0a 00000053`c942f880 00007ff9`01e79bc3 _pywrap_tensorflow!Eigen::NonBlockingThreadPoolTempl<tensorflow::thread::EigenEnvironment>::WaitForWork+0x180 [d:\\tensorflow\\tensorscripts\\src\\tensorflow\\tensorflow\\contrib\\cmake\\build\\external\\eigen_archive\\unsupported\\eigen\\cxx11\\src\\threadpool\\nonblockingthreadpool.h @ 233]\r\n0b 00000053`c942f8c0 00007ff9`01e79f6e _pywrap_tensorflow!Eigen::NonBlockingThreadPoolTempl<tensorflow::thread::EigenEnvironment>::WorkerLoop+0x293 [d:\\tensorflow\\tensorscripts\\src\\tensorflow\\tensorflow\\contrib\\cmake\\build\\external\\eigen_archive\\unsupported\\eigen\\cxx11\\src\\threadpool\\nonblockingthreadpool.h @ 160]\r\n0c (Inline Function) --------`-------- _pywrap_tensorflow!std::_Func_class<void>::operator()+0x16 [c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\functional @ 279]\r\n0d (Inline Function) --------`-------- _pywrap_tensorflow!tensorflow::thread::EigenEnvironment::CreateThread::__l2::<lambda_3e5df898eaffef9b52307b4af9ee50ab>::operator()+0x2c [d:\\tensorflow\\tensorscripts\\src\\tensorflow\\tensorflow\\core\\lib\\core\\threadpool.cc @ 57]\r\n0e (Inline Function) --------`-------- _pywrap_tensorflow!std::_Invoker_functor::_Call+0x2c [c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\type_traits @ 1398]\r\n0f (Inline Function) --------`-------- _pywrap_tensorflow!std::invoke+0x2c [c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\type_traits @ 1466]\r\n10 (Inline Function) --------`-------- _pywrap_tensorflow!std::_Invoke_ret+0x2c [c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\type_traits @ 1484]\r\n11 00000053`c942f930 00007ff9`01eace25 _pywrap_tensorflow!std::_Func_impl<<lambda_3e5df898eaffef9b52307b4af9ee50ab>,std::allocator<int>,void>::_Do_call+0x3e [c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\functional @ 212]\r\n12 (Inline Function) --------`-------- _pywrap_tensorflow!std::_Func_class<void>::operator()+0x16 [c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\functional @ 279]\r\n13 (Inline Function) --------`-------- _pywrap_tensorflow!std::_Invoker_functor::_Call+0x16 [c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\type_traits @ 1398]\r\n14 (Inline Function) --------`-------- _pywrap_tensorflow!std::invoke+0x16 [c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\type_traits @ 1466]\r\n15 (Inline Function) --------`-------- _pywrap_tensorflow!std::_LaunchPad<std::unique_ptr<std::tuple<std::function<void __cdecl(void)> >,std::default_delete<std::tuple<std::function<void __cdecl(void)> > > > >::_Execute+0x16 [c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\thr\\xthread @ 240]\r\n16 00000053`c942f970 00007ff9`01eacab9 _pywrap_tensorflow!std::_LaunchPad<std::unique_ptr<std::tuple<std::function<void __cdecl(void)> >,std::default_delete<std::tuple<std::function<void __cdecl(void)> > > > >::_Run+0x85 [c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\thr\\xthread @ 247]\r\n17 00000053`c942f9b0 00007ff9`42ffbe1d _pywrap_tensorflow!std::_Pad::_Call_func+0x9 [c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\thr\\xthread @ 210]\r\n18 (Inline Function) --------`-------- ucrtbase!invoke_thread_procedure+0xe [d:\\th\\minkernel\\crts\\ucrt\\src\\appcrt\\startup\\thread.cpp @ 91]\r\n19 00000053`c942f9e0 00007ff9`578f13d2 ucrtbase!thread_start<unsigned int (__cdecl*)(void * __ptr64)>+0x5d [d:\\th\\minkernel\\crts\\ucrt\\src\\appcrt\\startup\\thread.cpp @ 115]\r\n1a 00000053`c942fa10 00007ff9`581254e4 kernel32!BaseThreadInitThunk+0x22 [d:\\9147\\base\\win32\\client\\thread.c @ 78]\r\n1b 00000053`c942fa40 00000000`00000000 ntdll!RtlUserThreadStart+0x34 [d:\\blue\\minkernel\\ntdll\\rtlstrt.c @ 1026]\r\n # Child-SP          RetAddr           Call Site\r\n00 00000053`c8c6f5b8 00007ff9`5818e65c ntdll!ZwWaitForAlertByThreadId+0xa [d:\\blue.obj.amd64fre\\minkernel\\ntdll\\daytona\\objfre\\amd64\\usrstubs.asm @ 3590]\r\n01 00000053`c8c6f5c0 00007ff9`554b8da8 ntdll!RtlSleepConditionVariableSRW+0xec [d:\\blue\\minkernel\\ntdll\\condition.c @ 1115]\r\n02 00000053`c8c6f630 00007ff9`43158678 KERNELBASE!SleepConditionVariableSRW+0x28 [d:\\blue\\minkernel\\kernelbase\\synch.c @ 1904]\r\n03 (Inline Function) --------`-------- msvcp140!Concurrency::details::stl_condition_variable_win7::wait_for+0x14 [f:\\dd\\vctools\\crt\\crtw32\\stdcpp\\thr\\primitives.h @ 216]\r\n04 00000053`c8c6f670 00007ff9`43158840 msvcp140!Concurrency::details::stl_condition_variable_win7::wait+0x18 [f:\\dd\\vctools\\crt\\crtw32\\stdcpp\\thr\\primitives.h @ 210]\r\n05 00000053`c8c6f6a0 00007ff9`021827be msvcp140!do_wait+0x4c [f:\\dd\\vctools\\crt\\crtw32\\stdcpp\\thr\\cond.c @ 77]\r\n06 (Inline Function) --------`-------- _pywrap_tensorflow!std::_Cnd_waitX+0xe [c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\thr\\xthread @ 95]\r\n07 (Inline Function) --------`-------- _pywrap_tensorflow!std::condition_variable::wait+0xe [c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\mutex @ 565]\r\n08 (Inline Function) --------`-------- _pywrap_tensorflow!tensorflow::BlockingCounter::Wait+0x6e [d:\\tensorflow\\tensorscripts\\src\\tensorflow\\tensorflow\\core\\lib\\core\\blocking_counter.h @ 53]\r\n09 00000053`c8c6f720 00007ff9`02181c62 _pywrap_tensorflow!tensorflow::MasterSession::ReffedClientGraph::RetrieveLogs+0x1fe [d:\\tensorflow\\tensorscripts\\src\\tensorflow\\tensorflow\\core\\distributed_runtime\\master_session.cc @ 168]\r\n0a 00000053`c8c6f950 00007ff9`02180280 _pywrap_tensorflow!tensorflow::MasterSession::ReffedClientGraph::ProcessStats+0x62 [d:\\tensorflow\\tensorscripts\\src\\tensorflow\\tensorflow\\core\\distributed_runtime\\master_session.cc @ 741]\r\n0b 00000053`c8c6f9f0 00007ff9`021829a3 _pywrap_tensorflow!tensorflow::MasterSession::DoRunWithLocalExecution+0x420 [d:\\tensorflow\\tensorscripts\\src\\tensorflow\\tensorflow\\core\\distributed_runtime\\master_session.cc @ 1370]\r\n0c 00000053`c8c6fc30 00007ff9`0216fabb _pywrap_tensorflow!tensorflow::MasterSession::Run+0xc3 [d:\\tensorflow\\tensorscripts\\src\\tensorflow\\tensorflow\\core\\distributed_runtime\\master_session.cc @ 1161]\r\n0d 00000053`c8c6fca0 00007ff9`01eace25 _pywrap_tensorflow!<lambda_81a3b772d3ac2aa00a42b8da5cebc5eb>::operator()+0x3b [d:\\tensorflow\\tensorscripts\\src\\tensorflow\\tensorflow\\core\\distributed_runtime\\master.cc @ 325]\r\n0e (Inline Function) --------`-------- _pywrap_tensorflow!std::_Func_class<void>::operator()+0x16 [c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\functional @ 279]\r\n0f (Inline Function) --------`-------- _pywrap_tensorflow!std::_Invoker_functor::_Call+0x16 [c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\type_traits @ 1398]\r\n10 (Inline Function) --------`-------- _pywrap_tensorflow!std::invoke+0x16 [c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\type_traits @ 1466]\r\n11 (Inline Function) --------`-------- _pywrap_tensorflow!std::_LaunchPad<std::unique_ptr<std::tuple<std::function<void __cdecl(void)> >,std::default_delete<std::tuple<std::function<void __cdecl(void)> > > > >::_Execute+0x16 [c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\thr\\xthread @ 240]\r\n12 00000053`c8c6fd00 00007ff9`01eacab9 _pywrap_tensorflow!std::_LaunchPad<std::unique_ptr<std::tuple<std::function<void __cdecl(void)> >,std::default_delete<std::tuple<std::function<void __cdecl(void)> > > > >::_Run+0x85 [c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\thr\\xthread @ 247]\r\n13 00000053`c8c6fd40 00007ff9`42ffbe1d _pywrap_tensorflow!std::_Pad::_Call_func+0x9 [c:\\program files (x86)\\microsoft visual studio 14.0\\vc\\include\\thr\\xthread @ 210]\r\n14 (Inline Function) --------`-------- ucrtbase!invoke_thread_procedure+0xe [d:\\th\\minkernel\\crts\\ucrt\\src\\appcrt\\startup\\thread.cpp @ 91]\r\n15 00000053`c8c6fd70 00007ff9`578f13d2 ucrtbase!thread_start<unsigned int (__cdecl*)(void * __ptr64)>+0x5d [d:\\th\\minkernel\\crts\\ucrt\\src\\appcrt\\startup\\thread.cpp @ 115]\r\n16 00000053`c8c6fda0 00007ff9`581254e4 kernel32!BaseThreadInitThunk+0x22 [d:\\9147\\base\\win32\\client\\thread.c @ 78]\r\n17 00000053`c8c6fdd0 00000000`00000000 ntdll!RtlUserThreadStart+0x34 [d:\\blue\\minkernel\\ntdll\\rtlstrt.c @ 1026]\r\n```", "Something weird is that many workers ran into session timeout just before ending. For example, one cluster has 800 worker processes, after 127 workers successfully ended training and no timeout error occurred, all other workers started to ran into timeout and no worker could successfully finish even one step. After master worker finished reading data and started to save checkpoint, it will hang forever and master worker memory usage is about 2G.\r\nSomething important information:\r\n1) when building up cluster, each worker will only see all parameter servers and is not aware of all other workers, this could avoiding establishing too many tcp connections between workers\r\n2) all non-master workers will wait for exit signal variable using the same session for training when they finished processing their data. \r\n\r\nMy guess is parameter server is something wrong and can not response any more, so training will timeout and saver will hang forever without any timeout provided. Also 127 is very interesting, could be any 128 limiting?", "@mrry Looks like all the threads in that stack trace are waiting, so presumably the problem is elsewhere.  Do you have recommendations for what extra information to get?", "@girving @mrry  I changed my script to write checkpoint to hdfs with sharded=True, and found one of the parameter server failed to output checkpoint, so I am pretty sure worker timeout and saver stuck were caused by this one parameter server.here is the stack:\r\n[stack.txt](https://github.com/tensorflow/tensorflow/files/768200/stack.txt)\r\n", "@girving @mrry hey guys, are you taking care of this issue? if you have no time, please give some advice and i will try my best to debug it.", "@fesun Thanks for sending over the thread stacks. Unfortunately, there doesn't seem to be anything informative in the parameter server stack... all threads appear to be blocked waiting for more work (or in `tf.Server.join()`).\r\n\r\nThe most important observation seems to be that creating a `tf.train.Saver` with `sharded=True` is a more stable configuration than `sharded=False`, especially when the total parameter size is large. You mentioned that you saw a failure when writing with `sharded=True` to HDFS, so it's possible that there's a bug in the HDFS layer, and it might be worth instrumenting that code to see if an unhandled failure is occurring. Does \"failed to output checkpoint\" mean \"`saver.save()` returned with no exception and yet it didn't write a file it should have\"?\r\n\r\n[As an aside, it looks like I might have found a bug in `SaveV2`, which doesn't check the [error status from `writer.Add()`](https://github.com/tensorflow/tensorflow/blob/9949045460ffb7bfc037f4b3a5396325791e0f09/tensorflow/core/kernels/save_restore_v2_ops.cc#L131). This could potentially lead to a silent failure if the underlying write fails. @concretevitamin, can you take a look at this and confirm?]\r\n\r\nBeyond that, I don't think we know enough about your program to know where the problem might lie. There are a lot of details&mdash;surrounding the setup of the parameters and the saver, the coordination between the workers, and the use of timeouts&mdash;that are unclear to me. Can you create a minimal example that exhibits the same problems and share the code for that? With some code in black-and-white, we should be able to provide more help with tracking down the problem.", "@mrry thanks for your responses.\r\nFirst, I used shared=True and wrote checkpoint to hdfs, and found only one parameter server had no output without any error occurred, and as you said, the ps stacks are all waiting for more work. Also before saving checkpoint, all workers were timeout even with 100 seconds timeout. I am pretty sure that one parameter server can't response any more. \r\nSecond, each worker is not aware of other workers, they only connect to ps. Each step used the same timeout(2 seconds)\r\nThird, when the total worker count is small like 200, it works fine with or without shard=True, but when the worker count is 800 or even 400, cluster will hang with or without shard=True when the training is almost done. I am using windows version and even I provided code you may not reproduce the issue using very small cluster. But I will try to minimize it.\r\n\r\n", "> First, I used shared=True and wrote checkpoint to hdfs, and found only one parameter server had no output without any error occurred, and as you said, the ps stacks are all waiting for more work.\r\n\r\nIs it always the same PS task that fails to write a checkpoint? Does it fail on the first attempt to write a checkpoint, or does it fail non-deterministically at some point during training?\r\n\r\n> Also before saving checkpoint, all workers were timeout even with 100 seconds timeout.\r\n\r\nWhat were the workers doing that timed out?\r\n\r\n> I am pretty sure that one parameter server can't response any more.\r\n\r\nHow did you confirm this? Can you try running a step on that PS task, e.g. to fetch a single variable that's held on that task?\r\n\r\n> Second, each worker is not aware of other workers, they only connect to ps.\r\n\r\nWhich mechanism do you use for this? (By default, all workers know about all PS tasks *and* all other worker tasks when you set up the `tf.train.ClusterSpec`.)\r\n\r\n> Each step used the same timeout(2 seconds)\r\n\r\nDoes this include steps that read from a queue-based input pipeline? Or steps that save a checkpoint? It's possible that, if the queues are mostly empty, this timeout could be leaving behind a lot of cancelled attempts in the queue data structures (which are more efficient in the case where timeouts are rare).\r\n\r\n> Third, when the total worker count is small like 200, it works fine with or without shard=True, but when the worker count is 800 or even 400, cluster will hang with or without shard=True when the training is almost done.\r\n\r\nThis is strange, because I'd expect the reliability of `tf.train.Saver(sharded=True).save()` to be a function of the number of PS tasks, and not affected by the number of workers.\r\n\r\n (Out of curiosity, why are you using multiple workers per machine?)\r\n\r\n> I am using windows version and even I provided code you may not reproduce the issue using very small cluster. But I will try to minimize it.\r\n\r\nThis is true... I don't have easy access to a dedicated cluster of hundreds of Windows machines :). Hopefully we can work with you to figure out the problem and then patch it.", "@mrry I am quite interested in the TensorFlow cluster scale in Google. What is the largest number of TensorFlow worker process have you Google guys used for model training? And what is the upper bound of QPS can a parameter server handle? Your experience may help our deciding machine count.", "@shishaochen \r\n1. Google uses stubby while open-source version uses grpc which still has some obvious performance problems (https://github.com/tensorflow/tensorflow/issues/6116). I've been told that Google plans to transition to gRPC internally, so that may eliminate the gap eventually.\r\n\r\n2. When I trained image models in Google and outside I have not seen communication (minus the gRPC issues) being the main bottleneck. The reason is that distributed training tends to be done using parameter server architecture which scales badly for reasons unrelated to hardware. You can actually hurt your accuracy by increasing hardware resources.\r\n\r\nFor asynchronous updates, imagine having 50 replicas updating parameters asynchronously. This means each replica sees parameters which are stale by 49 steps. As you increase number of workers, the staleness increases even if network communication is instant. One ImageNet experiment I've seen attained best accuracy for 50 replicas, and then accuracy went down after that. Synchronous training does better for same replica count, but exhibits similar diminishing returns as you increase number of replicas.\r\n\r\nYou may have better scaling using model parallelism, but this means using larger model, and larger models take longer to train, which is too long given that some of the smaller models already get trained for 6 months. For the largest image models/data-sizes, I would say a few hundred GPU machines is an upper bound on the amount of resources you can efficiently utilize using parameter server.", "@yaroslavvb Much thanks for your detailed explanation. As there are many idle machines without GPU, we want to leverage them for distributed training with CPU only.", "@mrry \r\n> `Second, each worker is not aware of other workers, they only connect to ps.`\r\nWhich mechanism do you use for this? (By default, all workers know about all PS tasks and all other worker tasks when you set up the tf.train.ClusterSpec.)\r\n\r\nA: only provide all ps servers and itself when starting worker server:\r\n`cluster = tf.train.ClusterSpec({\"ps\": ps_hosts, \"worker\": {task_index: worker_hosts[task_index]}})`, also tensorflow provide device_filters when constructing ConfigProto:\r\n`tf.ConfigProto(device_filters=[\"/job:ps\", \"/job:worker/task:%d\" %  LAGS.task_index])`\r\n\r\n>Does this include steps that read from a queue-based input pipeline? Or steps that save a checkpoint? It's possible that, if the queues are mostly empty, this timeout could be leaving behind a lot of cancelled attempts in the queue data structures (which are more efficient in the case where timeouts are rare).\r\n\r\nA: the only queue I was using is file name queue, and here is the data reading code:\r\n```\r\nfilename_queuetf.train.string_input_producer([data_file_name], num_epochs=FLAGS.iteration)\r\n_, batch_example = tf.TFRecordReader().read_up_to(filename_queue, batch_size)\r\nmy_data = user_ops.my_own_parsing_operator(batch_example)\r\n```\r\nSo I am leveraging tfrecord to read data from file, parse it using my own parser after getting raw sample data. I don't think it's queue issue.\r\n\r\n>(Out of curiosity, why are you using multiple workers per machine?)\r\n\r\nA: My neural network is very simple, it's not CPU bottleneck, increasing worker count will better utilize resources and increase throughput. I also tried python multi-thread version by using the same session and different session each thread, but didn't work well, multi-thread can not scale out well.\r\n\r\nI will reproduce this issue and dump tcp packet to see if I can find something. Will update later.", "@mrry \r\nI changed the code in tensorflow/core/distributed_runtime/rpc/grpc_worker_service.cc:Line124 from:\r\n```\r\n    // number of each request type.\r\n    for (int i = 0; i < 1000; ++i) {\r\n      EnqueueRecvTensorRequestRaw();\r\n    }\r\n    for (int i = 0; i < 100; ++i) {\r\n      ENQUEUE_REQUEST(RunGraph, true);\r\n    }\r\n    for (int i = 0; i < 100; ++i) {\r\n      ENQUEUE_REQUEST(CleanupGraph, false);\r\n    }\r\n```\r\n\r\nto\r\n\r\n```\r\n    for (int i = 0; i < 5000; ++i) {\r\n      EnqueueRecvTensorRequestRaw();\r\n    }\r\n    for (int i = 0; i < 2000; ++i) {\r\n      ENQUEUE_REQUEST(RunGraph, true);\r\n    }\r\n    for (int i = 0; i < 2000; ++i) {\r\n      ENQUEUE_REQUEST(CleanupGraph, false);\r\n    }\r\n```\r\nThis change solved the hang issue. Now with total 400 workers, no timeout error occurred and writing checkpoint finished successfully, I verified it by four running.\r\nI don't understand why this could solve this problem, is there any other performance issues when the cluster is large?\r\n\r\nhere is the skeleton of worker code:\r\n```\r\nbuild graph and create session using tf supervisor\r\n......\r\ntry:\r\n    while not sv.should_stop():\r\n        sess.run()\r\nexcept tf.errors.OutOfRangeError:\r\n    print(\"End of file\")\r\n\r\n# increase finish_count variable by one\r\nsess.run(increase_finish_count_op)\r\n\r\nif is_master_worker:\r\n    # wait for all workers finish\r\n    while True:\r\n        if sess.run(finish_count_variable) < total_worker_count:\r\n            time.sleep(30)\r\n        else:\r\n            break\r\n    # write checkpoint to hdfs\r\n    saver.save()\r\n    # write exit_signal variables to notify all other workers to exit\r\n    sess.run(increase_exit_signal_op)\r\nelse:\r\n    while True:\r\n        if sess.run(exit_signal_variable) != 0:\r\n            time.sleep(30)\r\n        else:\r\n            break\r\n```", "@fesun @mrry great findings!  In response to @mrry's previous hunch on the `SaveV2` issue, we recently pushed a patch to the master branch that `OP_REQUIRES_OK` the `writer.Add(Slice)` calls, so hopefully the checkpoint writing path has become more robust (or easier to debug).", "@fesun Thanks for digging into the `ENQUEUE_REQUEST()` issue. This seems like a bug that only occurs at higher pending request counts (e.g. when we have a larger cluster of workers, all contacting the same PS task), but it doesn't seem to trigger deterministically (e.g. when the number of enqueued requests drops to zero).\r\n\r\nPerhaps somebody on the gRPC team has a hunch.... @ctiller, you were super-helpful when we were writing the original async code for TensorFlow on gRPC, and I recall you mentioning that there could be a negative impact on performance if the number of enqueued requests for a method ever dropped to zero. Can you think of a reason why a request might hang indefinitely in this regime? (It would be great to find a simple repro that doesn't involve running 800 processes....) Perhaps I made some fundamentally incorrect assumption about how the async code works?", "@mrry If changing the three constants to very small numbers, maybe it's possible to reproduce the issue with dozens of workers, I may try it when I get some time.", "@mrry After increasing request object counts, there is performance decay along with running time, at first each step only takes 0.3 second, after 4~5 hours, each step takes 1 second. There must be some severe bug or design issues.", "@fesun Thanks for looking into this further. Have you been able to reproduce this with some simple code that runs on a single machine? If so, we can try to reproduce it locally and take a look.\r\n\r\nOtherwise, it would be great if you could try to attach some profiling tools such as `pprof` to see if (i) there is some slower path being taken later in the execution, which would show up in a sample-based profile, or (ii) there is a memory leak that would show up in a heap profile of the running process.", "@fesun any update? Are you still experiencing this problem or can we close the issue?", "@skye My workaround works for me on v1.0.1. But I think the issue is still there, I was told the workaround posted here didn't work for latest v1.2.", "@fesun Maybe a small reproducing script would help us to identify the problem. As you mentioned, if changing the three constants to very small numbers in `ENQUEUE_REQUEST` could reproduce the issue in a smaller scale (2~3 nodes), I am glad to run a customized build locally and see if I could reproduce that. Problem is I don't have a Windows box, so I am not sure if it works.", "@byronyi Sadly I can't reproduce it using small cluster. ", "You mentioned the neural net involved in this case is simple. What is the largest size of tensors a worker need to fetch from PS, and how many tensors are transmitted in a round? \r\n\r\ngRPC is implemented in IOCP on Windows and it's beyond my knowledge if it only happens with a large number of concurrent connections and/or requests per second. But I may have some idea if this issue occurs when transmitting large tensors.", "@byronyi The tensor size is not large, smaller than 1M, what I want to highlight is the time when tensorflow hangs. **_It happens only when some workers finished training and waiting for others to finish using while loop by checking one finish_count variable_**. The phenomenon is that sess.run() didn't return within 20 seconds timeout when some workers finished without timeout exception, at last I will call my custom saving operator(master worker call sess.run([my_saving]) without timeout setting) and all the parameter server wrote models successfully, but sess.run() never returned. Increasing those three magic numbers do solve my problem temporary, but my scenario is this: I have dozens of files to process, I start parameter servers once, restart workers for each file, when I increase magic number to 3000, with 500 workers, tensorflow hangs after about 6-7 restart, increasing to 5000, hangs after about 10 restart. Seems that each worker will occupy one request object and not reusable. I believe this grpc implementation definitely has some wrong and probably platform independent.", "Could you elaborate on the way how you restart the workers? Is it repeated call to `session.run`, or you restart the whole worker process? I remember there are some issues with current design such that a clean restart is not always possible within the same process' lifetime (there're some global resources that can't be released without exit of the process).", "Terminate all worker processes and create them again. @byronyi If you want to know more details, please contact me through email, maybe we can have a quick talk, so you can know exactly what I am doing.", "It has been 14 days with no activity and this issue has an assignee.Please update the label and/or status accordingly.", "There's a decent chance that this hanging bug was fixed by the upgrade to a more recent version of gRPC, which addresses a race condition (leading to potential deadlock) in `grpc::CompletionQueue`. I'm closing this in the hope that things are now working at HEAD and in the nightly builds; please reopen if you can reproduce with an up-to-date version of TensorFlow."]}, {"number": 7352, "title": "Tensorboard ImportError: No module named 'tensorflow.tensorboard.plugins.debugger'", "body": "NOTE: Only file GitHub issues for bugs and feature requests.  All other topics will be closed.\r\n\r\nFor general support from the community, see [StackOverflow](https://stackoverflow.com/questions/tagged/tensorflow).\r\nTo make bugs and feature requests more easy to find and organize, we close issues that are deemed\r\nout of scope for GitHub Issues and point people to StackOverflow.\r\n\r\nFor bugs or installation issues, please provide the following information.\r\nThe more information you provide, the more easily we will be able to offer\r\nhelp and advice.\r\n\r\n### What related GitHub issues or StackOverflow threads have you found by searching the web for your problem?\r\n\r\nNone.\r\n\r\n### Environment info\r\nOperating System:\r\nWindows 10.\r\n\r\nInstalled version of CUDA and cuDNN: \r\n(please attach the output of `ls -l /path/to/cuda/lib/libcud*`):\r\nNone.\r\n\r\nIf installed from source, provide \r\n\r\n1. The commit hash (`git rev-parse HEAD`)\r\ne946a6b63979a63f9e5a1d1603f6cc21d8aad1cf\r\n2. The output of `bazel version`\r\n(compiled by cmake)\r\ncmake -G \"Visual Studio 14 2015 Win64\" .. -DCMAKE_BUILD_TYPE=RelWithDebInfo -DSWIG_EXECUTABLE=C:\\prog\\swigwin-3.0.12\\swig.exe -DPYTHON_EXECUTABLE=C:\\Python35\\python.exe -DPYTHON_LIBRARIES=C:\\Python35\\libs\\python35.lib -Dtensorflow_ENABLE_HDFS_SUPPORT=ON \r\n\r\n\r\n### If possible, provide a minimal reproducible example (We usually don't have time to read hundreds of lines of your code)\r\n\r\n\r\n### What other attempted solutions have you tried?\r\n\r\n\r\n### Logs or other output that would be helpful\r\n(If logs are large, please upload as attachment or provide link).\r\n```\r\n> tensorboard --logdir=..\\logs\r\nTraceback (most recent call last):\r\n  File \"c:\\python35\\lib\\runpy.py\", line 184, in _run_module_as_main\r\n    \"__main__\", mod_spec)\r\n  File \"c:\\python35\\lib\\runpy.py\", line 85, in _run_code\r\n    exec(code, run_globals)\r\n  File \"C:\\Python35\\Scripts\\tensorboard.exe\\__main__.py\", line 5, in <module>\r\n  File \"c:\\python35\\lib\\site-packages\\tensorflow\\tensorboard\\tensorboard.py\", line 35, in <module>\r\n    from tensorflow.tensorboard.plugins.debugger import plugin as debugger_plugin\r\nImportError: No module named 'tensorflow.tensorboard.plugins.debugger'\r\n```\r\n\r\n```\r\n>dir C:\\Python35\\Lib\\site-packages\\tensorflow\\tensorboard\\plugins\r\n Volume in drive C is OSDisk\r\n Volume Serial Number is 1066-463E\r\n\r\n Directory of C:\\Python35\\Lib\\site-packages\\tensorflow\\tensorboard\\plugins\r\n\r\n02/08/2017  11:55 AM    <DIR>          .\r\n02/08/2017  11:55 AM    <DIR>          ..\r\n02/08/2017  11:55 AM             1,658 base_plugin.py\r\n02/08/2017  11:55 AM    <DIR>          projector\r\n02/08/2017  11:55 AM                 0 __init__.py\r\n02/08/2017  11:55 AM    <DIR>          __pycache__\r\n```", "comments": ["@snnn What version of Tesnorflow are you using?\r\n\r\n@dandelionmane Seen anything like this?", "@girving It was compiled from source code by myself.  commit version is : e946a6b", "+ @caisq, @chihuahua", "In your paste above, I wonder why `debugger` is missing from the `tensorflow\\tensorboard\\plugins` directory.", "https://github.com/tensorflow/tensorflow/pull/7428 should have fixed this issue. Please comment or reopen issue if there are any other problems."]}, {"number": 7351, "title": "Add BUILD file and test case for \"fact\" user op", "body": "Current example op defined in tensorflow/core/user_ops/fact.cc is causing a \"AttributeError: 'module' object has no attribute 'fact'\" error using the following BUILD file and python code under tensorflow/core/user_ops:\r\n\r\nBUILD file:\r\nload(\"//tensorflow:tensorflow.bzl\", \"tf_custom_op_library\")\r\n\r\ntf_custom_op_library(\r\n    name = \"fact.so\",\r\n    srcs = [\"fact.cc\"],\r\n)\r\n\r\nPython code:\r\nimport tensorflow as tf\r\nfact_module = tf.load_op_library('fact.so')\r\nwith tf.Session():\r\n  print(fact_module.fact().eval())\r\n\r\nIs this due to \"fact\" possibly being a reserved keyword in tensorflow? If yes, this PR will fix this issue by calling the op as my_fact instead of fact.\r\n\r\nIf it makes sense, I can also add the BUILD file and this python driver code under tensorflow/core/user_ops", "comments": ["Can one of the admins verify this patch?", "It is entirely possible!  Please go ahead and play around with what works -- this is supposed to just be an example of how to define custom ops, so the name isn't that important  :)", "@jart should we have this test be written importing the module dependencies to avoid the hourglass dependency?   As an 'example' of how to load a custom op, using the tf namespace makes more sense to copy-paste, but I'd like to get your opinion first.", "@vrv thanks!\r\nSeems like I missed some steps while building this op yesterday, the default implementation is working fine. I have however added a python module file and a test case for this op, along with a BUILD file (following the style guide)", "Also adding @keveman as reviewer since I'm not sure whether it's intentional to have not had a BUILD file (do we want to encourage BUILD files to build custom ops, or recommend just using gcc/clang instead like we also mention on our 'adding an op' guide?)", "@tensorflow-jenkins test this please.", "@tensorflow-jenkins test this please", "sadly: ERROR: /workspace/tensorflow/BUILD:139:1: Target '//tensorflow/core/user_ops:all_files' is not visible from target '//tensorflow:all_opensource_files'. Check the visibility declaration of the former target if you think the dependency is legitimate.\r\n\r\n\r\n@keveman what should they do?", "Friendly ping! Can this be tested again?", "@vrv I have made the changes based on your review.", "@tensorflow-jenkins test this please", "@tensorflow-jenkins test this please", "@tntnatbry looks the following are broken in py3:\r\n//tensorflow/core/ops/compat:backwards_compatibility_test\r\n//tensorflow/core/user_ops:fact_op_test  \r\n/tensorflow/examples/adding_an_op:fact_test  \r\n\r\nhttps://ci.tensorflow.org/job/tensorflow-pull-requests-cpu-python3/3619/console\r\n\r\nPlease fix", "@dandelionmane @vrv Looks like this op is already a registered op in the tensorflow core op library, as it is listed [here](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/ops/compat/ops_history.v1.pbtxt#L6396). Defining this op as a custom user op instead is therefore failing the following tests, as tensorflow is unable to find it as a registered op anymore:\r\n\r\n//tensorflow/core/ops/compat:backwards_compatibility_test\r\n//tensorflow/examples/adding_an_op:fact_test\r\n\r\nAlso since a test case already exists for this op here: /tensorflow/examples/adding_an_op/fact_test.py, there is no need to add a second test case.\r\n\r\nShould we therefore close this PR?", "That's one option -- the other option is to rename this example op to a different name so it doesn't clash, but I guess then the adding an op documentation would go stale.  I'm going to let @keveman decide what he wants to do here.", "I'm going to close this. If @keveman decides it's better to make the changes, we can."]}, {"number": 7350, "title": "Cherrypicks and version update for 1.0.0-rc2", "body": "", "comments": ["No doc updates needed for 1.0, so this is all the changes needed."]}, {"number": 7349, "title": "Do not build with sse4.1 by default.", "body": "Fixes #6809", "comments": ["@girving Disabling denormal_test again here, happy to help debug it if you need.", "You're disabling it inside Google as well, which is bad.  If it needs to be disabled in open source, we should disable it *only* in open source.  What is the motivation for dropping SSE3?", "It should only be disabled for manual runs of `//tensorflow/...`\r\nAll internal automated systems should still run this test.\r\n\r\nThe motivation to drop SSE4.1 is #6809, AMD CPUs do not have SSE4.1.\r\nBut I think by dropping SSE4.1, we are dropping all previous versions of SSE too, and thus breaking this test?", "It looks like all the architectures mentioned in that bug do support SSE3.  Could we leave SSE3 on even as we turn off SSE4?  It would be nice to have consistent denormal semantics, since it avoids truly horrific surprises for anyone for whom denormals matter.", "We can enable sse3. I suggest we do that not hidden away in an\nunoverridable file, but in bazel rc. Ideally by setting the optimization\nflags for our builds to -msse3.\n", "My concern with that is, someone can just `bazel build\ntensorflow/something/to/build` and then use it.\nThen denormals will fail.\nWould it be possible to do something like this for denormals:\nhttps://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/lib/hash/crc32c_accelerate.cc#L23\n\nOn Wed, Feb 8, 2017 at 8:42 AM, Martin Wicke <notifications@github.com>\nwrote:\n\n> We can enable sse3. I suggest we do that not hidden away in an\n> unoverridable file, but in bazel rc. Ideally by setting the optimization\n> flags for our builds to -msse3.\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/tensorflow/tensorflow/pull/7349#issuecomment-278383228>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AHlCOZonysJ3QzSe7bNJTNyPCy5FFUhOks5rafB5gaJpZM4L6RQ2>\n> .\n>\n", "@gunan What's the equivalent of `#ifdef __SSE3__` in Python?  That aside, I really would like default usage of TensorFlow to flush denormals, including if someone downloads and builds from source.  It would terrify me if a source-built version of TensorFlow was by default different from the standard binaries.  It's not likely to hurt many people, but the people it does hurt will be very unhappy and confused.", "Modified the PR to replace sse4.1 with sse3.\r\nPTAL", "Have we platform instructions set discovering at build time?", "I don't think we do at the moment. Bazel can only tell apart which platform we are targeting to build.\r\nWe might be able to write some skylark magic to do the detection.\r\nBut until then, this will quickly unblock AMD CPU owners.", "@gunan What do you think of Openblas [dynamic approach](https://github.com/xianyi/OpenBLAS/blob/develop/driver/others/dynamic.c)?", "We're looking at a (more) dynamic solution. @petewarden FYI\n", "Is xla involved? ;)", "XLA WILL SOLVE ALL OF THE PROBLEMS!\n\nno, not this time. :)\n", "@martinwicke Please respect the XLA Graal ;)", "Is it the expected behavior to not support SSE4.1, SSE4.2, AVX, AVX2 and FMA instructions when installing tensorflow with pip through the official build in Mac? (Following the instructions for virutalenv at https://www.tensorflow.org/install/install_mac)\r\n\r\nI'm using Mac Os. I was using tensorflow version r0.12 (installed through pip). Today I installed version r1.0 through pip using virtualenv instructions and I get these warnings:\r\n\r\n`W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.1 instructions, but these are available on your machine and could speed up CPU computations.\r\nW tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.2 instructions, but these are available on your machine and could speed up CPU computations.\r\nW tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX instructions, but these are available on your machine and could speed up CPU computations.\r\nW tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX2 instructions, but these are available on your machine and could speed up CPU computations.\r\nW tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use FMA instructions, but these are available on your machine and could speed up CPU computations.`\r\n\r\nI understand I can build it from source to support them, but I'm reporting it because it might be a bug introduced after this change. \r\n\r\nNote: Using Python 2.7 and version without GPU support", "Thanks Sergio! We did initially try to default to at least SSE4.1 for the PIP builds, but we had reports that this caused problems for some users on older AMD machines, so we now default to the lower spec. This does mean that these installs are missing out on some CPU performance unfortunately, and we're still looking at better solutions around dynamically choosing code paths based on the current architecture. This will be a longer-term project though, unfortunately."]}, {"number": 7348, "title": "Do not build with sse4.1 by default.", "body": "Fixes #6809", "comments": []}, {"number": 7347, "title": "Fixing example strided_slice", "body": "Fixing broken example of tf.strided_slice\nNEGATIVE strides work differently (should they?!)\n\ntf.strided_slice(input, [1, 1, 0], [2, -1, 3], [1, -1, 1])", "comments": ["Can one of the admins verify this patch?", "The behavior is correct (matches python range semantics and numpy). The example was wrong. Thanks for the fix!\r\n", "Can one of the admins verify this patch?", "skipping test since this is a simple doc change."]}, {"number": 7346, "title": "Branch 146845645", "body": "", "comments": []}, {"number": 7345, "title": "Apply changes for non-fused winograd, and contrib/BUILD change for nccl, to r1.0", "body": "", "comments": ["Jenkins, test this please", "Jenkins, test this please"]}, {"number": 7344, "title": "Documentation for tf.contrib.layers.stack replaced by documentation for tf.stack", "body": "Documentation for tf.contrib.layers.stack appears to be replaced by documentation for tf.stack, see\r\n[https://www.tensorflow.org/api_docs/python/contrib.layers/higher_level_ops_for_building_neural_network_layers_#stack](https://www.tensorflow.org/api_docs/python/contrib.layers/higher_level_ops_for_building_neural_network_layers_#stack)", "comments": ["@josh11b Did you have a docs generator rewrite planned?", "This is fixed in the 1.0 docs."]}, {"number": 7343, "title": "Refer users to the RedBaron fork of this script. (#7334)", "body": "Cherrypick in upgrade script referral", "comments": []}, {"number": 7342, "title": "Float indexing test fix for Numpy >= 1.12+", "body": "This fixes test failure for NumPy 1.12 that does not allow float indexing of arrays. Of course, it makes sense to index arrays using ints anyway, regardless of NumPy support. I assume this wasn't causing problems to people with NumPy up to 1.11.3, but it's better not to assume a specific NumPy version.", "comments": []}, {"number": 7341, "title": " pywrap_tensorflow.TF_GetCode(status)) tensorflow.python.framework.errors_impl.InvalidArgumentError: Shape in shape_and_slice spec does not match the shape in the save file: [10,5], save file shape: [10,3]", "body": "NOTE: Only file GitHub issues for bugs and feature requests.  All other topics will be closed.\r\n\r\nFor general support from the community, see [StackOverflow](https://stackoverflow.com/questions/tagged/tensorflow).\r\nTo make bugs and feature requests more easy to find and organize, we close issues that are deemed\r\nout of scope for GitHub Issues and point people to StackOverflow.\r\n\r\nFor bugs or installation issues, please provide the following information.\r\nThe more information you provide, the more easily we will be able to offer\r\nhelp and advice.\r\n\r\n### What related GitHub issues or StackOverflow threads have you found by searching the web for your problem?\r\n\r\n### Environment info\r\nOperating System:\r\n\r\nInstalled version of CUDA and cuDNN: \r\n(please attach the output of `ls -l /path/to/cuda/lib/libcud*`):\r\n\r\nIf installed from binary pip package, provide:\r\n\r\n1. A link to the pip package you installed:\r\n2. The output from `python -c \"import tensorflow; print(tensorflow.__version__)\"`.\r\n\r\nIf installed from source, provide \r\n\r\n1. The commit hash (`git rev-parse HEAD`)\r\n2. The output of `bazel version`\r\n\r\n### If possible, provide a minimal reproducible example (We usually don't have time to read hundreds of lines of your code)\r\n\r\n\r\n### What other attempted solutions have you tried?\r\n\r\n\r\n### Logs or other output that would be helpful\r\n(If logs are large, please upload as attachment or provide link).\r\n", "comments": ["Tensorflow version: 0.12.1\r\nCode:\r\nIRIS_TRAINING = \"C:/Stocks/tensorflow/tf_trainData.csv\"\r\nIRIS_TEST = \"C:/Stocks/tensorflow/tf_testData.csv\"\r\n\r\n# Load datasets.\r\ntraining_set = tf.contrib.learn.datasets.base.load_csv_with_header(\r\n    filename=IRIS_TRAINING,\r\n    target_dtype=np.int,\r\n    features_dtype=np.float32)\r\ntest_set = tf.contrib.learn.datasets.base.load_csv_with_header(\r\n    filename=IRIS_TEST,\r\n    target_dtype=np.int,\r\n    features_dtype=np.float32)\r\n\r\n# Specify that all features have real-value data\r\nfeature_columns = [tf.contrib.layers.real_valued_column(\"\", dimension=4)]\r\n\r\n# Build 3 layer DNN with 10, 20, 10 units respectively.\r\nclassifier = tf.contrib.learn.DNNClassifier(feature_columns=feature_columns,\r\n                                            hidden_units=[10, 20, 10],\r\n                                            n_classes=5,\r\n                                            model_dir=\"/tmp/iris_model\")\r\n\r\n# Fit model.\r\nclassifier.fit(x=training_set.data,\r\n               y=training_set.target,\r\n               steps=2000)\r\n\r\n# Evaluate accuracy.\r\naccuracy_score = classifier.evaluate(x=test_set.data,\r\n                                     y=test_set.target)[\"accuracy\"]\r\nprint('Accuracy: {0:f}'.format(accuracy_score))\r\n\r\n\r\n\r\n\r\n\r\n#Error Message;\r\nINFO:tensorflow:Create CheckpointSaverHook.\r\n    raise type(e)(node_def, op, message)\r\ntensorflow.python.framework.errors_impl.InvalidArgumentError: Shape in shape_and_slice spec does not match the shape in the save file: [10,5], save file shape: [10,3]\r\n\t [[Node: save/RestoreV2_16 = RestoreV2[dtypes=[DT_FLOAT], _device=\"/job:localhost/replica:0/task:0/cpu:0\"](_recv_save/Const_0, save/RestoreV2_16/tensor_names, save/RestoreV2_16/shape_and_slices)]]\r\n\r\nCaused by op 'save/RestoreV2_16', defined at:\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"C:\\Users\\useradmin\\Anaconda3\\lib\\site-packages\\spyder\\utils\\site\\sitecustomize.py\", line 866, in runfile\r\n    execfile(filename, namespace)\r\n  File \"C:\\Users\\useradmin\\Anaconda3\\lib\\site-packages\\spyder\\utils\\site\\sitecustomize.py\", line 102, in execfile\r\n    exec(compile(f.read(), filename, 'exec'), namespace)\r\n  File \"C:/Stocks/tensorflow/stock_Classification.py\", line 94, in <module>\r\n    steps=2000)\r\n  File \"C:\\Users\\useradmin\\Anaconda3\\lib\\site-packages\\tensorflow\\contrib\\learn\\python\\learn\\estimators\\dnn.py\", line 315, in fit\r\n    max_steps=max_steps)\r\n  File \"C:\\Users\\useradmin\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\util\\deprecation.py\", line 191, in new_func\r\n    return func(*args, **kwargs)\r\n  File \"C:\\Users\\useradmin\\Anaconda3\\lib\\site-packages\\tensorflow\\contrib\\learn\\python\\learn\\estimators\\estimator.py\", line 355, in fit\r\n    max_steps=max_steps)\r\n  File \"C:\\Users\\useradmin\\Anaconda3\\lib\\site-packages\\tensorflow\\contrib\\learn\\python\\learn\\estimators\\estimator.py\", line 733, in _train_model\r\n    max_steps=max_steps)\r\n  File \"C:\\Users\\useradmin\\Anaconda3\\lib\\site-packages\\tensorflow\\contrib\\learn\\python\\learn\\graph_actions.py\", line 297, in _monitored_train\r\n    hooks=all_hooks) as super_sess:\r\n  File \"C:\\Users\\useradmin\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\training\\monitored_session.py\", line 447, in __init__\r\n    self._sess = _RecoverableSession(self._coordinated_creator)\r\n  File \"C:\\Users\\useradmin\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\training\\monitored_session.py\", line 618, in __init__\r\n    _WrappedSession.__init__(self, self._sess_creator.create_session())\r\n  File \"C:\\Users\\useradmin\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\training\\monitored_session.py\", line 505, in create_session\r\n    self.tf_sess = self._session_creator.create_session()\r\n  File \"C:\\Users\\useradmin\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\training\\monitored_session.py\", line 333, in create_session\r\n    self._scaffold.finalize()\r\n  File \"C:\\Users\\useradmin\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\training\\monitored_session.py\", line 163, in finalize\r\n    self._saver.build()\r\n  File \"C:\\Users\\useradmin\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\training\\saver.py\", line 1030, in build\r\n    restore_sequentially=self._restore_sequentially)\r\n  File \"C:\\Users\\useradmin\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\training\\saver.py\", line 620, in build\r\n    restore_sequentially, reshape)\r\n  File \"C:\\Users\\useradmin\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\training\\saver.py\", line 404, in _AddShardedRestoreOps\r\n    name=\"restore_shard\"))\r\n  File \"C:\\Users\\useradmin\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\training\\saver.py\", line 361, in _AddRestoreOps\r\n    tensors = self.restore_op(filename_tensor, saveable, preferred_shard)\r\n  File \"C:\\Users\\useradmin\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\training\\saver.py\", line 200, in restore_op\r\n    [spec.tensor.dtype])[0])\r\n  File \"C:\\Users\\useradmin\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\ops\\gen_io_ops.py\", line 441, in restore_v2\r\n    dtypes=dtypes, name=name)\r\n  File \"C:\\Users\\useradmin\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\framework\\op_def_library.py\", line 759, in apply_op\r\n    op_def=op_def)\r\n  File \"C:\\Users\\useradmin\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\framework\\ops.py\", line 2240, in create_op\r\n    original_op=self._default_original_op, op_def=op_def)\r\n  File \"C:\\Users\\useradmin\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\framework\\ops.py\", line 1128, in __init__\r\n    self._traceback = _extract_stack()\r\n", "Is sounds like you saved a tensor with one shape and are trying to read it back in with another.  The shapes have to match when reading from checkpoints."]}, {"number": 7340, "title": "Propagate TF_BUILD_ENABLE_XLA environment variable into the CI build \u2026", "body": "\u2026docker container from ci_parameterized_build.sh.\r\n\r\nFixes XLA continuous builds.\r\nChange: 145100608", "comments": ["FYI XLA tests running here:\r\nhttp://ci.tensorflow.org/job/tensorflow-pull-requests-xla/3/console", "Cool, all XLA tests pass too, merging now."]}, {"number": 7339, "title": "Branch 146817322", "body": "", "comments": ["Jenkins, test this please."]}, {"number": 7338, "title": "Update our version of protocol buffers. Use a new numpy and pandas in Jenkins.", "body": "", "comments": ["Looks like at least the android breakage above is related.\r\nCould you take a look?", "(Hold off on reviewing/merging. Failures look genuine. Will investigate a bit later.)", "@gunan PTAL. Turns out the pypi numpy causes subtle bugs with Ubuntu 14.04. pip install compiles from source.", "Was testing upgrading numpy and pandas as part of this. Left them upgraded because they fix several unrelated issues.", "Also upgraded to a protocol buffer version past 3.2.0 to support https://github.com/tensorflow/tensorflow/pull/7165. Only needed in bazel rules and not as a runtime dep.", "All test are happy, so I am happy.\r\nShould we document which bugs numpy and pandas upgrades resolve?"]}, {"number": 7337, "title": "Merge in some performance changes to r1.0", "body": "git cherry-pick f49cca9b7f7ecac8b4f2c031d489e99594068645\r\ngit cherry-pick 66b5684133bda0a3050e1573f747d86c645dfd67\r\ngit cherry-pick f0a1af4a8bcbe456a0d8a748f9805494cc4ab786\r\ngit cherry-pick 2b589dc79b16c2d104a71f809af5505fe9476687\r\ngit cherry-pick f49721aaf82b44dc420b5898536b5dce3254975b\r\ngit cherry-pick 9b7c47c1d48dfbe69e2ab62aae6146823ba7e664\r\ngit cherry-pick 44642329df6bc1627c54f92c5f6850e5882da991\r\ngit cherry-pick 5be95cbb389bc112161232c8514155947063ea72\r\ngit cherry-pick 27ffb49afc9030a5070a860f4fca491d4f8c29e7\r\ngit cherry-pick e9602d275295feaeee900147147957aad2594fb4\r\ngit cherry-pick bf67d0a1c52c303f9018c00cbc030dc35438ed2c\r\ngit cherry-pick 7725c874499991464d5fd0a4fd57216885726a60\r\ngit cherry-pick e2127701a5695f393c42a270ab30814703feb64b", "comments": ["Can one of the admins verify this patch?", "So there's good news and bad news.\n\n:thumbsup: The good news is that everyone that needs to sign a CLA (the pull request submitter and all commit authors) have done so.  Everything is all good there.\n\n:confused: The bad news is that it appears that one or more commits were authored by someone other than the pull request submitter.  We need to confirm that they're okay with their commits being contributed to this project.  Please have them confirm that here in the pull request.\n\n*Note to project maintainer: This is a terminal state, meaning the `cla/google` commit status will not change from this state. It's up to you to confirm consent of the commit author(s) and merge this pull request when appropriate.*\n\n<!-- need_author_consent -->", "Jenkins, test this please.", "Jenkins, test this please.", "Jenkins, test this please.", "py3 failure known issue.\r\nMerging."]}, {"number": 7336, "title": "Docs don't explain how to add the optimization flags for avx, sse instruction sets", "body": "After installing tensorflow from source, I saw the following warnings.\r\n\r\n```\r\nW tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.2 instructions, but these are available on your machine and could speed up CPU computations.\r\nW tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX instructions, but these are available on your machine and could speed up CPU computations.\r\nW tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX2 instructions, but these are available on your machine and could speed up CPU computations.\r\nW tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use FMA instructions, but these are available on your machine and could speed up CPU computations.\r\n```\r\n\r\nThe current tensorflow docs mention adding `-march=native` to configure but don't explain how. I have found by inspecting the configure script you can add it with `--copt=-march=native`. \r\n\r\nCan someone explicitly state this in the docs?", "comments": ["master branch addresses this by asking which optimization flags to use in configure.", "You can try [this post](http://stackoverflow.com/a/42755665/4503060) and tell me if it really becomes faster.", "Does tensorflow have a benchmarking suite?", "I don't know any."]}, {"number": 7335, "title": "Fix typos in graph_editor add_control_inputs.", "body": "@purpledog", "comments": ["Can one of the admins verify this patch?", "Jenkins, test this please.", "Jenkins, test this please.\r\n"]}, {"number": 7334, "title": "Refer users to the RedBaron fork of this script.", "body": "@machrisaa, has created a fork of tf_upgrade.py that uses RedBaron. For minimal dependency reasons, testing reasons and RedBaron's not full Python3 support, we aren't changing the officially supported version yet. In the mean time, we will refer users README.md that they can try it if our script finds a case it cannot handle.", "comments": ["@gunan, could we cherry pick this into the next rc when it hits master?", "Sure, since it is only a readme change, I am merging it right away.\r\nCOuld you create the cherrypick PR?", "sure @gunan "]}, {"number": 7333, "title": "Adding MKL matmul op", "body": "Adding build, op and registration for the MKL matmul op.", "comments": ["Can one of the admins verify this patch?", "We found a Contributor License Agreement for you (the sender of this pull request), but were unable to find agreements for the commit author(s).  If you authored these, maybe you used a different email address in the git commits than was used to sign the CLA ([login here](https://cla.developers.google.com/) to double check)?  If these were authored by someone else, then they will need to sign a CLA as well, and confirm that they're okay with these being contributed to Google.\n\n<!-- need_author_cla -->", "CLAs look good, thanks!\n\n<!-- ok -->", "Looks good. As discussed offline, rmlarsen's comment will be addressed in a separate PR.", "@tensorflow-jenkins test this please", "Please fix the buildifier error mentioned in https://ci.tensorflow.org/job/tensorflow-pull-requests-sanity/3098/console and we can retest.  Thanks!", "Ran buildifier on tensorflow/core/BUILD, tensorflow/core/kernels/BUILD and pushed the changes", "@tensorflow-jenkins test this please", "@tensorflow-jenkins test this please", "Weird, I'm seeing the following now:\r\n\r\n```\r\nERROR: missing input file '//third_party/mkl:libmklml_intel.so'.\r\nERROR: /var/lib/jenkins/workspace/tensorflow-pull-requests-cpu-python3/bazel-ci_build-cache/.cache/bazel/_bazel_jenkins/eab0d61a99b6696edb3d2aff87b585e8/external/nasm/BUILD:8:1: C++ compilation of rule '@nasm//:nasm' failed: gcc failed: error executing command \r\n  (cd /var/lib/jenkins/workspace/tensorflow-pull-requests-cpu-python3/bazel-ci_build-cache/.cache/bazel/_bazel_jenkins/eab0d61a99b6696edb3d2aff87b585e8/execroot/workspace && \\\r\n  exec env - \\\r\n    LD_LIBRARY_PATH='' \\\r\n    PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/snap/bin \\\r\n  /usr/bin/gcc -U_FORTIFY_SOURCE '-D_FORTIFY_SOURCE=1' -fstack-protector -Wall -Wl,-z,-relro,-z,now -B/usr/bin -B/usr/bin -Wunused-but-set-parameter -Wno-free-nonheap-object -fno-canonical-system-headers -fno-omit-frame-pointer -g0 -O2 -DNDEBUG -ffunction-sections -fdata-sections -MD -MF bazel-out/local-py3-opt/bin/external/nasm/_objs/nasm/external/nasm/preproc.d -iquote external/nasm -iquote bazel-out/local-py3-opt/genfiles/external/nasm -iquote external/bazel_tools -iquote bazel-out/local-py3-opt/genfiles/external/bazel_tools -isystem external/bazel_tools/tools/cpp/gcc3 -w '-std=c99' -fno-canonical-system-headers -Wno-builtin-macro-redefined '-D__DATE__=\"redacted\"' '-D__TIMESTAMP__=\"redacted\"' '-D__TIME__=\"redacted\"' -c external/nasm/preproc.c -o bazel-out/local-py3-opt/bin/external/nasm/_objs/nasm/external/nasm/preproc.o): com.google.devtools.build.lib.shell.AbnormalTerminationException: Process terminated by signal 15.\r\nERROR: /workspace/third_party/mkl/BUILD:11:1: //third_party/mkl:intel_binary_blob: missing input file '//third_party/mkl:libmklml_intel.so'.\r\n```", "I think this error should appear if you build with --config=mkl while not enabling mkl when you configure (currently it is disabled in the configure file). Can you confirm if that is the case?", "Where does this PR stand currently? @vrv  Can you describe what configure and build settings you used when you got the error you mentioned 5 days back?", "I'm just pointing at the test results... click on \"details' and then 'console log\" for the relevant failing tests.", "Previously, we were not testing with \"bazel test\" in our setup so we could not reproduce the error earlier. Now, I updated the third_party/mkl/BUILD to fix the test failures due to missing MKL libs", "@tensorflow-jenkins test this please", "Jenkins, test this please."]}, {"number": 7332, "title": "Fixed a bug where inception layers had 2 3x3 conv kernels instead of \u2026", "body": "\u2026one 3x3 and 5x5 kernel. This is a fix for the issue #7130 .", "comments": ["Can one of the admins verify this patch?", "Thanks for your pull request.  It looks like this may be your first contribution to a Google open source project. Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).\n\n:memo: **Please visit <https://cla.developers.google.com/> to sign.**\n\nOnce you've signed, please reply here (e.g. `I signed it!`) and we'll verify.  Thanks.\n\n---\n\n- If you've already signed a CLA, it's possible we don't have your GitHub username or you're using a different email address.  Check [your existing CLA data](https://cla.developers.google.com/clas) and verify that your [email is set on your git commits](https://help.github.com/articles/setting-your-email-in-git/).\n- If you signed the CLA as a corporation, please let us know the company's name.\n\n<!-- need_sender_cla -->", "The problem of changing the network definition, is that the checkpoint would stop working. So it would need to be re-trained.", "@sguada so how should we go about fixing this?  Do you want to own fixing the bug and regenerating the checkpoint?", "closing since the author hasn't signed the CLA, but I suspect this ought to be fixed somehow.", "Sorry, this took longer than expected. I had to go through an internal company approval process to find out about the CLA signing. Seems we have a corporate CLA and I signed the individual CLA too.\r\n\r\nI signed it!\r\n\r\nIs that it ?", "Can one of the admins verify this patch?", "@manjunaths can you go to https://cla.developers.google.com/clas and see if the email you used for these commits is associated with a CLA?", "Hello, Yes there is one E-mail address associated in the github.com account and the CLA page shows the same E-mail address. ", "We found a Contributor License Agreement for you (the sender of this pull request), but were unable to find agreements for the commit author(s).  If you authored these, maybe you used a different email address in the git commits than was used to sign the CLA ([login here](https://cla.developers.google.com/) to double check)?  If these were authored by someone else, then they will need to sign a CLA as well, and confirm that they're okay with these being contributed to Google.\n\n<!-- need_author_cla -->", "Can you check now please ? I pushed to my fork with a corrected e-mail address.", "Can one of the admins verify this patch?", "Don't know why cla is not being re-evaluated... checking", "I think it is not showing cla:yes, because you have 3 commits on your branch. commit 3dd13a52df07d60d06099b26fe368b73f98b2ff1 is authored by manjunaths+github@gmial.com, the other two are authored by manjunaths@gmail.com. You need to make sure they are all authored by an email address associated with your git account.", "Can one of the admins verify this patch?", "https://github.com/tensorflow/tensorflow/pull/8295\r\n\r\nI created a new pull request with everything fixed. Is it possible to merge this ?\r\n\r\nSorry for all the confusion I am new to all this."]}, {"number": 7331, "title": "fesetround is not part of the C++ std library", "body": "fesetround() is not part of the C++ std library. It is defined in the [fenv.h header in the POSIX standard](http://pubs.opengroup.org/onlinepubs/9699919799/functions/fesetround.html).\r\n\r\nAddresses #7289 ", "comments": ["Thanks for your pull request.  It looks like this may be your first contribution to a Google open source project. Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).\n\n:memo: **Please visit <https://cla.developers.google.com/> to sign.**\n\nOnce you've signed, please reply here (e.g. `I signed it!`) and we'll verify.  Thanks.\n\n---\n\n- If you've already signed a CLA, it's possible we don't have your GitHub username or you're using a different email address.  Check [your existing CLA data](https://cla.developers.google.com/clas) and verify that your [email is set on your git commits](https://help.github.com/articles/setting-your-email-in-git/).\n- If you signed the CLA as a corporation, please let us know the company's name.\n\n<!-- need_sender_cla -->", "i signed the Google CLA", "We found a Contributor License Agreement for you (the sender of this pull request), but were unable to find agreements for the commit author(s).  If you authored these, maybe you used a different email address in the git commits than was used to sign the CLA ([login here](https://cla.developers.google.com/) to double check)?  If these were authored by someone else, then they will need to sign a CLA as well, and confirm that they're okay with these being contributed to Google.\n\n<!-- need_author_cla -->", "CLAs look good, thanks!\n\n<!-- ok -->", "@carlorosati Since C++11 it is defined in the std namespace via the header \\<cfenv\\>.\r\n\r\nhttp://en.cppreference.com/w/cpp/numeric/fenv/feround\r\n\r\nCan we change the code to use that header instead and get rid of the direct references to \r\n\\_\\_STDC_IEC_559__? If not, I'm OK with your change.\r\n", "@rmlarsen Do you want me to remove the preprocessor statements? Do you know why they were needed?", "Hm, ScopedSetRound looks a bit broken in general. It doesn't reset the rounding mode as stated in the header. This doesn't doesn't matter at the moment, but I'll fix and test it internally and push to github. Thanks for making me aware of this. ", "@rmlarsen Be sure to close out #7289 with your commits.", "@carlorosati will do, thanks. The change is running through automated testing. Should be pushed tomorrow or the day after."]}, {"number": 7330, "title": "Add HomeBrew instructions", "body": "Making iOS instructions a bit clearer", "comments": ["Can one of the admins verify this patch?", "Thanks for your pull request.  It looks like this may be your first contribution to a Google open source project. Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).\n\n:memo: **Please visit <https://cla.developers.google.com/> to sign.**\n\nOnce you've signed, please reply here (e.g. `I signed it!`) and we'll verify.  Thanks.\n\n---\n\n- If you've already signed a CLA, it's possible we don't have your GitHub username or you're using a different email address.  Check [your existing CLA data](https://cla.developers.google.com/clas) and verify that your [email is set on your git commits](https://help.github.com/articles/setting-your-email-in-git/).\n- If you signed the CLA as a corporation, please let us know the company's name.\n\n<!-- need_sender_cla -->", "I signed it!", "CLAs look good, thanks!\n\n<!-- ok -->", "OK changes made."]}, {"number": 7329, "title": "404 error when installing Tensorflow on Python for Raspberry pi", "body": "I want to install Tensorflow on Python for Raspberry Pi and followed the steps in this page:\r\nhttps://github.com/samjabrahams/tensorflow-on-raspberry-pi\r\n\r\nBut when I apply the command:\r\nwget https://github.com/samjabrahams/tensorflow-on-raspberry-pi/releases/download/v0.12.1/tensorflow-0.12.1-cp27-none-linux_armv7l.whl\r\n\r\nI get Error 404 - not found ..\r\n\r\nHow to solve it?\r\n\r\n\r\n\r\n\r\nNOTE: Only file GitHub issues for bugs and feature requests.  All other topics will be closed.\r\n\r\nFor general support from the community, see [StackOverflow](https://stackoverflow.com/questions/tagged/tensorflow).\r\nTo make bugs and feature requests more easy to find and organize, we close issues that are deemed\r\nout of scope for GitHub Issues and point people to StackOverflow.\r\n\r\nFor bugs or installation issues, please provide the following information.\r\nThe more information you provide, the more easily we will be able to offer\r\nhelp and advice.\r\n\r\n### What related GitHub issues or StackOverflow threads have you found by searching the web for your problem?\r\n\r\n### Environment info\r\nOperating System:\r\n\r\nInstalled version of CUDA and cuDNN: \r\n(please attach the output of `ls -l /path/to/cuda/lib/libcud*`):\r\n\r\nIf installed from binary pip package, provide:\r\n\r\n1. A link to the pip package you installed:\r\n2. The output from `python -c \"import tensorflow; print(tensorflow.__version__)\"`.\r\n\r\nIf installed from source, provide \r\n\r\n1. The commit hash (`git rev-parse HEAD`)\r\n2. The output of `bazel version`\r\n\r\n### If possible, provide a minimal reproducible example (We usually don't have time to read hundreds of lines of your code)\r\n\r\n\r\n### What other attempted solutions have you tried?\r\n\r\n\r\n### Logs or other output that would be helpful\r\n(If logs are large, please upload as attachment or provide link).\r\n", "comments": []}, {"number": 7328, "title": "Add network address check in clusterSpec", "body": "Today, I got an error when starting a distributed TensorFlow computation. I debugged for hours and finally found the problem is that TensorFlow doesn't have network address check in `ClusterSpec` method. And it endlessly connect the illegal network address `100.xxx.xxx.232.:2223`, because there is a redundant `.` after `232`.", "comments": ["I think I can create a PR to optimize the legal check of network address.", "That sounds reasonable to me.  @mrry Is that the right place to check?", "The ClusterSpec class might be used with many different naming schemes, so the appropriate place to put the validation is in `grpc_server_lib.cc` around [this line](https://github.com/tensorflow/tensorflow/blob/66d5d1fa0c192ca4c9b75cde216866805eb160f2/tensorflow/core/distributed_runtime/rpc/grpc_server_lib.cc#L128).", "@mrry ok, I'd like to work on it today.", "@mrry @DjangoPeng Can I work on this?", "@alisidd Thanks for offering to work on this! As far as I know, @DjangoPeng *was* working on this in #7532, but that PR has been closed due to inactivity. If you are going to work on it, perhaps you could take a look at the comments on that thread to see what would be required?", "@mrry Great, I'll look into it!", "@mrry @alisidd Please go ahead. I'm working on our projects this day. So I may not working on this issue nowadays. Thanks.", "I think the fix has since landed, courtesy of a change by @frankchn: https://github.com/tensorflow/tensorflow/commit/ef9a552282e24bcbc5dd2d590d986c09d9eef9b1.\r\n\r\nI'm closing this for now, but feel free to reopen if there are other cases that could be validated."]}, {"number": 7327, "title": "CondaHTTPError: HTTP Error when  installing tensorflow on windows by anaconda", "body": "(D:\\Program Files (x86)\\Anaconda2) C:\\XX\\XXXXX>conda install -c https://\r\napi.anaconda.org/conda-forge tensorflow\r\nFetching package metadata ....Could not connect to https://repo.continuum.io/pkg\r\ns/free/noarch/\r\nCould not connect to https://repo.continuum.io/pkgs/pro/win-64/\r\nCould not connect to https://repo.continuum.io/pkgs/free/win-64/\r\nCould not connect to https://repo.continuum.io/pkgs/pro/noarch/\r\nCould not connect to https://repo.continuum.io/pkgs/msys2/win-64/\r\nCould not connect to https://repo.continuum.io/pkgs/msys2/noarch/\r\nCondaHTTPError: HTTP Error: Could not find URL: https://api.anaconda.org/conda-f\r\norge/win-64/\r\n\r\nwhy could not connect... ???? \r\nconda-forge/tensorflow | 0.12.1 | conda | linux-64, win-64, osx-64\r\n", "comments": ["This seems to be an issue with Anaconda, not TensorFlow."]}]