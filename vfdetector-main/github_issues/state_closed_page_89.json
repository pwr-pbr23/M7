[{"number": 52491, "title": "[tensorflow/compiler/tf2xla/kernels/while_op.cc] Add calls to `reserve()` before populating vector", "body": "https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)", "comments": []}, {"number": 52490, "title": "[tensorflow/compiler/tf2xla/kernels/tensor_list_ops.cc] Add calls to `reserve()` before populating vector", "body": "https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)", "comments": []}, {"number": 52489, "title": "[tensorflow/compiler/tf2xla/kernels/strided_slice_op.cc] Add calls to `reserve()` before populating vector", "body": "https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)", "comments": []}, {"number": 52488, "title": "[tensorflow/compiler/tf2xla/kernels/reshape_op.cc] Add calls to `reserve()` before populating vector", "body": "https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)", "comments": []}, {"number": 52487, "title": "[tensorflow/compiler/tf2xla/kernels/resampler_ops.cc] Add calls to `reserve()` before populating vector", "body": "https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)", "comments": []}, {"number": 52486, "title": "[tensorflow/compiler/tf2xla/kernels/reduction_ops_common.cc] Add calls to `reserve()` before populating vectors", "body": "https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)", "comments": []}, {"number": 52485, "title": "[tensorflow/compiler/tf2xla/kernels/dynamic_stitch_op.cc] Add calls to `reserve()` before populating vector", "body": "https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)", "comments": ["Closing as per the review comment."]}, {"number": 52484, "title": "[tensorflow/compiler/tf2xla/kernels/dynamic_partition_op.cc] Add calls to `reserve()` before populating vector", "body": "https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)", "comments": []}, {"number": 52483, "title": "[tensorflow/compiler/tf2xla/kernels/cross_op.cc] Add calls to `reserve()` before populating vector", "body": "https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)", "comments": []}, {"number": 52482, "title": "[tensorflow/compiler/tf2xla/kernels/case_op.cc] Add calls to `reserve()` before populating vector", "body": "https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)", "comments": []}, {"number": 52481, "title": "[tensorflow/compiler/tf2xla/functionalize_while.cc] Add calls to `reserve()` before populating vector", "body": "https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)", "comments": []}, {"number": 52480, "title": "[tensorflow/compiler/tf2tensorrt/kernels/trt_engine_resource_ops.cc] Add calls to `reserve()` before populating vector", "body": "Add calls to reserve vector capacity before populating vector.\r\n\r\nThis is split from PR https://github.com/tensorflow/tensorflow/pull/51739.", "comments": []}, {"number": 52479, "title": "[tensorflow/compiler/tf2tensorrt/convert/trt_optimization_pass.cc] Add calls to `reserve()` before populating vector", "body": "Add calls to reserve vector capacity before populating vector.\r\n\r\nThis is split from PR https://github.com/tensorflow/tensorflow/pull/51739.", "comments": []}, {"number": 52478, "title": "[tensorflow/compiler/tf2tensorrt/convert/convert_nodes_test.cc] Add calls to `reserve()` before populating vectors", "body": "Add calls to reserve vector capacity before populating vector.\r\n\r\nThis is split from PR https://github.com/tensorflow/tensorflow/pull/51739.", "comments": []}, {"number": 52477, "title": "[tensorflow/compiler/tf2tensorrt/convert/convert_nodes.cc] Add calls to `reserve()` before populating vector", "body": "Add calls to reserve vector capacity before populating vector.\r\n\r\nThis is split from PR https://github.com/tensorflow/tensorflow/pull/51739.", "comments": []}, {"number": 52476, "title": "[tensorflow/compiler/tests/randomized_tests.cc] Reduce function calls; add calls to `reserve()` before populating vectors", "body": "https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)", "comments": []}, {"number": 52475, "title": "[tensorflow/compiler/mlir/xla/transforms/legalize_tf.cc] Add calls to `reserve()` before populating vector", "body": "https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)", "comments": ["@SamuelMarks Can you please check @joker-eph's comments and keep us posted ? Thanks!", "@gbaned I think it's more of a comment rather than a demand to remove the `.reserve` here."]}, {"number": 52474, "title": "[tensorflow/compiler/mlir/xla/transforms/adjust_layout.cc] Add calls to `reserve()` before populating vector", "body": "https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)", "comments": []}, {"number": 52473, "title": "[tensorflow/compiler/mlir/xla/ir/mlir_hlo_builder.cc] Add calls to `reserve()` before populating vectors", "body": "https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)", "comments": ["@SamuelMarks Can you please check @joker-eph's comments and keep us posted ? Thanks!", "@gbaned Responded", "@SamuelMarks Can you please check @joker-eph's comments and keep us posted ? Thanks!", "@SamuelMarks Any update on this PR? Please. Thanks!", "@gbaned I had this follow up question to @joker-eph https://github.com/tensorflow/tensorflow/pull/52473#discussion_r734204686\r\n\r\nAlso I'm not sold on the lack of `reserve`s for `high`, `min`, and `low`\u2026", "> @gbaned I had this follow up question to @joker-eph [#52473 (comment)](https://github.com/tensorflow/tensorflow/pull/52473#discussion_r734204686)\r\n> \r\n> Also I'm not sold on the lack of `reserve`s for `high`, `min`, and `low`\u2026\r\n\r\nSure: if you can collect statistics that shows SmallVector does not do the job I'll be happy to reconsider.", "Closing now, please re-open if you gather some data to justify turning the one line into 6.", "@joker-eph It seems like a hard piece of code to benchmark, I would need to know the various values of `padding_config.dimensions().size()` for different workloads in order to build a reasonable only-stl-and-llvm dependent test-case for this. So, unless I'm missing something, your call to benchmark was setting me up to fail", "You don't need to run benchmarks, as in get *performance* numbers. I'm asking statistics in terms of \"how many times does this code path triggers a grow of the vector\".\r\n\r\nBasically it could be done  by adding after the loop some code that looks like:\r\n\r\n```\r\n  {\r\n    string temp_file;\r\n     if (low.isSmall()) temp_file = tensorflow::io::GetTempFilename(\"low_nogrow.txt\"));\r\n     else temp_file = tensorflow::io::GetTempFilename(\"low_grow.txt\"));\r\n     TF_CHECK_OK(WriteStringToFile(tf::Env::Default(), temp_file, absl::StrCat(\"Low size is \", low.size()));\r\n  }\r\n```\r\n\r\nThen run TensorFlow tests suite with `--test_env=TEST_TMPDIR=$HOME/grow_results` (you need to create the directory ahead of time)\r\n\r\nWhich should create a bunch of files in this directory which makes it for trivial statistics."]}, {"number": 52472, "title": "[tensorflow/compiler/mlir/xla/experimental/conv_emitter/conv_emitter.cc] Add calls to `reserve()` before populating vector", "body": "https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)", "comments": ["@SamuelMarks Can you please check @joker-eph's comments and keep us posted ? Thanks!", "@SamuelMarks Any update on this PR? Please. Thanks!", "@gbaned Done", "It seems like you didn't test your code:\r\n\r\n```\r\nthird_party/tensorflow/compiler/mlir/xla/experimental/conv_emitter/conv_emitter.cc:146:58: error: invalid operands to binary expression ('mlir::Operation' and 'mlir::Operation *')\r\n                        return for_op.getBody()->front() == &*begin_op;\r\n                               ~~~~~~~~~~~~~~~~~~~~~~~~~ ^  ~~~~~~~~~~\r\nthird_party/llvm/llvm-project/llvm/include/llvm/ADT/StringRef.h:918:15: note: candidate function not viable: no known conversion from 'mlir::Operation' to 'llvm::StringRef' for 1st argument\r\n  inline bool operator==(StringRef LHS, StringRef RHS) {\r\n              ^\r\nthird_party/llvm/llvm-project/llvm/include/llvm/Support/Alignment.h:248:13: note: candidate function not viable: no known conversion from 'mlir::Operation' to 'llvm::Align' for 1st argument\r\ninline bool operator==(Align Lhs, uint64_t Rhs) {\r\n            ^\r\nthird_party/llvm/llvm-project/llvm/include/llvm/Support/Alignment.h:274:13: note: candidate function not viable: no known conversion from 'mlir::Operation' to 'llvm::MaybeAlign' for 1st argument\r\ninline bool operator==(MaybeAlign Lhs, uint64_t Rhs) {\r\n            ^\r\nthird_party/llvm/llvm-project/llvm/include/llvm/Support/Alignment.h:282:13: note: candidate function not viable: no known conversion from 'mlir::Operation' to 'llvm::Align' for 1st argument\r\ninline bool operator==(Align Lhs, Align Rhs) {\r\n            ^\r\nthird_party/tensorflow/compiler/mlir/xla/experimental/conv_emitter/conv_emitter.cc:146:58: note: remaining 16 candidates omitted; pass -fshow-overloads=all to show them\r\n                        return for_op.getBody()->front() == &*begin_op;\r\n                                                         ^\r\nthird_party/tensorflow/compiler/mlir/xla/experimental/conv_emitter/conv_emitter.cc:220:66: error: expected ')'\r\n    for (auto ancestor_and_new : llvm::zip(ancestors, new_loops) {\r\n                                                                 ^\r\nthird_party/tensorflow/compiler/mlir/xla/experimental/conv_emitter/conv_emitter.cc:220:9: note: to match this '('\r\n    for (auto ancestor_and_new : llvm::zip(ancestors, new_loops) {\r\n\r\n```", "Ahhh I just used your code https://github.com/tensorflow/tensorflow/pull/52472#discussion_r762388923", "Please re-open when the build failures are fixed", "@joker-eph I fixed the second error but the first one with your solution https://github.com/tensorflow/tensorflow/pull/52472#discussion_r762388923 is still ambiguous for `==`", "I'm not sure what you mean by \"ambiguous\"?\r\nThere is just a `&` missing I think: `    return &for_op.getBody()->front() == &*begin_op;`", "It can also be written: `return &*for_op.getBody()->begin() == &*begin_op;`", "Ok I've made that change also (see my fork's branch)"]}, {"number": 52471, "title": "[tensorflow/compiler/mlir/tools/kernel_gen/transforms/gpu_kernel_to_blob_pass.cc] Add calls to `reserve()` before populating vector", "body": "https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)", "comments": []}, {"number": 52470, "title": "[tensorflow/compiler/mlir/tfr/integration/tfr_decompose_ctx_test.cc] Add calls to `reserve()` before populating vector", "body": "https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)", "comments": []}, {"number": 52469, "title": "[tensorflow/compiler/mlir/tensorflow/utils/convert_tensor.cc] Add calls to `reserve()` before populating vector", "body": "https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)", "comments": ["@SamuelMarks Can you please check @joker-eph's comments and keep us posted ? Thanks!", "@gbaned Done"]}, {"number": 52468, "title": "[tensorflow/compiler/mlir/tensorflow/transforms/lower_tf.cc] Add calls to `reserve()` before populating vector", "body": "https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)", "comments": []}, {"number": 52467, "title": "[tensorflow/compiler/mlir/python/mlir.cc] Use correct size type for `node_names.size()` iterator", "body": "https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)", "comments": ["@SamuelMarks Any update on this PR? Please. Thanks!", "@gbaned I have made the size types the same as the size type returned by the `.size()` function. If @joker-eph wants a different return type, then he should create a new vector type that has its size type as what he wants it to be. Otherwise type inconsistencies occur, which is the whole problem this PR purports to solve.", "Please reopen if you'd like to address comments, otherwise I don't think there is any point in keeping this open."]}, {"number": 52466, "title": "[tensorflow/compiler/mlir/hlo/lib/Analysis/userange_analysis.cc] Add calls to `reserve()` before populating vector", "body": "https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)", "comments": ["@SamuelMarks  Can you please resolve conflicts? Thanks!", "@gbaned Done"]}, {"number": 52463, "title": "[tensorflow/compiler/jit/extract_outside_compilation_pass.cc] Fold two loops into one; add calls to `reserve()` before populating vectors", "body": "https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)", "comments": ["@SamuelMarks  Can you please check @er91's comments and keep us posted ? Thanks!", "@gbaned Commented in reply to his comment.", "Ahhh @er91 would you accept a PR with an `.editorconfig` or `.clang-format`?", "I'm not sure about that (accepting change with .editorconfig). I think for this PR, it's easier to just fix the indentations.", "@er91 - Fixed and I've sent the `.clang-format` in a separate PR: #53329"]}, {"number": 52462, "title": "[tensorflow/compiler/jit/encapsulate_subgraphs_pass_test.cc] Add calls to `reserve()` before populating vector", "body": "https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)", "comments": ["@mihaimaruseac I'll defer to your judgement. But eventually someone will write a linter\u2014and maybe even a refactorer in LLVM's LibClang and/or LibTooling\u2014that will automatically insert these `.reserve` calls on every vector they aren't existent. And the number of lines this tool changes should be small compared to my original #51739\r\n\r\n(whereas if you don't merge these trivially correct occurrences, then it'll end up being too many SLoC)", "> But eventually someone will write a linter\u2014and maybe even a refactorer in LLVM's LibClang and/or LibTooling\u2014that will automatically insert these .reserve calls on every vector they aren't existent. \r\n\r\nYou are assuming that we will agree that such a linter will be a good thing to apply universally, while for example we may decide to excluded every tests from the linter.", "Closing, given consensus to not change tests."]}, {"number": 52461, "title": "[tensorflow/compiler/jit/deadness_analysis.cc] Add calls to `reserve()` before populating vector", "body": "https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)", "comments": []}, {"number": 52460, "title": "[tensorflow/compiler/jit/compilability_check_util.cc] Add calls to `reserve()` before populating vector", "body": "https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)", "comments": []}]